{"version":3,"sources":["../../../node_modules/react-final-form/dist/react-final-form.es.js","../../../node_modules/final-form/dist/final-form.es.js","../../../node_modules/@babel/runtime/helpers/esm/extends.js","../../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../src/theme.js","../../../src/CssReset.js","../../../src/CssVariables.js","../../../src/Constrictor.js","../../../src/AlertBar/Action.js","../../../src/AlertBar/Actions.js","../../../src/icons/Close.js","../../../src/AlertBar/Dismiss.js","../../../src/icons/Status.js","../../../src/AlertBar/Icon.js","../../../src/AlertBar/Message.js","../../../src/AlertBar/styles.js","../../../src/AlertBar.js","../../../src/AlertStack.js","../../../src/common-prop-types.js","../../../src/Button/styles.js","../../../src/Button.js","../../../src/Card.js","../../../src/icons/Checkbox.js","../../../src/Checkbox.js","../../../src/Field.js","../../../src/Help.js","../../../src/Label/Required.js","../../../src/ToggleField/AddRequired.js","../../../src/ToggleField.js","../../../src/CheckboxField.js","../../../src/ToggleGroup/Spacer.js","../../../src/ToggleGroup.js","../../../src/CheckboxGroup.js","../../../src/FieldSet.js","../../../src/Legend.js","../../../src/ToggleGroupField.js","../../../src/CheckboxGroupField.js","../../../src/Chip/Content.js","../../../src/Chip/Icon.js","../../../src/icons/Cancel--outline.js","../../../src/Chip/Remove.js","../../../src/Chip.js","../../../src/CircularLoader.js","../../../src/ComponentCover.js","../../../src/Divider.js","../../../src/icons/Upload.js","../../../src/FileInput.js","../../../src/FileList.js","../../../src/FileListPlaceholder.js","../../../src/Label.js","../../../src/FileInputField.js","../../../src/icons/AttachFile.js","../../../src/FileListItem.js","../../../src/FileInputFieldWithList/FileListItemWithRemove.js","../../../src/FileInputFieldWithList.js","../../../src/Input.js","../../../src/InputField.js","../../../src/LinearLoader.js","../../../src/Logo/LogoSvg.js","../../../src/Logo/LogoIconSvg.js","../../../src/Logo.js","../../../src/icons/Chevron.js","../../../src/MenuItem/MenuItemContent/styles.js","../../../src/MenuItem/MenuItemContent.js","../../../src/Popper/modifiers.js","../../../src/Popper.js","../../../src/MenuItem/SubMenu.js","../../../src/MenuItem.js","../../../src/MenuList.js","../../../src/LayerContext.js","../../../src/Backdrop.js","../../../src/Popover/Arrow.js","../../../src/Popover/modifiers.js","../../../src/Popover.js","../../../src/icons/Radio.js","../../../src/Radio.js","../../../src/RadioGroup.js","../../../src/RadioGroupField.js","../../../src/ScreenCover.js","../../../src/icons/Switch.js","../../../src/Switch.js","../../../src/SwitchField.js","../../../src/SwitchGroup.js","../../../src/SwitchGroupField.js","../../../src/Tag/TagIcon.js","../../../src/Tag/TagText.js","../../../src/Tag.js","../../../src/TextArea/styles.js","../../../src/TextArea.js","../../../src/TextAreaField.js","../../../src/Select/ArrowDown.js","../../../src/Select/InputWrapper.js","../../../src/Select/MenuWrapper.js","../../../src/Select.js","../../../src/Select/option-helpers.js","../../../src/SingleSelect/Selection.js","../../../src/Select/InputPlaceholder.js","../../../src/Select/InputPrefix.js","../../../src/Select/InputClearButton.js","../../../src/SingleSelect/Input.js","../../../src/Select/Empty.js","../../../src/SingleSelect/Menu.js","../../../src/Select/FilterInput.js","../../../src/Select/NoMatch.js","../../../src/Select/FilterableMenu.js","../../../src/SingleSelect/FilterableMenu.js","../../../src/Select/Loading.js","../../../src/SingleSelect.js","../../../src/SingleSelectField.js","../../../src/SingleSelectOption.js","../../../src/MultiSelect/SelectionList.js","../../../src/MultiSelect/Input.js","../../../src/MultiSelect/Menu.js","../../../src/MultiSelect/FilterableMenu.js","../../../src/MultiSelect.js","../../../src/MultiSelectField.js","../../../src/MultiSelectOption.js","../../../src/TableBody.js","../../../src/TableCell.js","../../../src/TableCellHead.js","../../../src/Table.js","../../../src/TableFoot.js","../../../src/TableHead.js","../../../src/TableRow.js","../../../src/TableRowHead.js","../../../src/StackedTableBody.js","../../../src/StackedTableCell/ContentWithTitle.js","../../../src/StackedTableCell.js","../../../src/StackedTableCellHead.js","../../../src/StackedTableHead.js","../../../src/StackedTable/extractHeaderLabels.js","../../../src/StackedTable/TableContext.js","../../../src/StackedTable/Table.js","../../../src/StackedTable.js","../../../src/StackedTableFoot.js","../../../src/StackedTableRow/addColNumToChildren.js","../../../src/StackedTableRow.js","../../../src/StackedTableRow/supplyHeaderLabelsToChildren.js","../../../src/StackedTableRowHead.js","../../../src/ButtonStrip.js","../../../src/icons/Arrow.js","../../../src/DropdownButton.js","../../../src/Menu.js","../../../src/Node/Toggle.js","../../../src/Node/Spacer.js","../../../src/Node/Leaves.js","../../../src/Node.js","../../../src/Modal/ModalCard.js","../../../src/Modal.js","../../../src/ModalActions.js","../../../src/ModalContent.js","../../../src/ModalTitle.js","../../../src/SplitButton.js","../../../src/Tab.js","../../../src/TabBar/detectHorizontalScrollbarHeight.js","../../../src/TabBar/animatedSideScroll.js","../../../src/TabBar/ScrollBar.js","../../../src/TabBar/Tabs.js","../../../src/TabBar.js","../../../src/components/shared/helpers/createBlurHandler.js","../../../src/components/shared/helpers/createFocusHandler.js","../../../src/components/shared/helpers/createChangeHandler.js","../../../src/components/shared/helpers/hasError.js","../../../src/components/shared/helpers/getValidationText.js","../../../src/components/shared/helpers/isValid.js","../../../src/components/shared/propTypes.js","../../../src/components/Checkbox.js","../../../src/components/CheckboxGroup.js","../../../src/components/FileInput.js","../../../src/components/Input.js","../../../src/components/MultiSelect.js","../../../src/components/RadioGroup.js","../../../src/components/SingleSelect.js","../../../src/components/Switch.js","../../../src/components/TextArea.js","../../../src/validators/alphaNumeric.js","../../../src/validators/boolean.js","../../../src/validators/dhis2Password.js","../../../src/validators/dhis2Username.js","../../../src/validators/email.js","../../../src/validators/hasValue.js","../../../src/validators/integer.js","../../../src/validators/internationalPhoneNumber.js","../../../src/validators/number.js","../../../src/validators/string.js","../../../src/validators/url.js"],"names":["renderComponent","props","lazyProps","name","render","children","component","rest","_objectWithoutPropertiesLoose","createElement","Object","assign","undefined","Error","useWhenValueChanges","value","callback","isEqual","a","b","previous","React__default","useRef","useEffect","current","shallowEqual","keysA","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","isSyntheticEvent","candidate","stopPropagation","ReactFinalFormContext","createContext","useLatest","ref","addLazyState","dest","state","forEach","defineProperty","get","enumerable","addLazyFormState","versions","version$1","all","formSubscriptionItems","reduce","result","ReactFinalForm","_ref","debug","decorators","destroyOnUnregister","alternateFormApi","form","initialValues","initialValuesEqual","keepDirtyOnReinitialize","mutators","onSubmit","_ref$subscription","subscription","validate","validateOnBlur","config","init","useConstant","f","createForm","pauseValidation","_React$useState","useState","initialState","subscribe","setState","stateRef","isValidationPaused","resumeValidation","unsubscriptions","s","concat","map","decorator","reverse","unsubscribe","setConfig","renderProps","_extends","reset","eventOrValues","handleSubmit","event","preventDefault","submit","Provider","__versions","useForm","componentName","useContext","isReactNative","window","navigator","product","all$1","fieldSubscriptionItems","defaultFormat","defaultParse","defaultIsEqual","useField","_config","afterSubmit","allowNull","data","defaultValue","_config$format","format","formatOnBlur","initialValue","multiple","_config$parse","parse","_config$subscription","type","validateFields","_value","configRef","register","silent","registerField","beforeSubmit","_configRef$current","_configRef$current$fo","getFieldState","formatted","change","getValidator","firstRender","handlers","onBlur","useCallback","blur","fieldState","onChange","target","currentValue","valueProp","nativeEvent","text","_detypedEvent$target","checked","Array","isArray","index","indexOf","slice","options","option","selected","push","getSelectedValues","getValue","onFocus","focus","meta","addLazyFieldMetaState","input","Field","field","keysCache","keysRegex","toPath","split","filter","Boolean","getIn","complexKey","path","i","isNaN","_toPropertyKey","arg","hint","prim","Symbol","toPrimitive","res","call","TypeError","String","Number","_toPrimitive","setIn","destroyArrays","setInRecursor","_extends2","_result2","_result","numKeys","numericKey","_result3","_array","array","splice","FORM_ERROR","ARRAY_ERROR","publishFieldState","formState","errors","lastSubmittedValues","submitErrors","submitFailed","submitSucceeded","submitting","values","active","modified","modifiedSinceLastSubmit","touched","validating","visited","error","submitError","initial","pristine","valid","dirty","dirtySinceLastSubmit","invalid","subscriptionFilter","src","shallowEqualKeys","different","filterFieldState","previousState","force","shallowEqualKeys$1","filterFormState","memoize","fn","lastArgs","lastResult","_len","arguments","args","_key","some","apply","isPromise","obj","then","version","tripleEquals","hasAnyError","notifySubscriber","subscriber","lastState","notification","notify","_ref2","entries","entry","notified","subscribers","fieldSubscribers","fields","lastFormState","inBatch","validationPaused","validationBlocked","nextAsyncValidationKey","asyncValidationPromises","changeValue","mutate","after","renameField","from","to","_extends3","api","lastFieldState","getMutatorApi","mutatableState","returnValue","resetFieldState","runValidation","notifyFieldListeners","notifyFormListeners","mutatorsApi","getValidators","validators","validator","fieldChanged","safeFields","fieldKeys","limitedFieldLevelValidation","changedField","recordLevelErrors","fieldLevelErrors","promises","setErrors","errorsOrPromise","runRecordLevelValidation","setError","errorOrPromise","promise","runFieldLevelValidation","hasAsyncValidations","asyncValidationPromiseKey","Promise","processErrors","merged","forEachError","recordLevelError","errorFromParent","hasFieldLevelValidation","fieldLevelError","existing","copy","afterPromise","notifyField","fieldSubscriber","markAllFieldsTouched","calculateNextFormState","safeFieldKeys","foundDirty","dirtyFields","dirtyFieldsSinceLastSubmit","nonNullLastSubmittedValues","nextFormState","hasSubmitErrors","hasValidationErrors","convertToExternalFormState","_safeFieldKeys$reduce","notifying","scheduleNotification","batch","getRegisteredFields","getState","initialize","savedDirtyValues","fieldConfig","haveValidator","validatorRemoved","lastOne","restart","asyncValidationPromisesKeys","console","resolvePromise","completeCalled","complete","resolve","memoized","source","this","excluded","sourceKeys","colors","blue900","blue800","blue700","blue600","blue500","blue400","blue300","blue200","blue100","blue050","teal900","teal800","teal700","teal600","teal500","teal400","teal300","teal200","teal100","teal050","red900","red800","red700","red600","red500","red400","red300","red200","red100","red050","yellow900","yellow800","yellow700","yellow600","yellow500","yellow400","yellow300","yellow200","yellow100","yellow050","green900","green800","green700","green600","green500","green400","green300","green200","green100","green050","grey900","grey800","grey700","grey600","grey500","grey400","grey300","grey200","grey100","grey050","white","theme","fonts","primary900","primary800","primary700","primary600","primary500","primary400","primary300","primary200","primary100","primary050","secondary900","secondary800","secondary700","secondary600","secondary500","secondary400","secondary300","secondary200","secondary100","secondary050","default","warning","disabled","layers","applicationTop","blocking","alert","spacersNum","dp4","dp8","dp12","dp16","dp24","dp32","dp48","dp64","dp96","dp128","dp192","dp256","dp384","dp512","dp640","spacers","elevations","e100","e200","e300","e400","toPrefixedThemeSection","themeSectionKey","prefixed","toCustomPropertyString","themeSection","CssVariables","allowedProps","variables","prop","propTypes","bool","Constrictor","dataTest","data-test","width","minWidth","maxWidth","string","onClick","Action","hide","label","isRequired","Actions","actions","action","actionsPropType","Close","className","xmlns","viewBox","d","Dismiss","Valid","Warning","Info","Loading","cx","cy","r","fill","strokeWidth","StatusIcon","defaultTo","info","loading","Icon","icon","React","iconPropType","alertStatePropType","critical","success","Message","ANIMATION_TIME","visible","hidden","setTimeout","elapsedTime","Date","timeRemaining","clearTimeout","onHidden","componentDidMount","componentDidUpdate","_prevProps","prevState","componentWillUnmount","show","requestAnimationFrame","shouldAutoHide","permanent","onMouseEnter","onMouseLeave","alertTypePropType","AlertBar","duration","func","AlertStack","createPortal","document","statusPropType","buttonVariantPropType","sizePropType","singleSelectedPropType","multiSelectedPropType","insideAlignmentPropType","referencePlacementPropType","elementRefPropType","createRef","e","createHandlerPayload","tabIndex","Button","destructive","initialFocus","large","primary","secondary","small","Card","commonStyles","Regular","x","y","height","rx","Dense","prevProps","setIndeterminate","indeterminate","classes","dense","Checkbox","uniqueOnStatePropType","Help","Required","AddRequired","required","ToggleField","toggleComponent","ToggleComponent","helpText","validationText","CheckboxField","Spacer","ToggleGroup","Children","child","cloneElement","CheckboxGroup","FieldSet","Legend","ToggleGroupField","classname","CheckboxGroupField","Content","overflow","CancelOutline","element","containerStyle","removeIcon","Remove","onRemove","Chip","dragging","CircularLoader","role","ComponentCover","Divider","margin","Upload","files","id","accept","FileInput","buttonLabel","FileList","FileListPlaceholder","styles","constructClassName","Label","htmlFor","FileInputField","placeholder","AttachFile","FileListItem","onCancel","cancelText","removeText","file","FileListItemWithRemove","fileList","updateFileArray","fileToRemove","newFiles","FileInputFieldWithList","readOnly","Input","InputField","inputWidth","Progress","amount","LinearLoader","LogoSvg","LogoIconSvg","iconColor","textColor","LogoIcon","LogoIconWhite","Logo","LogoWhite","ChevronRight","ChevronLeft","subChevron","createOnClickHandler","evt","MenuItemContent","forwardRef","showChevron","isClickable","href","LinkElement","linkElementProps","onMouseOver","onMouseOut","preventOverflow","altAxis","rootBoundary","boundary","body","flip","placement","createPopper","reference","popperRef","modifiers","deduplicateModifiers","baseModifiers","m","popperInstance","Popper","object","strategy","onFirstUpdate","createMenuItemMouseOutHandler","setOpen","createPopperMouseOutHandler","menuItemRef","SubMenu","open","MenuItem","MenuList","LayerContext","useLayer","zIndex","context","layer","getStackedLayer","Layer","newLayer","number","Backdrop","zIndexComputed","transparent","Arrow","data-popper-arrow","ARROW_SIZE","offset","arroModifiers","padding","Math","computeArrowPadding","enabled","phase","displacement","referenceRect","shouldHideArrow","requires","Popover","onBackdropClick","arrow","elevation","Radio","RadioGroup","RadioGroupField","position","ScreenCover","Switch","SwitchField","SwitchGroup","SwitchGroupField","TagIcon","node","TagText","Tag","bold","tagVariantPropType","negative","neutral","positive","textarea","textareaRef","clientHeight","oldHeight","newHeight","newWidth","shouldDoAutoGrow","attachResizeListener","removeResizeListener","setHeight","autoGrow","rows","TextArea","resize","TextAreaField","ArrowDown","stroke","fillRule","InputWrapper","inputRef","classNames","onToggle","MenuWrapper","selectRef","cardClassName","ReactDOM","maxHeight","menuWidth","keyCode","shouldOpen","handleChange","inputProps","menuProps","handleClose","handleFocusInput","menu","onKeyDown","Select","checkIfValidOption","filterIgnored","findOptionChild","targetOption","optionChildren","currentOption","matchesLabel","matchesValue","removeOption","optionArray","Selection","selectedOption","InputPlaceholder","InputPrefix","prefix","InputClearButton","clearText","onClear","inputMaxHeight","hasSelection","_","clearable","Empty","message","onIgnoredClick","Menu","renderedOptions","empty","isDisabled","isActive","isIgnored","FilterInput","NoMatch","onFilterChange","filtered","hasMatch","noMatchText","FilterableMenu","SingleSelect","filterable","filterPlaceholder","loadingText","SingleSelectField","SingleSelectOption","data-value","data-label","SelectionList","createRemoveHandler","onDisabledClick","clickedOption","createHandler","MultiSelect","MultiSelectField","checkboxClassname","MultiSelectOption","TableBody","tableCellStyles","TableCell","colSpan","rowSpan","tableCellHeadStyles","TableCellHead","tableStyles","Table","TableFoot","TableHead","tableRowStyles","TableRow","TableRowHead","StackedTableBody","data-tset","ContentWithTitle","title","StackedTableCell","cellTitle","headerLabels","realTitle","hideTitle","column","StackedTableCellHead","StackedTableHead","isChildTableHead","extractChildrenProp","mapCellsToLabels","rowChildren","labels","row","count","cell","parseInt","extractLabelFromCell","extractHeaderLabels","flattened","extractRowsFromTableChildren","rowCount","columnCount","colIndex","__","rowIndex","val","colLabels","combineRowLables","total","col","TableContext","Consumer","StackedTable","contextHeaderLabels","StackedTableFoot","StackedTableRow","supplyHeaderLabelsToChildren","curCol","addColNumToChildren","StackedTableRowHead","ButtonStrip","end","alignmentPropType","ArrowUp","transform","middle","ArrowIconComponent","anchorRef","DropdownButton","Toggle","onClose","onOpen","Leaves","Node","hasLeaves","showArrow","showSpacer","cardBoxStyle","ModalCard","Modal","ModalActions","ModalContent","ModalTitle","rightButton","payload","SplitButton","Tab","horizontalScrollbarHeight","animatedSideScroll","scrollBox","goBackwards","startValue","endValue","scrollDistance","inverter","getEndValue","step","timestamp","startTimestamp","scrollValue","currentTime","DURATION","easeInOutQuad","createFrameStepper","scrolledToStart","scrolledToEnd","style","el","detectHorizontalScrollbarHeight","scroll","offsetWidth","areaOffsetWidth","scrollArea","scrollLeft","scrollSelectedTabIntoView","scrollBoxEl","tab","tabEnd","attachSideScrollListener","removeSideScrollListener","ScrollBar","Tabs","fixed","TabBar","scrollable","createBlurHandler","createFocusHandler","Set","hasError","getValidationText","isValid","showValidStatus","toggleGroupOptionsProp","inputPropType","metaPropType","createChangeHandler","activeIndex","currentValues","valueArray","checkedValue","btnLabel","i18n","btnLabelMulti","multifile","currentFiles","newFileList","acc","unique","dedupeAndConcat","fileToDelete"],"mappings":"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","file":"static/js/131.ccdbdb5a.chunk.js","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport React__default, { createElement, createContext, useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { formSubscriptionItems, createForm, version as version$1, fieldSubscriptionItems } from 'final-form';\n\n// shared logic between components that use either render prop,\n// children render function, or component prop\nfunction renderComponent(props, lazyProps, name) {\n  var render = props.render,\n      children = props.children,\n      component = props.component,\n      rest = _objectWithoutPropertiesLoose(props, [\"render\", \"children\", \"component\"]);\n\n  if (component) {\n    return createElement(component, Object.assign(lazyProps, rest, {\n      children: children,\n      render: render\n    }));\n  }\n\n  if (render) {\n    return render(children === undefined ? Object.assign(lazyProps, rest) : // inject children back in\n    Object.assign(lazyProps, rest, {\n      children: children\n    }));\n  }\n\n  if (typeof children !== 'function') {\n    throw new Error(\"Must specify either a render prop, a render function as children, or a component prop to \" + name);\n  }\n\n  return children(Object.assign(lazyProps, rest));\n}\n\nfunction useWhenValueChanges(value, callback, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = function isEqual(a, b) {\n      return a === b;\n    };\n  }\n\n  var previous = React__default.useRef(value);\n  React__default.useEffect(function () {\n    if (!isEqual(value, previous.current)) {\n      callback();\n      previous.current = value;\n    }\n  });\n}\n\n/**\n * A simple hook to create a constant value that lives for\n * the lifetime of the component.\n *\n * Plagiarized from https://github.com/Andarist/use-constant\n *\n * Do NOT reuse this code unless you know what you're doing.\n * Use Andarist's hook; it's more fault tolerant to things like\n * falsy values.\n *\n * @param {Function} init - A function to generate the value\n */\n\nfunction useConstant(init) {\n  var ref = React__default.useRef();\n\n  if (!ref.current) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isSyntheticEvent = function isSyntheticEvent(candidate) {\n  return !!(candidate && typeof candidate.stopPropagation === 'function');\n};\n\nvar ReactFinalFormContext = createContext();\n\nfunction useLatest(value) {\n  var ref = React__default.useRef(value);\n  React__default.useEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n}\n\nvar version = \"6.4.0\";\n\nvar addLazyState = function addLazyState(dest, state, keys) {\n  keys.forEach(function (key) {\n    Object.defineProperty(dest, key, {\n      get: function get() {\n        return state[key];\n      },\n      enumerable: true\n    });\n  });\n};\n\nvar addLazyFormState = function addLazyFormState(dest, state) {\n  return addLazyState(dest, state, ['active', 'dirty', 'dirtyFields', 'dirtySinceLastSubmit', 'dirtyFieldsSinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'pristine', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'values', 'visited']);\n};\nvar addLazyFieldMetaState = function addLazyFieldMetaState(dest, state) {\n  return addLazyState(dest, state, ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'visited']);\n};\n\nvar versions = {\n  'final-form': version$1,\n  'react-final-form': version\n};\nvar all = formSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nfunction ReactFinalForm(_ref) {\n  var debug = _ref.debug,\n      decorators = _ref.decorators,\n      destroyOnUnregister = _ref.destroyOnUnregister,\n      alternateFormApi = _ref.form,\n      initialValues = _ref.initialValues,\n      initialValuesEqual = _ref.initialValuesEqual,\n      keepDirtyOnReinitialize = _ref.keepDirtyOnReinitialize,\n      mutators = _ref.mutators,\n      onSubmit = _ref.onSubmit,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription,\n      validate = _ref.validate,\n      validateOnBlur = _ref.validateOnBlur,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"debug\", \"decorators\", \"destroyOnUnregister\", \"form\", \"initialValues\", \"initialValuesEqual\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"subscription\", \"validate\", \"validateOnBlur\"]);\n\n  var config = {\n    debug: debug,\n    destroyOnUnregister: destroyOnUnregister,\n    initialValues: initialValues,\n    keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n    mutators: mutators,\n    onSubmit: onSubmit,\n    validate: validate,\n    validateOnBlur: validateOnBlur\n  };\n  var form = useConstant(function () {\n    var f = alternateFormApi || createForm(config); // pause validation until children register all fields on first render (unpaused in useEffect() below)\n\n    f.pauseValidation();\n    return f;\n  }); // synchronously register and unregister to query form state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1]; // save a copy of state that can break through the closure\n  // on the shallowEqual() line below.\n\n\n  var stateRef = useLatest(state);\n  useEffect(function () {\n    // We have rendered, so all fields are now registered, so we can unpause validation\n    form.isValidationPaused() && form.resumeValidation();\n    var unsubscriptions = [form.subscribe(function (s) {\n      if (!shallowEqual(s, stateRef.current)) {\n        setState(s);\n      }\n    }, subscription)].concat(decorators ? decorators.map(function (decorator) {\n      return (// this noop ternary is to appease the flow gods\n        // istanbul ignore next\n        decorator(form)\n      );\n    }) : []);\n    return function () {\n      form.pauseValidation(); // pause validation so we don't revalidate on every field deregistration\n\n      unsubscriptions.reverse().forEach(function (unsubscribe) {\n        return unsubscribe();\n      }); // don't need to resume validation here; either unmounting, or will re-run this hook with new deps\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [decorators]); // warn about decorator changes\n  // istanbul ignore next\n\n  if (process.env.NODE_ENV !== 'production') {\n    // You're never supposed to use hooks inside a conditional, but in this\n    // case we can be certain that you're not going to be changing your\n    // NODE_ENV between renders, so this is safe.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useWhenValueChanges(decorators, function () {\n      console.error('Form decorators should not change from one render to the next as new values will be ignored');\n    }, shallowEqual);\n  } // allow updatable config\n\n\n  useWhenValueChanges(debug, function () {\n    form.setConfig('debug', debug);\n  });\n  useWhenValueChanges(destroyOnUnregister, function () {\n    form.destroyOnUnregister = !!destroyOnUnregister;\n  });\n  useWhenValueChanges(keepDirtyOnReinitialize, function () {\n    form.setConfig('keepDirtyOnReinitialize', keepDirtyOnReinitialize);\n  });\n  useWhenValueChanges(initialValues, function () {\n    form.setConfig('initialValues', initialValues);\n  }, initialValuesEqual || shallowEqual);\n  useWhenValueChanges(mutators, function () {\n    form.setConfig('mutators', mutators);\n  });\n  useWhenValueChanges(onSubmit, function () {\n    form.setConfig('onSubmit', onSubmit);\n  });\n  useWhenValueChanges(validate, function () {\n    form.setConfig('validate', validate);\n  });\n  useWhenValueChanges(validateOnBlur, function () {\n    form.setConfig('validateOnBlur', validateOnBlur);\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    if (event) {\n      // sometimes not true, e.g. React Native\n      if (typeof event.preventDefault === 'function') {\n        event.preventDefault();\n      }\n\n      if (typeof event.stopPropagation === 'function') {\n        // prevent any outer forms from receiving the event too\n        event.stopPropagation();\n      }\n    }\n\n    return form.submit();\n  };\n\n  var renderProps = {\n    form: _extends({}, form, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          form.reset();\n        } else {\n          form.reset(eventOrValues);\n        }\n      }\n    }),\n    handleSubmit: handleSubmit\n  };\n  addLazyFormState(renderProps, state);\n  return createElement(ReactFinalFormContext.Provider, {\n    value: form\n  }, renderComponent(_extends({}, rest, {\n    __versions: versions\n  }), renderProps, 'ReactFinalForm'));\n}\n\nfunction useForm(componentName) {\n  var form = useContext(ReactFinalFormContext);\n\n  if (!form) {\n    throw new Error((componentName || 'useForm') + \" must be used inside of a <Form> component\");\n  }\n\n  return form;\n}\n\nfunction useFormState(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onChange = _ref.onChange,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription;\n\n  var form = useForm('useFormState');\n  var firstRender = useRef(true);\n  var onChangeRef = useRef(onChange);\n  onChangeRef.current = onChange; // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n\n    if (onChange) {\n      onChange(initialState);\n    }\n\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useEffect(function () {\n    return form.subscribe(function (newState) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(newState);\n\n        if (onChangeRef.current) {\n          onChangeRef.current(newState);\n        }\n      }\n    }, subscription);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var lazyState = {};\n  addLazyFormState(lazyState, state);\n  return lazyState;\n}\n\nfunction FormSpy(_ref) {\n  var onChange = _ref.onChange,\n      subscription = _ref.subscription,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"onChange\", \"subscription\"]);\n\n  var reactFinalForm = useForm('FormSpy');\n  var state = useFormState({\n    onChange: onChange,\n    subscription: subscription\n  });\n\n  if (onChange) {\n    return null;\n  }\n\n  var renderProps = {\n    form: _extends({}, reactFinalForm, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          reactFinalForm.reset();\n        } else {\n          reactFinalForm.reset(eventOrValues);\n        }\n      }\n    })\n  };\n  return renderComponent(_extends({}, rest, {}, renderProps), state, 'FormSpy');\n}\n\nvar isReactNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, currentValue, valueProp, isReactNative) {\n  if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n    return event.nativeEvent.text;\n  }\n\n  if (isReactNative && event.nativeEvent) {\n    return event.nativeEvent.text;\n  }\n\n  var detypedEvent = event;\n  var _detypedEvent$target = detypedEvent.target,\n      type = _detypedEvent$target.type,\n      value = _detypedEvent$target.value,\n      checked = _detypedEvent$target.checked;\n\n  switch (type) {\n    case 'checkbox':\n      if (valueProp !== undefined) {\n        // we are maintaining an array, not just a boolean\n        if (checked) {\n          // add value to current array value\n          return Array.isArray(currentValue) ? currentValue.concat(valueProp) : [valueProp];\n        } else {\n          // remove value from current array value\n          if (!Array.isArray(currentValue)) {\n            return currentValue;\n          }\n\n          var index = currentValue.indexOf(valueProp);\n\n          if (index < 0) {\n            return currentValue;\n          } else {\n            return currentValue.slice(0, index).concat(currentValue.slice(index + 1));\n          }\n        }\n      } else {\n        // it's just a boolean\n        return !!checked;\n      }\n\n    case 'select-multiple':\n      return getSelectedValues(event.target.options);\n\n    default:\n      return value;\n  }\n};\n\nvar all$1 = fieldSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nvar defaultFormat = function defaultFormat(value, name) {\n  return value === undefined ? '' : value;\n};\n\nvar defaultParse = function defaultParse(value, name) {\n  return value === '' ? undefined : value;\n};\n\nvar defaultIsEqual = function defaultIsEqual(a, b) {\n  return a === b;\n};\n\nfunction useField(name, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var _config = config,\n      afterSubmit = _config.afterSubmit,\n      allowNull = _config.allowNull,\n      component = _config.component,\n      data = _config.data,\n      defaultValue = _config.defaultValue,\n      _config$format = _config.format,\n      format = _config$format === void 0 ? defaultFormat : _config$format,\n      formatOnBlur = _config.formatOnBlur,\n      initialValue = _config.initialValue,\n      multiple = _config.multiple,\n      _config$parse = _config.parse,\n      parse = _config$parse === void 0 ? defaultParse : _config$parse,\n      _config$subscription = _config.subscription,\n      subscription = _config$subscription === void 0 ? all$1 : _config$subscription,\n      type = _config.type,\n      validateFields = _config.validateFields,\n      _value = _config.value;\n  var form = useForm('useField');\n  var configRef = useLatest(config);\n\n  var register = function register(callback, silent) {\n    return (// avoid using `state` const in any closures created inside `register`\n      // because they would refer `state` from current execution context\n      // whereas actual `state` would defined in the subsequent `useField` hook\n      // execution\n      // (that would be caused by `setState` call performed in `register` callback)\n      form.registerField(name, callback, subscription, {\n        afterSubmit: afterSubmit,\n        beforeSubmit: function beforeSubmit() {\n          var _configRef$current = configRef.current,\n              beforeSubmit = _configRef$current.beforeSubmit,\n              formatOnBlur = _configRef$current.formatOnBlur,\n              _configRef$current$fo = _configRef$current.format,\n              format = _configRef$current$fo === void 0 ? defaultFormat : _configRef$current$fo;\n\n          if (formatOnBlur) {\n            var _ref = form.getFieldState(name),\n                value = _ref.value;\n\n            var formatted = format(value, name);\n\n            if (formatted !== value) {\n              form.change(name, formatted);\n            }\n          }\n\n          return beforeSubmit && beforeSubmit();\n        },\n        data: data,\n        defaultValue: defaultValue,\n        getValidator: function getValidator() {\n          return configRef.current.validate;\n        },\n        initialValue: initialValue,\n        isEqual: function isEqual(a, b) {\n          return (configRef.current.isEqual || defaultIsEqual)(a, b);\n        },\n        silent: silent,\n        validateFields: validateFields\n      })\n    );\n  };\n\n  var firstRender = useRef(true); // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {}; // temporarily disable destroyOnUnregister\n\n    var destroyOnUnregister = form.destroyOnUnregister;\n    form.destroyOnUnregister = false;\n    register(function (state) {\n      initialState = state;\n    }, true)(); // return destroyOnUnregister to its original value\n\n    form.destroyOnUnregister = destroyOnUnregister;\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useEffect(function () {\n    return register(function (state) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(state);\n      }\n    }, false);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [name, data, defaultValue, // If we want to allow inline fat-arrow field-level validation functions, we\n  // cannot reregister field every time validate function !==.\n  // validate,\n  initialValue // The validateFields array is often passed as validateFields={[]}, creating\n  // a !== new array every time. If it needs to be changed, a rerender/reregister\n  // can be forced by changing the key prop\n  // validateFields\n  ]);\n  var handlers = {\n    onBlur: useCallback(function (event) {\n      state.blur();\n\n      if (formatOnBlur) {\n        /**\n         * Here we must fetch the value directly from Final Form because we cannot\n         * trust that our `state` closure has the most recent value. This is a problem\n         * if-and-only-if the library consumer has called `onChange()` immediately\n         * before calling `onBlur()`, but before the field has had a chance to receive\n         * the value update from Final Form.\n         */\n        var fieldState = form.getFieldState(state.name);\n        state.change(format(fieldState.value, state.name));\n      }\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state.name, format, formatOnBlur]),\n    onChange: useCallback(function (event) {\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== 'production' && event && event.target) {\n        var targetType = event.target.type;\n        var unknown = ~['checkbox', 'radio', 'select-multiple'].indexOf(targetType) && !type;\n\n        var _value2 = targetType === 'select-multiple' ? state.value : _value;\n\n        if (unknown) {\n          console.error(\"You must pass `type=\\\"\" + (targetType === 'select-multiple' ? 'select' : targetType) + \"\\\"` prop to your Field(\" + name + \") component.\\n\" + (\"Without it we don't know how to unpack your `value` prop - \" + (Array.isArray(_value2) ? \"[\" + _value2 + \"]\" : \"\\\"\" + _value2 + \"\\\"\") + \".\"));\n        }\n      }\n\n      var value = event && event.target ? getValue(event, state.value, _value, isReactNative) : event;\n      state.change(parse(value, name));\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [_value, name, parse, state.change, state.value, type]),\n    onFocus: useCallback(function (event) {\n      state.focus(); // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n  };\n  var meta = {};\n  addLazyFieldMetaState(meta, state);\n\n  var input = _extends({\n    name: name,\n\n    get value() {\n      var value = state.value;\n\n      if (formatOnBlur) {\n        if (component === 'input') {\n          value = defaultFormat(value);\n        }\n      } else {\n        value = format(value, name);\n      }\n\n      if (value === null && !allowNull) {\n        value = '';\n      }\n\n      if (type === 'checkbox' || type === 'radio') {\n        return _value;\n      } else if (component === 'select' && multiple) {\n        return value || [];\n      }\n\n      return value;\n    },\n\n    get checked() {\n      if (type === 'checkbox') {\n        if (_value === undefined) {\n          return !!state.value;\n        } else {\n          return !!(Array.isArray(state.value) && ~state.value.indexOf(_value));\n        }\n      } else if (type === 'radio') {\n        return state.value === _value;\n      }\n\n      return undefined;\n    }\n\n  }, handlers);\n\n  if (multiple) {\n    input.multiple = multiple;\n  }\n\n  if (type !== undefined) {\n    input.type = type;\n  }\n\n  var renderProps = {\n    input: input,\n    meta: meta\n  }; // assign to force Flow check\n\n  return renderProps;\n}\n\nvar Field = function Field(_ref) {\n  var afterSubmit = _ref.afterSubmit,\n      allowNull = _ref.allowNull,\n      beforeSubmit = _ref.beforeSubmit,\n      children = _ref.children,\n      component = _ref.component,\n      data = _ref.data,\n      defaultValue = _ref.defaultValue,\n      format = _ref.format,\n      formatOnBlur = _ref.formatOnBlur,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      parse = _ref.parse,\n      subscription = _ref.subscription,\n      type = _ref.type,\n      validate = _ref.validate,\n      validateFields = _ref.validateFields,\n      value = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"children\", \"component\", \"data\", \"defaultValue\", \"format\", \"formatOnBlur\", \"initialValue\", \"isEqual\", \"multiple\", \"name\", \"parse\", \"subscription\", \"type\", \"validate\", \"validateFields\", \"value\"]);\n\n  var field = useField(name, {\n    afterSubmit: afterSubmit,\n    allowNull: allowNull,\n    beforeSubmit: beforeSubmit,\n    children: children,\n    component: component,\n    data: data,\n    defaultValue: defaultValue,\n    format: format,\n    formatOnBlur: formatOnBlur,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    multiple: multiple,\n    parse: parse,\n    subscription: subscription,\n    type: type,\n    validate: validate,\n    validateFields: validateFields,\n    value: value\n  });\n\n  if (typeof children === 'function') {\n    return children(_extends({}, field, {}, rest));\n  }\n\n  if (typeof component === 'string') {\n    // ignore meta, combine input with any other props\n    return createElement(component, _extends({}, field.input, {\n      children: children\n    }, rest));\n  }\n\n  return renderComponent(_extends({\n    children: children,\n    component: component\n  }, rest), field, \"Field(\" + name + \")\");\n};\n\nfunction withTypes() {\n  return {\n    Form: ReactFinalForm,\n    FormSpy: FormSpy\n  };\n}\n\nexport { Field, ReactFinalForm as Form, FormSpy, useField, useForm, useFormState, version, withTypes };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar keysCache = {};\nvar keysRegex = /[.[\\]]+/;\n\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('toPath() expects a string');\n  }\n\n  if (keysCache[key] == null) {\n    keysCache[key] = key.split(keysRegex).filter(Boolean);\n  }\n\n  return keysCache[key];\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== 'object' || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error('Cannot set a non-numeric property on an array');\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      var _removed = current[key],\n          _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error('Cannot set a numeric property on an object');\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = 'FINAL_FORM/form-error';\nvar ARRAY_ERROR = 'FINAL_FORM/array-error';\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      modifiedSinceLastSubmit = field.modifiedSinceLastSubmit,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n}\n\n//      \nvar fieldSubscriptionItems = ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'value', 'visited', 'validating'];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//      \nfunction subscriptionFilter (dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys = ['data'];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = ['active', 'dirty', 'dirtyFields', 'dirtyFieldsSinceLastSubmit', 'dirtySinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitting', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'touched', 'valid', 'validating', 'values', 'visited'];\n\n//      \nvar shallowEqualKeys$1 = ['touched', 'visited'];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n}\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\nvar version = \"4.20.1\";\n\nvar configOptions = ['debug', 'initialValues', 'keepDirtyOnReinitialize', 'mutators', 'onSubmit', 'validate', 'validateOnBlur'];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === 'object' && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== 'undefined';\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      modifiedSinceLastSubmit = _ref.modifiedSinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n    return true;\n  }\n\n  return false;\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber,\n          notified = entry.notified;\n\n      if (notifySubscriber(subscriber, subscription, state, lastState, filter, force || !notified)) {\n        entry.notified = true;\n      }\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error('No config specified');\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error('No onSubmit function specified');\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      modifiedSinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = 0;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        promises.push(errorsOrPromise.then(setErrors));\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 0 || validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            field.validating = false;\n            setError(error);\n          }); // errors must be resolved, not rejected\n\n          promises.push(promise);\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var hasAsyncValidations = promises.length > 0;\n    var asyncValidationPromiseKey = ++nextAsyncValidationKey;\n    var promise = Promise.all(promises).then(clearAsyncValidationPromise(asyncValidationPromiseKey)); // backwards-compat: add promise to submit-blocking promises iff there are any promises to await\n\n    if (hasAsyncValidations) {\n      asyncValidationPromises[asyncValidationPromiseKey] = promise;\n    }\n\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    }; // process sync errors\n\n\n    processErrors(); // sync errors have been set. notify listeners while we wait for others\n\n    callback();\n\n    if (hasAsyncValidations) {\n      state.formState.validating++;\n      callback();\n\n      var afterPromise = function afterPromise() {\n        state.formState.validating--;\n        callback();\n      };\n\n      promise.then(function () {\n        if (nextAsyncValidationKey > asyncValidationPromiseKey) {\n          // if this async validator has been superseded by another, ignore its results\n          return;\n        }\n\n        processErrors();\n      }).then(afterPromise, afterPromise);\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners(name) {\n    if (inBatch) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var notifyField = function notifyField(name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      field.lastFieldState = fieldState;\n      var fieldSubscriber = fieldSubscribers[name];\n\n      if (fieldSubscriber) {\n        notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n      }\n    };\n\n    if (name) {\n      notifyField(name);\n    } else {\n      Object.keys(safeFields).forEach(notifyField);\n    }\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    var dirtyFieldsSinceLastSubmit = safeFieldKeys.reduce(function (result, key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      if (!safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key))) {\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && Object.values(dirtyFieldsSinceLastSubmit).some(function (value) {\n      return value;\n    }));\n    formState.modifiedSinceLastSubmit = !!(formState.lastSubmittedValues && // Object.values would treat values as mixed (facebook/flow#2221)\n    Object.keys(safeFields).some(function (value) {\n      return safeFields[value].modifiedSinceLastSubmit;\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.dirtyFieldsSinceLastSubmit = lastFormState && shallowEqual(lastFormState.dirtyFieldsSinceLastSubmit, dirtyFieldsSinceLastSubmit) ? lastFormState.dirtyFieldsSinceLastSubmit : dirtyFieldsSinceLastSubmit;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== 'production' && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !validationPaused) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).some(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  };\n\n  var resetModifiedAfterSubmit = function resetModifiedAfterSubmit() {\n    return Object.keys(state.fields).forEach(function (key) {\n      return state.fields[key].modifiedSinceLastSubmit = false;\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {\n    notifyFormListeners();\n  });\n  var api = {\n    batch: function batch(fn) {\n      inBatch++;\n      fn();\n      inBatch--;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true,\n            modifiedSinceLastSubmit: !!formState.lastSubmittedValues\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === 'function' ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      /**\n       * Hello, inquisitive code reader! Thanks for taking the time to dig in!\n       *\n       * The following code is the way it is to allow for non-registered deep\n       * field values to be set via initialize()\n       */\n      // save dirty values\n\n\n      var savedDirtyValues = keepDirtyOnReinitialize ? Object.keys(safeFields).reduce(function (result, key) {\n        var field = safeFields[key];\n        var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n        if (!pristine) {\n          result[key] = getIn(formState.values, key);\n        }\n\n        return result;\n      }, {}) : {}; // update initalValues and values\n\n      formState.initialValues = values;\n      formState.values = values; // restore the dirty values\n\n      Object.keys(savedDirtyValues).forEach(function (key) {\n        formState.values = setIn(formState.values, key, savedDirtyValues[key]);\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation() {\n      validationPaused = true;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription,\n        notified: false\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          modifiedSinceLastSubmit: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n\n      var haveValidator = false;\n      var silent = fieldConfig && fieldConfig.silent;\n\n      var notify = function notify() {\n        if (silent) {\n          notifyFieldListeners(name);\n        } else {\n          notifyFormListeners();\n          notifyFieldListeners();\n        }\n      };\n\n      if (fieldConfig) {\n        haveValidator = !!(fieldConfig.getValidator && fieldConfig.getValidator());\n\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        if (fieldConfig.initialValue !== undefined && getIn(state.formState.values, name) === undefined // only initialize if we don't yet have any value for this field\n        ) {\n            state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n            state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n            runValidation(undefined, notify);\n          }\n\n        if (fieldConfig.defaultValue !== undefined && fieldConfig.initialValue === undefined && getIn(state.formState.initialValues, name) === undefined) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      if (haveValidator) {\n        runValidation(undefined, notify);\n      } else {\n        notify();\n      }\n\n      return function () {\n        var validatorRemoved = false; // istanbul ignore next\n\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          validatorRemoved = !!(state.fields[name].validators[index] && state.fields[name].validators[index]());\n          delete state.fields[name].validators[index];\n        }\n\n        delete state.fieldSubscribers[name].entries[index];\n        var lastOne = !Object.keys(state.fieldSubscribers[name].entries).length;\n\n        if (lastOne) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n\n          if (validatorRemoved) {\n            state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          }\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        if (!silent) {\n          if (validatorRemoved) {\n            runValidation(undefined, function () {\n              notifyFormListeners();\n              notifyFieldListeners();\n            });\n          } else if (lastOne) {\n            // values or errors may have changed\n            notifyFormListeners();\n          }\n        }\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        throw Error('Cannot reset() in onSubmit(), use setTimeout(form.reset)');\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n\n    /**\n     * Returns the form to a clean slate; that is:\n     * - Clear all values\n     * - Resets all fields to their initial state\n     */\n    restart: function restart(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      api.batch(function () {\n        for (var name in state.fields) {\n          api.resetFieldState(name);\n          state.fields[name] = _extends({}, state.fields[name], {\n            active: false,\n            lastFieldState: undefined,\n            modified: false,\n            modifiedSinceLastSubmit: false,\n            touched: false,\n            valid: true,\n            validating: false,\n            visited: false\n          });\n        }\n\n        api.reset(initialValues);\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case 'debug':\n          debug = value;\n          break;\n\n        case 'destroyOnUnregister':\n          destroyOnUnregister = value;\n          break;\n\n        case 'initialValues':\n          api.initialize(value);\n          break;\n\n        case 'keepDirtyOnReinitialize':\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case 'mutators':\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case 'onSubmit':\n          onSubmit = value;\n          break;\n\n        case 'validate':\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case 'validateOnBlur':\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error('Unrecognised option ' + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.map(function (key) {\n          return asyncValidationPromises[Number(key)];\n        })).then(api.submit, console.error);\n        return;\n      }\n\n      var submitIsBlocked = beforeSubmit();\n\n      if (submitIsBlocked) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          formState.submitFailed = false;\n          formState.submitSucceeded = true;\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n      resetModifiedAfterSubmit(); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error('No callback given.');\n      }\n\n      if (!subscription) {\n        throw new Error('No subscription provided. What values do you want to listen to?');\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription,\n        notified: false\n      };\n      var nextFormState = calculateNextFormState();\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export const colors = {\n    /* colors */\n\n    /*blue*/\n    blue900: '#093371',\n    blue800: '#0d47a1',\n    blue700: '#1565c0',\n    blue600: '#147cd7',\n    blue500: '#2196f3',\n    blue400: '#42a5f5',\n    blue300: '#90caf9',\n    blue200: '#c5e3fc',\n    blue100: '#e3f2fd',\n    blue050: '#f5fbff',\n\n    /*teal*/\n    teal900: '#00332b',\n    teal800: '#004d40',\n    teal700: '#00695c',\n    teal600: '#00796b',\n    teal500: '#00897b',\n    teal400: '#009688',\n    teal300: '#4db6ac',\n    teal200: '#b2dfdb',\n    teal100: '#e0f2f1',\n    teal050: '#f1f9f9',\n\n    /*red*/\n    red900: '#330202',\n    red800: '#891515',\n    red700: '#b71c1c',\n    red600: '#c62828',\n    red500: '#d32f2f',\n    red400: '#f44336',\n    red300: '#e57373',\n    red200: '#ffcdd2',\n    red100: '#ffe5e8',\n    red050: '#fff5f6',\n\n    /*yellow*/\n    yellow900: '#6f3205',\n    yellow800: '#bb460d',\n    yellow700: '#e56408',\n    yellow600: '#ff8302',\n    yellow500: '#ff9302',\n    yellow400: '#ffa902',\n    yellow300: '#ffc324',\n    yellow200: '#ffe082',\n    yellow100: '#ffecb3',\n    yellow050: '#fff8e1',\n\n    /*green*/\n    green900: '#103713',\n    green800: '#1b5e20',\n    green700: '#2e7d32',\n    green600: '#388e3c',\n    green500: '#43a047',\n    green400: '#4caf50',\n    green300: '#a5d6a7',\n    green200: '#c8e6c9',\n    green100: '#e8f5e9',\n    green050: '#f4fbf4',\n\n    /*grey*/\n    grey900: '#212934',\n    grey800: '#404b5a',\n    grey700: '#4a5768',\n    grey600: '#6e7a8a',\n    grey500: '#a0adba',\n    grey400: '#d5dde5',\n    grey300: '#e8edf2',\n    grey200: '#f3f5f7',\n    grey100: '#f8f9fa',\n    grey050: '#fbfcfd',\n\n    white: '#ffffff',\n}\n\nexport const theme = {\n    /* theme */\n    fonts: 'Roboto, sans-serif',\n\n    /*primary*/\n    primary900: colors.blue900,\n    primary800: colors.blue800,\n    primary700: colors.blue700,\n    primary600: colors.blue600,\n    primary500: colors.blue500,\n    primary400: colors.blue400,\n    primary300: colors.blue300,\n    primary200: colors.blue200,\n    primary100: colors.blue100,\n    primary050: colors.blue050,\n\n    /*secondary*/\n    secondary900: colors.teal900,\n    secondary800: colors.teal800,\n    secondary700: colors.teal700,\n    secondary600: colors.teal600,\n    secondary500: colors.teal500,\n    secondary400: colors.teal400,\n    secondary300: colors.teal300,\n    secondary200: colors.teal200,\n    secondary100: colors.teal100,\n    secondary050: colors.teal050,\n\n    /*status*/\n    default: colors.grey700,\n    error: colors.red500,\n    valid: colors.blue600,\n    warning: colors.yellow500,\n    disabled: colors.grey600,\n}\n\nexport const layers = {\n    applicationTop: 2000,\n    blocking: 3000,\n    alert: 9999,\n}\n\nexport const spacersNum = {\n    dp4: 4,\n    dp8: 8,\n    dp12: 12,\n    dp16: 16,\n    dp24: 24,\n    dp32: 32,\n    dp48: 48,\n    dp64: 64,\n    dp96: 96,\n    dp128: 128,\n    dp192: 192,\n    dp256: 256,\n    dp384: 384,\n    dp512: 512,\n    dp640: 640,\n}\n\nexport const spacers = {\n    dp4: `${spacersNum.dp4}px`,\n    dp8: `${spacersNum.dp8}px`,\n    dp12: `${spacersNum.dp12}px`,\n    dp16: `${spacersNum.dp16}px`,\n    dp24: `${spacersNum.dp24}px`,\n    dp32: `${spacersNum.dp32}px`,\n    dp48: `${spacersNum.dp48}px`,\n    dp64: `${spacersNum.dp64}px`,\n    dp96: `${spacersNum.dp96}px`,\n    dp128: `${spacersNum.dp128}px`,\n    dp192: `${spacersNum.dp192}px`,\n    dp256: `${spacersNum.dp256}px`,\n    dp384: `${spacersNum.dp384}px`,\n    dp512: `${spacersNum.dp512}px`,\n    dp640: `${spacersNum.dp640}px`,\n}\n\n// based on this CodePen: https://codepen.io/j_cpr/pen/oOBLMp\n// which was produced by Joe Cooper\nexport const elevations = {\n    e100: '0 0 1px 0 rgba(64,75,90,0.20), 0 2px 1px 0 rgba(64,75,90,0.28)',\n    e200: '0 0 1px 0 rgba(64,75,90,0.29), 0 3px 8px -2px rgba(64,75,90,0.30)',\n    e300: '0 0 1px 0 rgba(64,75,90,0.30), 0 8px 18px -4px rgba(64,75,90,0.28)',\n    e400: '0 0 1px 0 rgba(64,75,90,0.30), 0 14px 28px -6px rgba(64,75,90,0.30)',\n}\n","import React from 'react'\n\nimport { theme } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @desc Normalize CSS\n * - https://github.com/necolas/normalize.css\n * - https://www.paulirish.com/2012/box-sizing-border-box-ftw/\n * @returns {React.Component}\n * @example import { CssReset } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/cssreset--default|Storybook}\n */\nconst CssReset = () => (\n    <style jsx global>{`\n        html {\n            line-height: 1.15; /* 1 */\n            -webkit-text-size-adjust: 100%; /* 2 */\n            box-sizing: border-box;\n        }\n\n        *,\n        *:before,\n        *:after {\n            font-family: ${theme.fonts};\n            box-sizing: inherit;\n        }\n\n        body {\n            margin: 0;\n            font-family: ${theme.fonts};\n        }\n\n        main {\n            display: block;\n        }\n\n        h1 {\n            font-size: 2em;\n            margin: 0.67em 0;\n        }\n\n        hr {\n            box-sizing: content-box; /* 1 */\n            height: 0; /* 1 */\n            overflow: visible; /* 2 */\n        }\n\n        pre {\n            font-family: monospace, monospace; /* 1 */\n            font-size: 1em; /* 2 */\n        }\n\n        a {\n            background-color: transparent;\n        }\n\n        abbr[title] {\n            border-bottom: none; /* 1 */\n            text-decoration: underline; /* 2 */\n            text-decoration: underline dotted; /* 2 */\n        }\n\n        b,\n        strong {\n            font-weight: bolder;\n        }\n\n        code,\n        kbd,\n        samp {\n            font-family: monospace, monospace; /* 1 */\n            font-size: 1em; /* 2 */\n        }\n\n        small {\n            font-size: 80%;\n        }\n\n        sub,\n        sup {\n            font-size: 75%;\n            line-height: 0;\n            position: relative;\n            vertical-align: baseline;\n        }\n\n        sub {\n            bottom: -0.25em;\n        }\n\n        sup {\n            top: -0.5em;\n        }\n\n        img {\n            border-style: none;\n        }\n\n        button,\n        input,\n        optgroup,\n        select,\n        textarea {\n            font-family: inherit; /* 1 */\n            font-size: 100%; /* 1 */\n            line-height: 1.15; /* 1 */\n            margin: 0; /* 2 */\n        }\n\n        button,\n        input {\n            /* 1 */\n            overflow: visible;\n        }\n\n        button,\n        select {\n            /* 1 */\n            text-transform: none;\n        }\n\n        button,\n        [type='button'],\n        [type='reset'],\n        [type='submit'] {\n            -webkit-appearance: button;\n        }\n\n        button::-moz-focus-inner,\n        [type='button']::-moz-focus-inner,\n        [type='reset']::-moz-focus-inner,\n        [type='submit']::-moz-focus-inner {\n            border-style: none;\n            padding: 0;\n        }\n\n        button:-moz-focusring,\n        [type='button']:-moz-focusring,\n        [type='reset']:-moz-focusring,\n        [type='submit']:-moz-focusring {\n            outline: 1px dotted ButtonText;\n        }\n\n        fieldset {\n            padding: 0.35em 0.75em 0.625em;\n        }\n\n        legend {\n            box-sizing: border-box; /* 1 */\n            color: inherit; /* 2 */\n            display: table; /* 1 */\n            max-width: 100%; /* 1 */\n            padding: 0; /* 3 */\n            white-space: normal; /* 1 */\n        }\n\n        progress {\n            vertical-align: baseline;\n        }\n\n        textarea {\n            overflow: auto;\n        }\n\n        [type='checkbox'],\n        [type='radio'] {\n            box-sizing: border-box; /* 1 */\n            padding: 0; /* 2 */\n        }\n\n        [type='number']::-webkit-inner-spin-button,\n        [type='number']::-webkit-outer-spin-button {\n            height: auto;\n        }\n\n        [type='search'] {\n            -webkit-appearance: textfield; /* 1 */\n            outline-offset: -2px; /* 2 */\n        }\n\n        [type='search']::-webkit-search-decoration {\n            -webkit-appearance: none;\n        }\n\n        ::-webkit-file-upload-button {\n            -webkit-appearance: button; /* 1 */\n            font: inherit; /* 2 */\n        }\n\n        details {\n            display: block;\n        }\n\n        summary {\n            display: list-item;\n        }\n\n        template {\n            display: none;\n        }\n\n        [hidden] {\n            display: none;\n        }\n    `}</style>\n)\n\nexport { CssReset }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport * as theme from './theme.js'\n\nconst toPrefixedThemeSection = themeSectionKey =>\n    Object.entries(theme[themeSectionKey]).reduce((prefixed, [key, value]) => {\n        prefixed[`${themeSectionKey}-${key}`] = value\n\n        return prefixed\n    }, {})\n\nconst toCustomPropertyString = themeSection =>\n    Object.entries(themeSection)\n        .map(([key, value]) => `--${key}: ${value};`)\n        .join('\\n')\n\n/**\n * @module\n * @description Injects our theme variables as CSS custom properties\n * @param {CssVariables.PropTypes} props\n * @returns {React.Component}\n * @example import { CssVariables } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/cssvariables--default|Storybook}\n */\nconst CssVariables = ({ colors, theme, layers, spacers, elevations }) => {\n    const allowedProps = { colors, theme, layers, spacers, elevations }\n    const variables = Object.keys(allowedProps)\n        // Filter all props that are false\n        .filter(prop => allowedProps[prop])\n        // Map props to corresponding theme section and prefixes keys with section name\n        .map(toPrefixedThemeSection)\n        // Map each section to a single string of css custom property declarations\n        .map(toCustomPropertyString)\n        // Join all the sections to a single string\n        .join('\\n')\n\n    return (\n        <style jsx global>{`\n            html {\n                ${variables}\n            }\n        `}</style>\n    )\n}\n\nCssVariables.defaultProps = {\n    colors: false,\n    theme: false,\n    layers: false,\n    spacers: false,\n    elevations: false,\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {boolean} [colors]\n * @prop {boolean} [theme]\n * @prop {boolean} [layers]\n * @prop {boolean} [spacers]\n * @prop {boolean} [elevations]\n */\nCssVariables.propTypes = {\n    colors: propTypes.bool,\n    elevations: propTypes.bool,\n    layers: propTypes.bool,\n    spacers: propTypes.bool,\n    theme: propTypes.bool,\n}\n\nexport { CssVariables }\n","import propTypes from '@dhis2/prop-types'\nimport React from 'react'\n\n/**\n * @module\n *\n * @param {Constrictor.PropTypes} props\n * @returns {React.Component}\n *\n * @desc con·stric·tor | \\kən-ˈstrik-tər\\\n * 1: a muscle that contracts a cavity or orifice or compresses an organ\n * 2: a snake (such as a boa constrictor) that coils around and compresses prey\n * 3: one that constricts\n */\nexport const Constrictor = ({\n    width,\n    minWidth,\n    maxWidth,\n    children,\n    dataTest,\n}) => (\n    <div data-test={dataTest}>\n        {children}\n        <style jsx>{`\n            div {\n                ${width ? `width: ${width};` : ''}\n                ${minWidth ? `min-width: ${minWidth};` : ''}\n                ${maxWidth ? `max-width: ${maxWidth};` : ''}\n            }\n        `}</style>\n    </div>\n)\n\nConstrictor.defaultProps = {\n    dataTest: 'dhis2-uicore-constrictor',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [width]\n * @prop {string} [minWidth]\n * @prop {string} [maxWidth]\n * @prop {string} [dataTest]\n */\nConstrictor.propTypes = {\n    children: propTypes.node,\n    dataTest: propTypes.string,\n    maxWidth: propTypes.string,\n    minWidth: propTypes.string,\n    width: propTypes.string,\n}\n","import React, { Component } from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { spacers } from '../theme.js'\n\nclass Action extends Component {\n    onClick = event => {\n        this.props.onClick(event)\n        this.props.hide(event)\n    }\n\n    render() {\n        return (\n            <span onClick={this.onClick} data-test={this.props.dataTest}>\n                {this.props.label}\n                <style jsx>{`\n                    span {\n                        margin-right: ${spacers.dp12};\n                        text-decoration: underline;\n                    }\n                    span:hover {\n                        cursor: pointer;\n                    }\n                `}</style>\n            </span>\n        )\n    }\n}\n\nAction.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    hide: propTypes.func.isRequired,\n    label: propTypes.string.isRequired,\n    onClick: propTypes.func.isRequired,\n}\n\nexport { Action }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { Action } from './Action.js'\nimport { spacers } from '../theme.js'\n\nconst Actions = ({ actions, hide, dataTest }) => {\n    if (!actions) {\n        return null\n    }\n\n    return (\n        <div>\n            {actions.map(action => (\n                <Action\n                    key={action.label}\n                    {...action}\n                    hide={hide}\n                    dataTest={`${dataTest}-action`}\n                />\n            ))}\n            <style jsx>{`\n                div {\n                    margin-left: ${spacers.dp48};\n                    margin-right: -${spacers.dp12};\n                }\n            `}</style>\n        </div>\n    )\n}\n\nconst actionsPropType = propTypes.arrayWithLength(\n    0,\n    2,\n    propTypes.shape({\n        label: propTypes.string.isRequired,\n        onClick: propTypes.func.isRequired,\n    })\n)\n\nActions.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    hide: propTypes.func.isRequired,\n    actions: actionsPropType,\n}\n\nexport { Actions, actionsPropType }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nexport function Close({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 48 48\"\n            className={className}\n        >\n            <path d=\"M38 12.83L35.17 10 24 21.17 12.83 10 10 12.83 21.17 24 10 35.17 12.83 38 24 26.83 35.17 38 38 35.17 26.83 24z\" />\n            <style jsx>{`\n                svg {\n                    fill: inherit;\n                    height: 24px;\n                    width: 24px;\n                    vertical-align: middle;\n                    pointer-events: none;\n                }\n            `}</style>\n        </svg>\n    )\n}\nClose.propTypes = {\n    className: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { spacers } from '../theme.js'\nimport { Close } from '../icons/Close.js'\n\nconst Dismiss = ({ onClick, dataTest }) => (\n    <div onClick={onClick} data-test={dataTest}>\n        <Close />\n        <style jsx>{`\n            div {\n                margin-left: ${spacers.dp24};\n            }\n            div:hover {\n                cursor: pointer;\n            }\n            div :global(svg) {\n                width: 18px;\n                height: 18px;\n            }\n        `}</style>\n    </div>\n)\n\nDismiss.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    onClick: propTypes.func.isRequired,\n}\n\nexport { Dismiss }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { theme } from '../theme.js'\n\n/**\n * @module\n * @private\n */\n\nexport function Valid({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 48 48\"\n            className={className}\n        >\n            <path d=\"M24 4C12.95 4 4 12.95 4 24c0 11.04 8.95 20 20 20 11.04 0 20-8.96 20-20 0-11.05-8.96-20-20-20zm-4 30L10 24l2.83-2.83L20 28.34l15.17-15.17L38 16 20 34z\" />\n            <style jsx>{`\n                svg {\n                    height: 24px;\n                    width: 24px;\n                    vertical-align: middle;\n                    pointer-events: none;\n                    fill: ${theme.valid};\n                }\n            `}</style>\n        </svg>\n    )\n}\n\nValid.propTypes = {\n    className: propTypes.string,\n}\n\nexport function Warning({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 48 48\"\n            className={className}\n        >\n            <path d=\"M2 42h44L24 4 2 42zm24-6h-4v-4h4v4zm0-8h-4v-8h4v8z\" />\n            <style jsx>{`\n                svg {\n                    height: 24px;\n                    width: 24px;\n                    vertical-align: middle;\n                    pointer-events: none;\n                    fill: ${theme.warning};\n                }\n            `}</style>\n        </svg>\n    )\n}\n\nWarning.propTypes = {\n    className: propTypes.string,\n}\n\nexport function Error({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 48 48\"\n            className={className}\n        >\n            <path d=\"M24 4C12.96 4 4 12.95 4 24s8.96 20 20 20 20-8.95 20-20S35.04 4 24 4zm2 30h-4v-4h4v4zm0-8h-4V14h4v12z\" />\n            <style jsx>{`\n                svg {\n                    height: 24px;\n                    width: 24px;\n                    vertical-align: middle;\n                    pointer-events: none;\n                    fill: ${theme.error};\n                }\n            `}</style>\n        </svg>\n    )\n}\n\nError.propTypes = {\n    className: propTypes.string,\n}\n\nexport function Info({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 48 48\"\n            className={className}\n        >\n            <path d=\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm2 30h-4V22h4v12zm0-16h-4v-4h4v4z\" />\n            <style jsx>{`\n                svg {\n                    height: 24px;\n                    width: 24px;\n                    vertical-align: middle;\n                    pointer-events: none;\n                    fill: ${theme.info};\n                }\n            `}</style>\n        </svg>\n    )\n}\n\nInfo.propTypes = {\n    className: propTypes.string,\n}\n\nexport function Loading({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"22 22 44 44\"\n            className={className}\n        >\n            <circle\n                className=\"circle\"\n                cx=\"44\"\n                cy=\"44\"\n                r=\"20.2\"\n                fill=\"none\"\n                strokeWidth=\"3.6\"\n            />\n            <style jsx>{`\n                svg {\n                    fill: ${theme.primary600};\n                    color: ${theme.primary600};\n                    width: 24px;\n                    height: 24px;\n                    animation: anim-rotate 1.4s linear infinite;\n                }\n\n                .circle {\n                    stroke: currentColor;\n                    stroke-dasharray: 80px, 200px;\n                    stroke-dashoffset: 0;\n                    animation: anim-dash 1.4s ease-in-out infinite;\n                }\n\n                @keyframes anim-rotate {\n                    100% {\n                        transform: rotate(360deg);\n                    }\n                }\n\n                @keyframes anim-dash {\n                    0% {\n                        stroke-dasharray: 1px, 200px;\n                        stroke-dashoffset: 0;\n                    }\n                    50% {\n                        stroke-dasharray: 100px, 200px;\n                        stroke-dashoffset: -15px;\n                    }\n                    100% {\n                        stroke-dasharray: 100px, 200px;\n                        stroke-dashoffset: -120px;\n                    }\n                }\n            `}</style>\n        </svg>\n    )\n}\n\nLoading.propTypes = {\n    className: propTypes.string,\n}\n\nexport const StatusIcon = ({\n    error,\n    warning,\n    valid,\n    loading,\n    info,\n    className,\n    defaultTo,\n}) => {\n    if (error) {\n        return <Error className={className} />\n    }\n    if (warning) {\n        return <Warning className={className} />\n    }\n    if (valid) {\n        return <Valid className={className} />\n    }\n    if (loading) {\n        return <Loading className={className} />\n    }\n    if (info) {\n        return <Info className={className} />\n    }\n\n    return defaultTo\n}\n\nStatusIcon.defaultProps = {\n    defaultTo: null,\n}\n\nStatusIcon.propTypes = {\n    className: propTypes.string,\n    defaultTo: propTypes.element,\n    error: propTypes.bool,\n    info: propTypes.bool,\n    loading: propTypes.bool,\n    valid: propTypes.bool,\n    warning: propTypes.bool,\n}\n","import propTypes from '@dhis2/prop-types'\nimport React from 'react'\n\nimport { StatusIcon } from '../icons/Status.js'\nimport { spacers } from '../theme.js'\n\nconst Icon = ({ icon, success, warning, critical, info, dataTest }) => {\n    if (icon === false) {\n        return null\n    }\n\n    return (\n        <div data-test={dataTest}>\n            {React.isValidElement(icon) ? (\n                icon\n            ) : (\n                <StatusIcon\n                    valid={success}\n                    error={critical}\n                    warning={warning}\n                    info={info}\n                />\n            )}\n            <style jsx>{`\n                div {\n                    margin-right: ${spacers.dp16};\n                }\n                div :global(svg) {\n                    width: 24px;\n                    height: 24px;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nconst iconPropType = propTypes.oneOfType([propTypes.bool, propTypes.element])\nconst alertStatePropType = propTypes.mutuallyExclusive(\n    ['success', 'warning', 'critical', 'info'],\n    propTypes.bool\n)\n\nIcon.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    critical: alertStatePropType,\n    icon: iconPropType,\n    info: alertStatePropType,\n    success: alertStatePropType,\n    warning: alertStatePropType,\n}\n\nexport { Icon, iconPropType }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nconst Message = ({ children }) => (\n    <div>\n        {children}\n        <style jsx>{`\n            div {\n                flex-grow: 1;\n                min-width: 240px;\n            }\n        `}</style>\n    </div>\n)\n\nMessage.propTypes = {\n    children: propTypes.string.isRequired,\n}\n\nexport { Message }\n","import css from 'styled-jsx/css'\nimport { colors, spacers, elevations } from '../theme.js'\n\nexport const ANIMATION_TIME = 350\n\nexport default css`\n    div {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        border-radius: 4px;\n        box-shadow: ${elevations.e300};\n\n        padding-top: ${spacers.dp12};\n        padding-right: ${spacers.dp16};\n        padding-bottom: ${spacers.dp12};\n        padding-left: ${spacers.dp24};\n\n        margin-bottom: ${spacers.dp16};\n\n        max-width: 600px;\n\n        font-size: 14px;\n\n        transform: translateY(1000px);\n        transition: transform ${ANIMATION_TIME}ms cubic-bezier(0.4, 0, 0.6, 1);\n\n        pointer-events: all;\n    }\n\n    /* States */\n    div.info {\n        background-color: ${colors.grey900};\n        color: ${colors.white};\n    }\n    div.info :global(path) {\n        fill: ${colors.white};\n    }\n    div.success {\n        background-color: ${colors.green800};\n        color: ${colors.white};\n    }\n    div.success :global(path) {\n        fill: ${colors.white};\n    }\n    div.warning {\n        background-color: ${colors.yellow300};\n        color: ${colors.yellow900};\n    }\n    div.warning :global(path) {\n        fill: ${colors.yellow900};\n    }\n    div.critical {\n        background-color: ${colors.red800};\n        color: ${colors.white};\n    }\n    div.critical :global(path) {\n        fill: ${colors.white};\n    }\n\n    /* Animation */\n    div.visible {\n        transform: translateY(0px);\n    }\n`\n","import cx from 'classnames'\nimport propTypes from '@dhis2/prop-types'\nimport React, { Component } from 'react'\n\nimport { Actions, actionsPropType } from './AlertBar/Actions.js'\nimport { Dismiss } from './AlertBar/Dismiss.js'\nimport { Icon, iconPropType } from './AlertBar/Icon.js'\nimport { Message } from './AlertBar/Message.js'\nimport styles, { ANIMATION_TIME } from './AlertBar/styles.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {AlertBar.PropTypes} props\n *\n * @returns {React.Component}\n *\n * @example import { AlertBar } from @dhis2/ui-core\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/alertbar.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/alertbar--default|Storybook}\n */\nclass AlertBar extends Component {\n    // visible is used to control the show/hide animation\n    // hidden is used to stop rendering entirely after hide animation\n    state = {\n        visible: false,\n        hidden: false,\n    }\n\n    componentDidMount() {\n        this.init()\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n        // Only re-init when props change, ignore state changes\n        if (\n            prevState.visible === this.state.visible &&\n            prevState.hidden === this.state.hidden\n        ) {\n            this.init()\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.displayTimeout)\n        clearTimeout(this.onHiddenTimeout)\n    }\n\n    init() {\n        this.startTime = Date.now()\n        this.timeRemaining = this.props.duration\n        this.startDisplayTimeout()\n        this.show()\n    }\n\n    startDisplayTimeout = () => {\n        if (this.shouldAutoHide()) {\n            this.displayTimeout = setTimeout(() => {\n                this.hide(null)\n            }, this.timeRemaining)\n        }\n    }\n\n    stopDisplayTimeOut = () => {\n        if (this.shouldAutoHide()) {\n            const elapsedTime = Date.now() - this.startTime\n            this.timeRemaining = this.timeRemaining - elapsedTime\n            clearTimeout(this.displayTimeout)\n        }\n    }\n\n    hide = event => {\n        clearTimeout(this.displayTimeout)\n        this.setState({ visible: false })\n\n        this.onHiddenTimeout = setTimeout(() => {\n            this.setState(\n                { hidden: true },\n                () => this.props.onHidden && this.props.onHidden({}, event)\n            )\n        }, ANIMATION_TIME)\n    }\n\n    show() {\n        requestAnimationFrame(() => {\n            this.setState({ visible: true })\n        })\n    }\n\n    shouldAutoHide() {\n        const { permanent, warning, critical } = this.props\n        return !(permanent || warning || critical)\n    }\n\n    render() {\n        const {\n            className,\n            children,\n            success,\n            warning,\n            critical,\n            icon,\n            actions,\n            dataTest,\n        } = this.props\n        const { visible, hidden } = this.state\n\n        if (hidden) {\n            return null\n        }\n\n        const info = !critical && !success && !warning\n\n        return (\n            <div\n                className={cx(className, {\n                    info,\n                    success,\n                    warning,\n                    critical,\n                    visible,\n                })}\n                data-test={dataTest}\n                onMouseEnter={this.stopDisplayTimeOut}\n                onMouseLeave={this.startDisplayTimeout}\n            >\n                <Icon\n                    dataTest={`${dataTest}-icon`}\n                    icon={icon}\n                    critical={critical}\n                    success={success}\n                    warning={warning}\n                    info={info}\n                />\n                <Message>{children}</Message>\n                <Actions\n                    actions={actions}\n                    hide={this.hide}\n                    dataTest={dataTest}\n                />\n                <Dismiss onClick={this.hide} dataTest={`${dataTest}-dismiss`} />\n\n                <style jsx>{styles}</style>\n            </div>\n        )\n    }\n}\n\nconst alertTypePropType = propTypes.mutuallyExclusive(\n    ['success', 'warning', 'critical'],\n    propTypes.bool\n)\n\nAlertBar.defaultProps = {\n    duration: 8000,\n    dataTest: 'dhis2-uicore-alertbar',\n    icon: true,\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [children] - The message string for the alert\n * @prop {string} [className]\n * @prop {boolean} [success] - `success`, `warning`, and `critical` are\n * mutually exclusive props.\n * @prop {boolean} [warning]\n * @prop {boolean} [critical]\n *\n * @prop {(Element|boolean)} [icon=true]\n *\n * @prop {number} [duration]\n * @prop {boolean} [permanent]\n * @prop {Array} [actions] An array of 0-2 action objects with the shape: `{ label: {string}, onClick: {function} }`\n * @prop {function} [onHidden]\n * @prop {string} [dataTest]\n */\nAlertBar.propTypes = {\n    actions: actionsPropType,\n    children: propTypes.string,\n    className: propTypes.string,\n    critical: alertTypePropType,\n    dataTest: propTypes.string,\n    duration: propTypes.number,\n    icon: iconPropType,\n    permanent: propTypes.bool,\n    success: alertTypePropType,\n    warning: alertTypePropType,\n    onHidden: propTypes.func,\n}\n\nexport { AlertBar }\n","import React from 'react'\nimport { createPortal } from 'react-dom'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nimport { layers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {AlertStack.PropTypes} props\n * @returns {React.Component}\n * @example import { AlertStack } from '@dhis2/ui-core'\n * @see Live demo: {@link /demo/?path=/story/alertstack--default|Storybook}\n */\nconst AlertStack = ({ className, children, dataTest }) =>\n    createPortal(\n        <div className={cx(className)} data-test={dataTest}>\n            {children}\n            <style jsx>{`\n                div {\n                    position: fixed;\n                    top: auto;\n                    right: auto;\n                    bottom: 0;\n                    left: 50%;\n                    transform: translateX(-50%);\n\n                    z-index: ${layers.alert};\n\n                    display: flex;\n                    flex-direction: column-reverse;\n\n                    pointer-events: none;\n                }\n            `}</style>\n        </div>,\n        document.body\n    )\n\nAlertStack.defaultProps = {\n    dataTest: 'dhis2-uicore-alertstack',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [className]\n * @prop {Array.<AlertBar>} [children]\n * @prop {string} [dataTest]\n */\nAlertStack.propTypes = {\n    children: propTypes.arrayOf(propTypes.element),\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nexport { AlertStack }\n","import propTypes from '@dhis2/prop-types'\n\nexport const statusPropType = propTypes.mutuallyExclusive(\n    ['valid', 'warning', 'error'],\n    propTypes.bool\n)\n\nexport const buttonVariantPropType = propTypes.mutuallyExclusive(\n    ['primary', 'secondary', 'destructive'],\n    propTypes.bool\n)\n\nexport const sizePropType = propTypes.mutuallyExclusive(\n    ['small', 'large'],\n    propTypes.bool\n)\n\nexport const singleSelectedPropType = propTypes.shape({\n    label: propTypes.string,\n    value: propTypes.string,\n})\n\nexport const multiSelectedPropType = propTypes.arrayOf(singleSelectedPropType)\n\nexport const insideAlignmentPropType = propTypes.oneOf([\n    'top',\n    'middle',\n    'bottom',\n])\n\nexport const referencePlacementPropType = propTypes.oneOf([\n    'auto',\n    'auto-start',\n    'auto-end',\n    'top',\n    'top-start',\n    'top-end',\n    'bottom', // will be used as default\n    'bottom-start',\n    'bottom-end',\n    'right',\n    'right-start',\n    'right-end',\n    'left',\n    'left-start',\n    'left-end',\n])\n\nexport const elementRefPropType = propTypes.oneOfType([\n    propTypes.func,\n    propTypes.shape({ current: propTypes.instanceOf(Element) }),\n])\n","import css from 'styled-jsx/css'\n\nimport { colors, theme, spacers } from '../theme.js'\n\nexport default css`\n    button {\n        display: inline-flex;\n        position: relative;\n        align-items: center;\n        justify-content: center;\n        border-radius: 4px;\n        font-weight: 400;\n        letter-spacing: 0.5px;\n        text-decoration: none;\n        cursor: pointer;\n        transition: all 0.15s cubic-bezier(0.4, 0, 0.6, 1);\n        user-select: none;\n        color: ${colors.grey900};\n\n        /*medium*/\n        height: 36px;\n        padding: 0 ${spacers.dp12};\n        font-size: 14px;\n        line-height: 16px;\n\n        /*basic*/\n        border: 1px solid ${colors.grey500};\n        background-color: #f9fafb;\n    }\n\n    button:disabled {\n        cursor: not-allowed;\n    }\n\n    button:focus {\n        /* Prevent default browser behavior which adds an outline */\n        outline: none;\n    }\n\n    /* Use the ::after pseudo-element for focus styles */\n    button::after {\n        content: ' ';\n        pointer-events: none;\n\n        position: absolute;\n        top: -2px;\n        right: -2px;\n        bottom: -2px;\n        left: -2px;\n        z-index: 1;\n\n        border: 2px solid transparent;\n        border-radius: inherit;\n\n        transition: border-color 0.15s cubic-bezier(0.4, 0, 0.6, 1);\n    }\n\n    /* Prevent focus styles on active and disabled buttons */\n    button:active:focus::after,\n    button:disabled:focus::after {\n        border-color: transparent;\n    }\n\n    button:hover {\n        border-color: ${colors.grey500};\n        background-color: ${colors.grey200};\n    }\n\n    button:active,\n    button:active:focus {\n        border-color: ${colors.grey500};\n        background-color: ${colors.grey200};\n        box-shadow: 0 0 0 1px rgb(0, 0, 0, 0.1) inset;\n    }\n\n    button:focus {\n        background-color: #f9fafb;\n    }\n\n    button:focus::after {\n        border-color: ${theme.primary600};\n    }\n\n    button:disabled {\n        border-color: ${colors.grey400};\n        background-color: #f9fafb;\n        box-shadow: none;\n        color: ${theme.disabled};\n        fill: ${theme.disabled};\n    }\n\n    button.icon {\n        padding-left: ${spacers.dp12};\n    }\n\n    button.icon-only.icon {\n        padding-left: 6px;\n    }\n\n    .small {\n        height: 28px;\n        padding: 0 8px;\n        font-size: 14px;\n        line-height: 16px;\n    }\n\n    .large {\n        height: 43px;\n        padding: 0 ${spacers.dp24};\n        font-size: 16px;\n        letter-spacing: 0.57px;\n        line-height: 19px;\n    }\n\n    .icon-only {\n        padding: 0;\n    }\n    .icon-only i {\n        margin-right: 0;\n        margin-left: 0;\n    }\n\n    .primary {\n        border-color: ${theme.primary800};\n        background: linear-gradient(180deg, #1565c0 0%, #0650a3 100%);\n        background-color: #2b61b3;\n        color: ${colors.white};\n        fill: ${colors.white};\n        font-weight: 500;\n    }\n\n    .primary:hover {\n        border-color: ${theme.primary800};\n        background: linear-gradient(180deg, #054fa3 0%, #034793 100%);\n        background-color: #21539f;\n    }\n\n    .primary:active,\n    .primary:active:focus {\n        border-color: ${theme.primary800};\n        background: linear-gradient(180deg, #054fa3 0%, #034793 100%);\n        background-color: #1c4a90;\n        box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.18) inset;\n    }\n\n    .primary:focus {\n        background: linear-gradient(180deg, #1565c0 0%, #0650a3 100%);\n        background-color: #285dac;\n    }\n\n    .primary:focus::after {\n        border-color: ${colors.yellow300};\n    }\n\n    .primary:disabled {\n        border-color: ${theme.primary800};\n        background: linear-gradient(180deg, #1565c0 0%, #0650a3 100%);\n        background-color: #b6c8e2;\n        box-shadow: none;\n        color: ${colors.white};\n        fill: ${colors.white};\n        opacity: 0.33;\n    }\n\n    .secondary {\n        border-color: ${colors.grey400};\n        background-color: transparent;\n    }\n\n    .secondary:hover {\n        border-color: ${colors.grey400};\n        background-color: rgba(160, 173, 186, 0.08);\n    }\n\n    .secondary:active,\n    .secondary:active:focus {\n        border-color: ${colors.grey400};\n        background-color: rgba(160, 173, 186, 0.2);\n        box-shadow: none;\n    }\n\n    .secondary:focus {\n        background-color: transparent;\n    }\n\n    .secondary:focus::after {\n        border-color: ${theme.primary600};\n    }\n\n    .secondary:disabled {\n        border-color: ${colors.grey400};\n        background-color: transparent;\n        box-shadow: none;\n        color: ${theme.disabled};\n        fill: ${theme.disabled};\n    }\n\n    .destructive {\n        border-color: #a10b0b;\n        background: linear-gradient(180deg, #d32f2f 0%, #b71c1c 100%);\n        background-color: #b9242b;\n        color: ${colors.white};\n        fill: ${colors.white};\n        font-weight: 500;\n    }\n\n    .destructive:hover {\n        border-color: #a10b0b;\n        background: linear-gradient(180deg, #b81c1c 0%, #b80c0b 100%);\n        background-color: #ac0f1a;\n    }\n\n    .destructive:active,\n    .destructive:active:focus {\n        border-color: #a10b0b;\n        background: linear-gradient(180deg, #b81c1c 0%, #b80c0b 100%);\n        background-color: #ac101b;\n        box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.18) inset;\n    }\n\n    .destructive:focus {\n        background: linear-gradient(180deg, #d32f2f 0%, #b71c1c 100%);\n        background-color: #b72229;\n    }\n\n    .destructive:focus:after {\n        border-color: #5e0303;\n    }\n\n    .destructive:disabled {\n        border-color: #a10b0b;\n        background: linear-gradient(180deg, #d32f2f 0%, #b71c1c 100%);\n        background-color: #e5b5b7;\n        box-shadow: none;\n        color: ${colors.white};\n        fill: ${colors.white};\n        opacity: 0.33;\n    }\n\n    .button-icon {\n        margin-right: 6px;\n        color: inherit;\n        fill: inherit;\n        font-size: 26px;\n        vertical-align: middle;\n        pointer-events: none;\n    }\n`\n","import cx from 'classnames'\nimport propTypes from '@dhis2/prop-types'\nimport React, { Component, createRef } from 'react'\n\nimport { buttonVariantPropType, sizePropType } from './common-prop-types.js'\nimport styles from './Button/styles.js'\n\n/**\n * @module\n * @param {Button.PropTypes} props\n *\n * @returns {React.Component}\n *\n * @example import { Button } from @dhis2/ui-core\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/button.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/button-basic--default|Storybook}\n */\nexport class Button extends Component {\n    buttonRef = createRef()\n\n    componentDidMount() {\n        if (this.props.initialFocus) {\n            this.buttonRef.current.focus()\n        }\n    }\n\n    handleClick = e => {\n        if (this.props.onClick) {\n            this.props.onClick(this.createHandlerPayload(), e)\n        }\n    }\n\n    handleBlur = e => {\n        if (this.props.onBlur) {\n            this.props.onBlur(this.createHandlerPayload(), e)\n        }\n    }\n\n    handleFocus = e => {\n        if (this.props.onFocus) {\n            this.props.onFocus(this.createHandlerPayload(), e)\n        }\n    }\n\n    createHandlerPayload() {\n        return {\n            value: this.props.value,\n            name: this.props.name,\n        }\n    }\n\n    render() {\n        const {\n            children,\n            className,\n            dataTest,\n            destructive,\n            disabled,\n            icon,\n            large,\n            name,\n            primary,\n            secondary,\n            small,\n            tabIndex,\n            type,\n            value,\n        } = this.props\n\n        return (\n            <button\n                className={cx(className, {\n                    primary,\n                    secondary,\n                    destructive,\n                    small,\n                    large,\n                    'icon-only': icon && !children,\n                    icon,\n                })}\n                data-test={dataTest}\n                disabled={disabled}\n                name={name}\n                onBlur={this.handleBlur}\n                onClick={this.handleClick}\n                onFocus={this.handleFocus}\n                ref={this.buttonRef}\n                tabIndex={tabIndex}\n                type={type}\n                value={value}\n            >\n                {icon && <span className=\"button-icon\">{icon}</span>}\n                {children}\n\n                <style jsx>{styles}</style>\n            </button>\n        )\n    }\n}\n\nButton.defaultProps = {\n    type: 'button',\n    dataTest: 'dhis2-uicore-button',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {Node} [children] The children to render in the button\n * @prop {function} [onClick] The click handler\n * @prop {function} [onBlur]\n * @prop {function} [onFocus]\n *\n * @prop {string} [className]\n * @prop {string} [name]\n * @prop {string} [value]\n * @prop {string} [tabIndex]\n * @prop {boolean} [small] - `small` and `large` are mutually exclusive\n * @prop {boolean} [large]\n * @prop {string} [type=button] Type of button: `submit`, `reset`, or\n * `button`\n *\n * @prop {boolean } [primary] - `primary`, `secondary`, and\n * `destructive` are mutually exclusive boolean props\n * @prop {boolean } [secondary]\n * @prop {boolean } [destructive]\n *\n * @prop {boolean} [disabled] Disable the button\n * @prop {Element} [icon]\n *\n * @prop {string} [dataTest]\n * @prop {boolean} [initialFocus] Grants the button the initial focus\n * state\n */\nButton.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    destructive: buttonVariantPropType,\n    disabled: propTypes.bool,\n    icon: propTypes.element,\n    initialFocus: propTypes.bool,\n    large: sizePropType,\n    name: propTypes.string,\n    primary: buttonVariantPropType,\n    secondary: buttonVariantPropType,\n    small: sizePropType,\n    tabIndex: propTypes.string,\n    type: propTypes.oneOf(['submit', 'reset', 'button']),\n    value: propTypes.string,\n    onBlur: propTypes.func,\n    onClick: propTypes.func,\n    onFocus: propTypes.func,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nimport { colors } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {Card.PropTypes} props\n * @returns {React.Component}\n * @example import { Card } from '@dhis2/ui-core'\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/card.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/card--default|Storybook}\n */\nconst Card = ({ className, children, dataTest }) => (\n    <div className={cx(className)} data-test={dataTest}>\n        {children}\n\n        <style jsx>{`\n            div {\n                display: inline-block;\n                position: relative;\n\n                width: 100%;\n                height: 100%;\n\n                border-radius: 3px;\n                background: ${colors.white};\n                box-shadow: 0 0 1px 0 rgba(64, 75, 90, 0.2),\n                    0 2px 1px 0 rgba(64, 75, 90, 0.28);\n            }\n        `}</style>\n    </div>\n)\n\nCard.defaultProps = {\n    dataTest: 'dhis2-uicore-card',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [className]\n * @prop {Node} [children]\n * @prop {string} [dataTest]\n */\nCard.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nexport { Card }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { colors } from '../theme.js'\nimport css from 'styled-jsx/css'\n\nconst commonStyles = css`\n    svg {\n        display: block;\n        pointer-events: none;\n    }\n    svg .border {\n        fill: ${colors.grey600};\n    }\n    svg .background,\n    svg .indeterminate,\n    svg .checkmark {\n        fill: ${colors.white};\n    }\n\n    svg.checked .background,\n    svg.indeterminate .background {\n        fill: ${colors.teal400};\n    }\n    svg.valid .background {\n        fill: ${colors.blue600};\n    }\n    svg.warning .background {\n        fill: ${colors.yellow700};\n    }\n    svg.error .background {\n        fill: ${colors.red500};\n    }\n\n    svg:not(.checked) .checkmark,\n    svg:not(.indeterminate) .indeterminate {\n        fill: none;\n    }\n    svg:not(.checked):not(.indeterminate) .background {\n        fill: ${colors.white};\n    }\n`\n\nexport function Regular({ className }) {\n    return (\n        <svg\n            viewBox=\"0 0 18 18\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className={className}\n        >\n            <rect\n                className=\"background\"\n                x=\"0\"\n                y=\"0\"\n                width=\"18\"\n                height=\"18\"\n                rx=\"3\"\n            ></rect>\n            <path\n                d=\"M3,0 L15,0 C16.6568542,0 18,1.34314575 18,3 L18,15 C18,16.6568542 16.6568542,18 15,18 L3,18 C1.34314575,18 0,16.6568542 0,15 L0,3 C0,1.34314575 1.34314575,0 3,0 Z M3,2 C2.44771525,2 2,2.44771525 2,3 L2,15 C2,15.5522847 2.44771525,16 3,16 L15,16 C15.5522847,16 16,15.5522847 16,15 L16,3 C16,2.44771525 15.5522847,2 15,2 L3,2 Z\"\n                className=\"border\"\n            ></path>\n            <path\n                d=\"M4.74451387,8.02852516 C4.39595738,8.11985643 4.12375034,8.39235188 4.03251575,8.74127768 C3.94128115,9.09020348 4.04521722,9.46125864 4.30437605,9.71182782 L7.29823844,12.7078028 C7.68753993,13.0973991 8.31859767,13.0973991 8.70789916,12.7078028 L13.695624,6.71585285 C13.9547828,6.46528367 14.0587189,6.09422851 13.9674843,5.74530271 C13.8762497,5.39637691 13.6040426,5.12388146 13.2554861,5.0325502 C12.9069296,4.94121893 12.5362672,5.04526513 12.2859632,5.30469855 L8.0030688,10.5910713 L5.71403676,8.30067351 C5.46373279,8.0412401 5.09307036,7.9371939 4.74451387,8.02852516 Z\"\n                className=\"checkmark\"\n            ></path>\n            <rect\n                className=\"indeterminate\"\n                x=\"4\"\n                y=\"8\"\n                width=\"10\"\n                height=\"2\"\n                rx=\"1\"\n            ></rect>\n            <style jsx>{commonStyles}</style>\n            <style jsx>{`\n                svg {\n                    width: 18px;\n                    height: 18px;\n                }\n                svg.checked .border,\n                svg.indeterminate .border {\n                    fill: ${colors.teal700};\n                }\n\n                svg.disabled .background {\n                    fill: ${colors.grey300};\n                }\n                svg.disabled .border {\n                    fill: ${colors.grey400};\n                }\n\n                svg.valid .border {\n                    fill: ${colors.blue600};\n                }\n                svg.valid.checked .border,\n                svg.valid.indeterminate .border {\n                    fill: ${colors.blue700};\n                }\n\n                svg.warning .border {\n                    fill: ${colors.yellow700};\n                }\n                svg.warning.checked .border,\n                svg.warning.indeterminate .border {\n                    fill: ${colors.yellow800};\n                }\n\n                svg.error .border {\n                    fill: ${colors.red500};\n                }\n                svg.error.checked .border,\n                svg.error.indeterminate .border {\n                    fill: ${colors.red700};\n                }\n            `}</style>\n        </svg>\n    )\n}\nRegular.propTypes = {\n    className: propTypes.string,\n}\n\nexport function Dense({ className }) {\n    return (\n        <svg\n            viewBox=\"0 0 14 14\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className={className}\n        >\n            <rect\n                className=\"background\"\n                fill=\"#009688\"\n                x=\"0\"\n                y=\"0\"\n                width=\"14\"\n                height=\"14\"\n                rx=\"2\"\n            ></rect>\n            <path\n                d=\"M2,0 L12,0 C13.1045695,0 14,0.8954305 14,2 L14,12 C14,13.1045695 13.1045695,14 12,14 L2,14 C0.8954305,14 0,13.1045695 0,12 L0,2 C0,0.8954305 0.8954305,0 2,0 Z M2,1 C1.44771525,1 1,1.44771525 1,2 L1,12 C1,12.5522847 1.44771525,13 2,13 L12,13 C12.5522847,13 13,12.5522847 13,12 L13,2 C13,1.44771525 12.5522847,1 12,1 L2,1 Z\"\n                className=\"border\"\n                fill=\"#004D40\"\n            ></path>\n            <path\n                d=\"M10.3520005,3.30015877 L5.54268293,8.03252726 L3.64634146,6.16652726 L2.28668615,7.5044281 L5.54310367,10.7010587 L11.7145993,4.628307 L10.3520005,3.30015877 Z M5.54268293,9.43547274 L5.61193184,9.36733181 L5.54226219,9.29894127 L5.47309681,9.367 L5.54268293,9.43547274 Z M10.6496329,4.41023392 L10.6495057,4.35652297 L10.5648412,4.35672356 L10.2854007,4.631693 L10.3553166,4.69984123 L10.6496329,4.41023392 Z M3.42891348,7.22439304 L3.35030905,7.22439304 L3.35034135,7.27820863 L3.64634146,7.56947274 L3.71331385,7.5035719 L3.42891348,7.22439304 Z\"\n                className=\"checkmark\"\n                fill=\"#FFFFFF\"\n            ></path>\n            <rect\n                className=\"indeterminate\"\n                fill=\"#FFFFFF\"\n                x=\"3\"\n                y=\"6\"\n                width=\"8\"\n                height=\"2\"\n            ></rect>\n            <style jsx>{commonStyles}</style>\n            <style jsx>{`\n                svg {\n                    width: 14px;\n                    height: 14px;\n                }\n\n                svg.checked .border,\n                svg.indeterminate .border {\n                    fill: ${colors.teal800};\n                }\n\n                svg.disabled .background {\n                    fill: ${colors.grey400};\n                }\n                svg.disabled .border {\n                    fill: ${colors.grey400};\n                }\n                svg.disabled.checked .border,\n                svg.disabled.indeterminate .border {\n                    fill: ${colors.grey500};\n                }\n\n                svg.valid .border {\n                    fill: ${colors.blue600};\n                }\n                svg.valid.checked .border,\n                svg.valid.indeterminate .border {\n                    fill: ${colors.blue800};\n                }\n\n                svg.warning .border {\n                    fill: ${colors.yellow700};\n                }\n                svg.warning.checked .border,\n                svg.warning.indeterminate .border {\n                    fill: ${colors.yellow800};\n                }\n\n                svg.error .border {\n                    fill: ${colors.red500};\n                }\n                svg.error.checked .border,\n                svg.error.indeterminate .border {\n                    fill: ${colors.red800};\n                }\n            `}</style>\n        </svg>\n    )\n}\nDense.propTypes = {\n    className: propTypes.string,\n}\n","import cx from 'classnames'\nimport propTypes from '@dhis2/prop-types'\nimport React, { Component, createRef } from 'react'\n\nimport { statusPropType } from './common-prop-types.js'\nimport { Regular, Dense } from './icons/Checkbox.js'\nimport { colors, theme } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n *\n * @param {Checkbox.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Checkbox } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/checkbox.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/checkbox--default|Storybook}\n */\nclass Checkbox extends Component {\n    ref = createRef()\n\n    componentDidMount() {\n        if (this.props.initialFocus) {\n            this.ref.current.focus()\n        }\n\n        this.setIndeterminate(this.props.indeterminate)\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.indeterminate !== this.props.indeterminate) {\n            this.setIndeterminate(this.props.indeterminate)\n        }\n    }\n\n    setIndeterminate(indeterminate) {\n        this.ref.current.indeterminate = indeterminate\n    }\n\n    handleChange = e => {\n        if (this.props.onChange) {\n            this.props.onChange(this.createHandlerPayload(), e)\n        }\n    }\n\n    handleBlur = e => {\n        if (this.props.onBlur) {\n            this.props.onBlur(this.createHandlerPayload(), e)\n        }\n    }\n\n    handleFocus = e => {\n        if (this.props.onFocus) {\n            this.props.onFocus(this.createHandlerPayload(), e)\n        }\n    }\n\n    createHandlerPayload() {\n        return {\n            value: this.props.value,\n            name: this.props.name,\n            checked: !this.props.checked,\n        }\n    }\n\n    render() {\n        const {\n            checked = false,\n            indeterminate = false,\n            className,\n            disabled,\n            error,\n            label,\n            name,\n            tabIndex,\n            valid,\n            value,\n            warning,\n            dense,\n            dataTest,\n        } = this.props\n\n        const classes = cx({\n            checked,\n            indeterminate,\n            disabled,\n            valid,\n            error,\n            warning,\n        })\n\n        return (\n            <label\n                className={cx(className, {\n                    disabled,\n                    dense,\n                })}\n                data-test={dataTest}\n            >\n                <input\n                    type=\"checkbox\"\n                    ref={this.ref}\n                    name={name}\n                    value={value}\n                    checked={checked}\n                    disabled={disabled}\n                    tabIndex={tabIndex}\n                    onChange={this.handleChange}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                />\n\n                <div className={cx('icon', { dense })}>\n                    {dense ? (\n                        <Dense className={classes} />\n                    ) : (\n                        <Regular className={classes} />\n                    )}\n                </div>\n\n                {label}\n\n                <style jsx>{`\n                    label {\n                        display: flex;\n                        flex-direction: row;\n                        align-items: center;\n                        justify-content: flex-start;\n                        cursor: pointer;\n                        pointer-events: all;\n                        user-select: none;\n                        color: ${colors.grey900};\n                        font-size: 16px;\n                        line-height: 20px;\n                    }\n\n                    label.dense {\n                        font-size: 14px;\n                        line-height: 16px;\n                    }\n\n                    label.disabled {\n                        cursor: not-allowed;\n                        color: ${theme.disabled};\n                    }\n\n                    input {\n                        opacity: 0;\n                        pointer-events: none;\n                        position: absolute;\n                    }\n\n                    .icon {\n                        pointer-events: none;\n                        user-select: none;\n                        margin-right: 5px;\n                        border: 2px solid transparent;\n                        padding: 1px;\n                        border-radius: 5px;\n                    }\n\n                    label.dense .icon {\n                        margin-right: 3px;\n                        border-radius: 4px;\n                    }\n\n                    input:focus + .icon {\n                        border-color: ${colors.blue600};\n                    }\n                `}</style>\n            </label>\n        )\n    }\n}\n\nCheckbox.defaultProps = {\n    dataTest: 'dhis2-uicore-checkbox',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} value\n * @prop {Node} [label]\n * @prop {function} [onChange] - called with the signature `object, event`\n * @prop {string} [name]\n * @prop {string} [className]\n * @prop {string} [tabIndex]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [checked]\n * @prop {boolean} [indeterminate]\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, and `error` are\n * mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [dense]\n *\n * @prop {function} [onFocus]\n * @prop {function} [onBlur]\n * @prop {string} [dataTest]\n */\n\nconst uniqueOnStatePropType = propTypes.mutuallyExclusive(\n    ['checked', 'indeterminate'],\n    propTypes.bool\n)\n\nCheckbox.propTypes = {\n    checked: uniqueOnStatePropType,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    indeterminate: uniqueOnStatePropType,\n    initialFocus: propTypes.bool,\n    label: propTypes.node,\n    name: propTypes.string,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    value: propTypes.string,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { Checkbox }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { spacers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {Field.PropTypes} props\n * @returns {React.Component}\n * @example import { Field } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/field--default|Storybook}\n */\nconst Field = ({ children, className, dataTest }) => (\n    <div className={className} data-test={dataTest}>\n        {children}\n        <style jsx>{`\n            div {\n                margin: 0 0 ${spacers.dp16};\n            }\n        `}</style>\n    </div>\n)\n\nField.defaultProps = {\n    dataTest: 'dhis2-uicore-field',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nField.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nexport { Field }\n","import cx from 'classnames'\nimport propTypes from '@dhis2/prop-types'\nimport React from 'react'\n\nimport { statusPropType } from './common-prop-types.js'\nimport { spacers, theme } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {Help.PropTypes} props\n * @returns {React.Component}\n * @example import { Help } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/help--default|Storybook}\n */\nconst Help = ({ children, valid, error, warning, className, dataTest }) => (\n    <p\n        className={cx(className, {\n            valid,\n            error,\n            warning,\n        })}\n        data-test={dataTest}\n    >\n        {children}\n\n        <style jsx>{`\n            p {\n                margin-top: ${spacers.dp4};\n                margin-right: 0;\n                margin-bottom: 0;\n                margin-left: 0;\n                font-size: 12px;\n                line-height: 14px;\n                color: ${theme.default};\n                cursor: help;\n            }\n\n            .valid {\n                color: ${theme.valid};\n            }\n\n            .error {\n                color: ${theme.error};\n            }\n\n            .warning {\n                color: ${theme.warning};\n            }\n        `}</style>\n    </p>\n)\n\nHelp.defaultProps = {\n    dataTest: 'dhis2-uicore-help',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [children]\n * @prop {string} [className]\n * @prop {boolean} [valid] - `valid`, `warning`, and `error`, are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {string} [dataTest]\n */\nHelp.propTypes = {\n    children: propTypes.string,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    error: statusPropType,\n    valid: statusPropType,\n    warning: statusPropType,\n}\n\nexport { Help }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { spacers } from '../theme.js'\n\nexport const Required = ({ dataTest }) => (\n    <span data-test={dataTest}>\n        *\n        <style jsx>{`\n            span {\n                padding-left: ${spacers.dp4};\n            }\n        `}</style>\n    </span>\n)\n\nRequired.propTypes = {\n    dataTest: propTypes.string.isRequired,\n}\n","import propTypes from '@dhis2/prop-types'\nimport React from 'react'\nimport { Required } from '../Label/Required.js'\n\nexport const AddRequired = ({ label, required, dataTest }) => (\n    <React.Fragment>\n        {label}\n        {required && <Required dataTest={`${dataTest}-required`} />}\n    </React.Fragment>\n)\n\nAddRequired.propTypes = {\n    dataTest: propTypes.string,\n    label: propTypes.node,\n    required: propTypes.bool,\n}\n","import propTypes from '@dhis2/prop-types'\nimport React from 'react'\n\nimport { statusPropType } from './common-prop-types.js'\nimport { Field } from './Field.js'\nimport { Help } from './Help.js'\nimport { AddRequired } from './ToggleField/AddRequired.js'\n\nconst ToggleField = ({\n    value,\n    label,\n    name,\n    className,\n    tabIndex,\n    onChange,\n    onFocus,\n    onBlur,\n    checked,\n    disabled,\n    valid,\n    warning,\n    error,\n    dense,\n    initialFocus,\n    required,\n    helpText,\n    validationText,\n    dataTest,\n    toggleComponent: ToggleComponent,\n}) => (\n    <Field className={className} dataTest={dataTest}>\n        <ToggleComponent\n            value={value}\n            label={\n                <AddRequired\n                    label={label}\n                    required={required}\n                    dataTest={dataTest}\n                />\n            }\n            name={name}\n            tabIndex={tabIndex}\n            onChange={onChange}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            checked={checked}\n            disabled={disabled}\n            valid={valid}\n            warning={warning}\n            error={error}\n            dense={dense}\n            initialFocus={initialFocus}\n        />\n\n        {helpText && <Help dataTest={`${dataTest}-help`}>{helpText}</Help>}\n\n        {validationText && (\n            <Help\n                error={error}\n                warning={warning}\n                valid={valid}\n                dataTest={`${dataTest}-validation`}\n            >\n                {validationText}\n            </Help>\n        )}\n    </Field>\n)\n\nToggleField.defaultProps = {\n    dataTest: 'dhis2-uicore-togglefield',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @private\n *\n * @prop {string} [value]\n * @prop {Node} [label]\n * @prop {string} [name]\n * @prop {string} [className]\n * @prop {string} [tabIndex]\n * @prop {function} [onChange]\n * @prop {function} [onFocus]\n * @prop {function} [onBlur]\n * @prop {boolean} [checked]\n * @prop {boolean} [disabled]\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, `loading`, are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [dense]\n * @prop {boolean} [initialFocus]\n * @prop {boolean} [required]\n * @prop {string} [helpText]\n * @prop {string} [validationText]\n * @prop {function} toggleComponent\n * @prop {string} [dataTest]\n */\nToggleField.propTypes = {\n    toggleComponent: propTypes.func.isRequired,\n    checked: propTypes.bool,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    helpText: propTypes.string,\n    initialFocus: propTypes.bool,\n    label: propTypes.node,\n    name: propTypes.string,\n    required: propTypes.bool,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    validationText: propTypes.string,\n    value: propTypes.string,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { ToggleField }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { statusPropType } from './common-prop-types.js'\nimport { ToggleField } from './ToggleField.js'\nimport { Checkbox } from './Checkbox.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {CheckboxField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { CheckboxField } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/checkbox.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/checkboxfield--default|Storybook}\n */\n\nconst CheckboxField = ({\n    value,\n    label,\n    name,\n    className,\n    tabIndex,\n    onChange,\n    onFocus,\n    onBlur,\n    checked,\n    disabled,\n    valid,\n    warning,\n    error,\n    dense,\n    initialFocus,\n    required,\n    helpText,\n    validationText,\n    dataTest,\n}) => (\n    <ToggleField\n        value={value}\n        label={label}\n        name={name}\n        className={className}\n        toggleComponent={Checkbox}\n        tabIndex={tabIndex}\n        onChange={onChange}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        checked={checked}\n        disabled={disabled}\n        valid={valid}\n        warning={warning}\n        error={error}\n        dense={dense}\n        initialFocus={initialFocus}\n        required={required}\n        helpText={helpText}\n        validationText={validationText}\n        dataTest={dataTest}\n    />\n)\n\nCheckboxField.defaultProps = {\n    dataTest: 'dhis2-uicore-checkboxfield',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [value]\n * @prop {string} [label]\n *\n * @prop {string} [name]\n * @prop {string} [className]\n * @prop {string} [tabIndex]\n *\n * @prop {function} [onChange]\n * @prop {function} [onFocus]\n * @prop {function} [onBlur]\n *\n * @prop {boolean} [checked]\n * @prop {boolean} [disabled]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, and `error` are\n * mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [dense]\n * @prop {boolean} [initialFocus]\n * @prop {boolean} [required]\n * @prop {string} [helpText]\n * @prop {string} [validationText]\n * @prop {string} [dataTest]\n */\nCheckboxField.propTypes = {\n    checked: propTypes.bool,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    helpText: propTypes.string,\n    initialFocus: propTypes.bool,\n    label: propTypes.node,\n    name: propTypes.string,\n    required: propTypes.bool,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    validationText: propTypes.string,\n    value: propTypes.string,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { CheckboxField }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nexport const Spacer = ({ children, dense }) => (\n    <div className={cx({ dense })}>\n        {children}\n\n        <style jsx>{`\n            div,\n            div.dense:first-of-type {\n                padding-top: 4px;\n            }\n\n            div.dense {\n                padding-top: 2px;\n            }\n        `}</style>\n    </div>\n)\n\nSpacer.propTypes = {\n    children: propTypes.node.isRequired,\n    dense: propTypes.bool,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\nimport { Children, cloneElement } from 'react'\n\nimport { statusPropType } from './common-prop-types.js'\nimport { Spacer } from './ToggleGroup/Spacer.js'\n\nconst ToggleGroup = ({\n    children,\n    value,\n    onChange,\n    name,\n    disabled,\n    valid,\n    warning,\n    error,\n    dense,\n    className,\n    dataTest,\n}) => (\n    <div data-test={dataTest}>\n        {Children.map(children, child => (\n            <Spacer dense={child.props.dense || dense}>\n                {cloneElement(child, {\n                    name,\n                    onChange: child.props.onChange || onChange,\n                    checked: Array.isArray(value)\n                        ? value.indexOf(child.props.value) !== -1\n                        : child.props.value === value,\n                    disabled: child.props.disabled || disabled,\n                    valid: child.props.valid || valid,\n                    warning: child.props.warning || warning,\n                    error: child.props.error || error,\n                    dense: child.props.dense || dense,\n                    className: cx(child.props.className, className),\n                })}\n            </Spacer>\n        ))}\n    </div>\n)\n\nToggleGroup.defaultProps = {\n    dataTest: 'dhis2-uicore-togglegroup',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @private\n *\n * @prop {Node} [children]\n * @prop {function} [onChange]\n * @prop {string} [name]\n * @prop {string|Array.<String>} [value]\n * @prop {string} [className]\n * @prop {boolean} [disabled]\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, `loading`, are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [dense]\n * @prop {string} [dataTest]\n */\nToggleGroup.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    name: propTypes.string,\n    valid: statusPropType,\n    value: propTypes.oneOfType([\n        propTypes.string,\n        propTypes.arrayOf(propTypes.string),\n    ]),\n    warning: statusPropType,\n    onChange: propTypes.func,\n}\n\nexport { ToggleGroup }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { statusPropType } from './common-prop-types.js'\nimport { ToggleGroup } from './ToggleGroup.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {CheckboxGroup.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { CheckboxGroup } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/checkbox.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/checkboxgroup--default|Storybook}\n */\n\nconst CheckboxGroup = ({\n    children,\n    onChange,\n    name,\n    value,\n    className,\n    disabled,\n    valid,\n    warning,\n    error,\n    dense,\n    dataTest,\n}) => (\n    <ToggleGroup\n        onChange={onChange}\n        name={name}\n        value={value}\n        className={className}\n        disabled={disabled}\n        valid={valid}\n        warning={warning}\n        error={error}\n        dense={dense}\n        dataTest={dataTest}\n    >\n        {children}\n    </ToggleGroup>\n)\n\nCheckboxGroup.defaultProps = {\n    dataTest: 'dhis2-uicore-checkboxgroup',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Array.<Checkbox>} [children]\n * @prop {function} [onChange]\n * @prop {string} [name]\n *\n * @prop {Array.<String>} [value]\n * @prop {string} [className]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [valid] - `valid`, `warning`, and `error` are\n * mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [dense]\n * @prop {string} [dataTest]\n */\nCheckboxGroup.propTypes = {\n    children: propTypes.arrayOf(propTypes.element),\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    name: propTypes.string,\n    valid: statusPropType,\n    value: propTypes.arrayOf(propTypes.string),\n    warning: statusPropType,\n    onChange: propTypes.func,\n}\n\nexport { CheckboxGroup }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\n/**\n * @module\n * @param {FieldSet.PropTypes} props\n * @returns {React.Component}\n * @example import { FieldSet } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/fieldset--default}\n */\nconst FieldSet = ({ className, children, dataTest }) => (\n    <fieldset className={className} data-test={dataTest}>\n        {children}\n        <style jsx>{`\n            fieldset {\n                border: none;\n                margin: 0;\n                padding: 0;\n            }\n        `}</style>\n    </fieldset>\n)\n\nFieldSet.defaultProps = {\n    dataTest: 'dhis2-uicore-fieldset',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nFieldSet.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nexport { FieldSet }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { colors } from './theme.js'\nimport { Required } from './Label/Required.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {Legend.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Legend } from '@dhis2/ui-core'\n *\n * @see Live demo: {@link /demo/?path=/story/legend--default|Storybook}\n */\nconst Legend = ({ className, children, required, dataTest }) => (\n    <legend className={className} data-test={dataTest}>\n        {children}\n\n        {required && <Required dataTest={`${dataTest}-required`} />}\n\n        <style jsx>{`\n            legend {\n                font-size: 14px;\n                line-height: 16px;\n                color: ${colors.grey900};\n            }\n        `}</style>\n    </legend>\n)\n\nLegend.defaultProps = {\n    dataTest: 'dhis2-uicore-legend',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {boolean} [required]\n * @prop {string} [dataTest]\n */\nLegend.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    required: propTypes.bool,\n}\n\nexport { Legend }\n","import propTypes from '@dhis2/prop-types'\nimport React from 'react'\n\nimport { ToggleGroup } from './ToggleGroup.js'\nimport { Field } from './Field.js'\nimport { FieldSet } from './FieldSet.js'\nimport { Legend } from './Legend.js'\nimport { Help } from './Help.js'\nimport { statusPropType } from './common-prop-types.js'\n\nconst ToggleGroupField = ({\n    children,\n    value,\n    onChange,\n    name,\n    disabled,\n    valid,\n    warning,\n    error,\n    dense,\n    className,\n    label,\n    helpText,\n    validationText,\n    required,\n    dataTest,\n}) => (\n    <Field classname={className} dataTest={dataTest}>\n        <FieldSet>\n            {label && <Legend required={required}>{label}</Legend>}\n\n            <ToggleGroup\n                onChange={onChange}\n                name={name}\n                value={value}\n                className={className}\n                disabled={disabled}\n                valid={valid}\n                warning={warning}\n                error={error}\n                dense={dense}\n            >\n                {children}\n            </ToggleGroup>\n\n            {helpText && <Help dataTest={`${dataTest}-help`}>{helpText}</Help>}\n\n            {validationText && (\n                <Help\n                    error={error}\n                    warning={warning}\n                    valid={valid}\n                    dataTest={`${dataTest}-validation`}\n                >\n                    {validationText}\n                </Help>\n            )}\n        </FieldSet>\n    </Field>\n)\n\nToggleGroupField.defaultProps = {\n    dataTest: 'dhis2-uicore-togglegroupfield',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @private\n *\n * @prop {Node} [children]\n * @prop {function} [onChange]\n * @prop {string} name\n * @prop {string|Array.<String>} [value]\n * @prop {string} [className]\n * @prop {boolean} [disabled]\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, `loading`, are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [dense]\n *\n * @prop {string} [label]\n * @prop {string} [helpText]\n * @prop {string} [validationText]\n * @prop {boolean} [required]\n * @prop {string} [dataTest]\n */\nToggleGroupField.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    helpText: propTypes.string,\n    label: propTypes.string,\n    name: propTypes.string,\n    required: propTypes.bool,\n    valid: statusPropType,\n    validationText: propTypes.string,\n    value: propTypes.oneOfType([\n        propTypes.string,\n        propTypes.arrayOf(propTypes.string),\n    ]),\n    warning: statusPropType,\n    onChange: propTypes.func,\n}\n\nexport { ToggleGroupField }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { ToggleGroupField } from './ToggleGroupField.js'\nimport { statusPropType } from './common-prop-types.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {CheckboxGroupField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { CheckboxGroupField } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/checkbox.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/checkboxgroupfield--default|Storybook}\n */\nconst CheckboxGroupField = ({\n    children,\n    onChange,\n    name,\n    value,\n    className,\n    disabled,\n    valid,\n    warning,\n    error,\n    dense,\n    label,\n    helpText,\n    validationText,\n    required,\n    dataTest,\n}) => (\n    <ToggleGroupField\n        onChange={onChange}\n        name={name}\n        value={value}\n        className={className}\n        disabled={disabled}\n        valid={valid}\n        warning={warning}\n        error={error}\n        dense={dense}\n        label={label}\n        helpText={helpText}\n        validationText={validationText}\n        required={required}\n        dataTest={dataTest}\n    >\n        {children}\n    </ToggleGroupField>\n)\n\nCheckboxGroupField.defaultProps = {\n    dataTest: 'dhis2-uicore-checkboxgroupfield',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Array.<Checkbox>} [children]\n * @prop {function} [onChange]\n * @prop {string} [name]\n *\n * @prop {Array.<String>} [value]\n * @prop {string} [className]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [valid] - `valid`, `warning`, and `error` are\n * mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [dense]\n * @prop {string} [label]\n * @prop {string} [helpText]\n * @prop {string} [validationText]\n * @prop {boolean} [required]\n * @prop {string} [dataTest]\n */\nCheckboxGroupField.propTypes = {\n    children: propTypes.arrayOf(propTypes.element),\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    helpText: propTypes.string,\n    label: propTypes.string,\n    name: propTypes.string,\n    required: propTypes.bool,\n    valid: statusPropType,\n    validationText: propTypes.string,\n    value: propTypes.arrayOf(propTypes.string),\n    warning: statusPropType,\n    onChange: propTypes.func,\n}\n\nexport { CheckboxGroupField }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nimport { spacers } from '../theme.js'\n\nexport const Content = ({ children, overflow }) => (\n    <span className={cx({ overflow })}>\n        {children}\n\n        <style jsx>{`\n            span {\n                margin: 0 ${spacers.dp12};\n                color: inherit;\n                white-space: nowrap;\n            }\n\n            .overflow {\n                max-width: 150px;\n                overflow: hidden;\n                text-overflow: ellipsis;\n            }\n        `}</style>\n    </span>\n)\n\nContent.propTypes = {\n    children: propTypes.oneOfType([propTypes.string, propTypes.number]),\n    overflow: propTypes.bool,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { spacers } from '../theme.js'\n\nexport const Icon = ({ icon, dataTest }) => {\n    if (!icon) {\n        return null\n    }\n\n    return (\n        <span data-test={dataTest}>\n            {icon}\n\n            <style jsx>{`\n                span {\n                    width: 24px;\n                    height: 24px;\n                    margin-left: ${spacers.dp4};\n                    margin-right: -6px;\n                    border-radius: 50%;\n                    overflow: hidden;\n                }\n\n                span > :global(*) {\n                    max-height: 24px;\n                    max-width: 24px;\n                }\n            `}</style>\n        </span>\n    )\n}\n\nIcon.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    /** the slot for an icon is 24x24px, bigger elements will be clipped */\n    icon: propTypes.element,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nexport function CancelOutline({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 16 16\"\n            className={className}\n        >\n            <path d=\"M11.2928932,3.29289322 L12.7071068,4.70710678 L9.41389322,7.99989322 L12.7071068,11.2928932 L11.2928932,12.7071068 L7.99989322,9.41389322 L4.70710678,12.7071068 L3.29289322,11.2928932 L6.58589322,7.99989322 L3.29289322,4.70710678 L4.70710678,3.29289322 L7.99989322,6.58589322 L11.2928932,3.29289322 Z\" />\n\n            <style jsx>{`\n                svg {\n                    fill: inherit;\n                    height: 16px;\n                    width: 16px;\n                    vertical-align: middle;\n                    pointer-events: none;\n                }\n            `}</style>\n        </svg>\n    )\n}\nCancelOutline.propTypes = {\n    className: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { css, resolve } from 'styled-jsx/css'\n\nimport { CancelOutline } from '../icons/Cancel--outline.js'\nimport { colors } from '../theme.js'\n\nconst containerStyle = css`\n    span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 20px;\n        width: 20px;\n        margin-right: 4px;\n        border-radius: 12px;\n        margin-left: -8px;\n    }\n    span:hover {\n        background: ${colors.grey400};\n    }\n`\n\nconst removeIcon = resolve`\n    svg {\n        fill: ${colors.grey600};\n\t\t    height: 16px;\n\t\t    width: 16px;\n        cursor: pointer;\n        opacity: 1;\n        pointer-events: all;\n    }\n`\n\nexport const Remove = ({ onRemove, dataTest }) => {\n    if (!onRemove) {\n        return null\n    }\n\n    return (\n        <span\n            onClick={e => {\n                e.stopPropagation() // stop onRemove from triggering onClick on container\n                onRemove({}, e)\n            }}\n            data-test={dataTest}\n        >\n            <CancelOutline className={removeIcon.className} />\n            {removeIcon.styles}\n\n            <style jsx>{containerStyle}</style>\n        </span>\n    )\n}\n\nRemove.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    onRemove: propTypes.func,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nimport { colors, theme, spacers } from './theme.js'\nimport { Content } from './Chip/Content.js'\nimport { Icon } from './Chip/Icon.js'\nimport { Remove } from './Chip/Remove.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {Chip.PropTypes} props\n * @returns {React.Component}\n * @example import { Chip } from @dhis2/ui-core\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/chip.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/chip--default|Storybook}\n */\nconst Chip = ({\n    selected,\n    dense,\n    disabled,\n    dragging,\n    overflow,\n    className,\n    children,\n    onRemove,\n    onClick,\n    icon,\n    dataTest,\n}) => (\n    <span\n        onClick={e => {\n            if (!disabled && onClick) {\n                onClick({}, e)\n            }\n        }}\n        className={cx(className, {\n            selected,\n            dense,\n            disabled,\n            dragging,\n        })}\n        data-test={dataTest}\n    >\n        <Icon icon={icon} dataTest={`${dataTest}-icon`} />\n        <Content overflow={overflow}>{children}</Content>\n        <Remove onRemove={onRemove} dataTest={`${dataTest}-remove`} />\n\n        <style jsx>{`\n            span {\n                display: inline-flex;\n                align-items: center;\n                height: 32px;\n                margin: ${spacers.dp4};\n                border-radius: 16px;\n                background-color: ${colors.grey200};\n                font-size: 14px;\n                line-height: 16px;\n                cursor: pointer;\n                user-select: none;\n                color: ${colors.grey900};\n            }\n\n            .dense {\n                height: 24px;\n                font-size: 13px;\n                line-height: 15px;\n            }\n\n            span:hover {\n                background-color: ${colors.grey300};\n            }\n\n            .selected {\n                background-color: ${theme.secondary600};\n                font-weight: 500;\n            }\n\n            .selected:hover {\n                background-color: #00695c;\n            }\n\n            .selected,\n            .selected .icon,\n            .selected .remove-icon {\n                color: ${colors.white};\n            }\n\n            .disabled {\n                cursor: not-allowed;\n                opacity: 0.3;\n            }\n\n            .disabled .remove-icon {\n                pointer-events: none;\n            }\n\n            .dragging {\n                box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2),\n                    0 2px 2px 0 rgba(0, 0, 0, 0.14),\n                    0 1px 5px 0 rgba(0, 0, 0, 0.12);\n            }\n        `}</style>\n    </span>\n)\n\nChip.defaultProps = {\n    dataTest: 'dhis2-uicore-chip',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [children]\n * @prop {string} [className]\n * @prop {Element} [icon]\n * @prop {function} [onClick]\n * @prop {function} [onRemove]\n * @prop {boolean} [selected]\n * @prop {boolean} [dense]\n * @prop {boolean} [disabled]\n * @prop {boolean} [dragging]\n * @prop {boolean} [overflow]\n * @prop {string} [dataTest]\n */\nChip.propTypes = {\n    children: propTypes.string,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    dragging: propTypes.bool,\n    icon: propTypes.element,\n    overflow: propTypes.bool,\n    selected: propTypes.bool,\n    onClick: propTypes.func,\n    onRemove: propTypes.func,\n}\n\nexport { Chip }\n","import cx from 'classnames'\nimport propTypes from '@dhis2/prop-types'\nimport React from 'react'\n\nimport { sizePropType } from './common-prop-types.js'\nimport { theme, spacers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {CircularLoader.PropTypes} props\n * @returns {React.Component}\n * @example import { CircularLoader } from @dhis2/ui-core\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/loading.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/circularloader--default|Storybook}\n */\nconst CircularLoader = ({ small, large, className, dataTest }) => (\n    <div\n        role=\"progressbar\"\n        className={cx(className, {\n            small,\n            large,\n        })}\n        data-test={dataTest}\n    >\n        <svg viewBox=\"22 22 44 44\">\n            <circle\n                className=\"circle\"\n                cx=\"44\"\n                cy=\"44\"\n                r=\"20.2\"\n                fill=\"none\"\n                strokeWidth=\"3.6\"\n            />\n        </svg>\n        <style jsx>{`\n            div {\n                display: inline-block;\n                margin: ${spacers.dp16};\n                color: ${theme.primary600};\n                animation: anim-rotate 1.4s linear infinite;\n\n                width: 50px;\n                height: 50px;\n            }\n\n            .small {\n                width: 24px;\n                height: 24px;\n            }\n\n            .large {\n                width: 80px;\n                height: 80px;\n            }\n\n            svg {\n                max-height: 100%;\n                max-width: 100%;\n            }\n\n            .circle {\n                stroke: currentColor;\n                stroke-dasharray: 80px, 200px;\n                stroke-dashoffset: 0;\n                animation: anim-dash 1.4s ease-in-out infinite;\n            }\n\n            @keyframes anim-rotate {\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            @keyframes anim-dash {\n                0% {\n                    stroke-dasharray: 1px, 200px;\n                    stroke-dashoffset: 0;\n                }\n                50% {\n                    stroke-dasharray: 100px, 200px;\n                    stroke-dashoffset: -15px;\n                }\n                100% {\n                    stroke-dasharray: 100px, 200px;\n                    stroke-dashoffset: -120px;\n                }\n            }\n        `}</style>\n    </div>\n)\n\nCircularLoader.defaultProps = {\n    dataTest: 'dhis2-uicore-circularloader',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [className]\n * @prop {boolean} [small] - `small` and `large` are mutually exclusive.\n * @prop {boolean} [large]\n * @prop {string} [dataTest]\n */\nCircularLoader.propTypes = {\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    large: sizePropType,\n    small: sizePropType,\n}\n\nexport { CircularLoader }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { layers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {ComponentCover.PropTypes} props\n * @returns {React.Component}\n * @example import { ComponentCover } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/componentcover--circularloader|Storybook}\n */\nconst ComponentCover = ({ children, className, dataTest }) => (\n    <div className={className} data-test={dataTest}>\n        {children}\n        <style jsx>{`\n            div {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n\n                position: absolute;\n\n                height: inherit;\n                width: inherit;\n\n                z-index: ${layers.applicationTop - 1};\n                background: rgba(33, 43, 54, 0.4);\n            }\n        `}</style>\n    </div>\n)\n\nComponentCover.defaultProps = {\n    dataTest: 'dhis2-uicore-componentcover',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [className]\n * @prop {Node} [children]\n * @prop {string} [dataTest]\n */\nComponentCover.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nexport { ComponentCover }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { colors, spacers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {Divider.PropTypes} props\n * @returns {React.Component}\n * @example import { Divider } from @dhis2/ui-core\n */\nconst Divider = ({ className, dataTest, dense, margin }) => (\n    <div className={className} data-test={dataTest}>\n        <style jsx>{`\n            div {\n                display: inline-block;\n                width: 100%;\n                height: 1px;\n                background-color: ${colors.grey300};\n            }\n        `}</style>\n        <style jsx>{`\n            div {\n                margin: ${dense ? `${spacers.dp4} 0` : margin};\n            }\n        `}</style>\n    </div>\n)\n\nDivider.defaultProps = {\n    dataTest: 'dhis2-uicore-divider',\n    margin: `${spacers.dp8} 0`,\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [className]\n * @prop {string} [dataTest]\n * @prop {bool} [dense]\n * @prop {string} [margin=\"${spacers.dp8} 0\"] - DEPRECATED: A CSS shorthand declaration for margin. If margin and dense are used at the same time, dense has precedence.\n */\nDivider.propTypes = {\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    margin: propTypes.string,\n}\n\nexport { Divider }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nexport function Upload({ className }) {\n    return (\n        <svg className={className}>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z\" />\n            <style jsx>{`\n                svg {\n                    fill: inherit;\n                    height: 24px;\n                    width: 24px;\n                    vertical-align: middle;\n                    pointer-events: none;\n                }\n            `}</style>\n        </svg>\n    )\n}\n\nUpload.propTypes = {\n    className: propTypes.string,\n}\n","import React, { createRef, Component } from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nimport { statusPropType, sizePropType } from './common-prop-types.js'\nimport { Button } from './Button.js'\nimport { spacers } from './theme.js'\nimport { Upload } from './icons/Upload.js'\nimport { StatusIcon } from './icons/Status.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {FileInput.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { FileInput } from '@dhis2/ui-core'\n */\nclass FileInput extends Component {\n    ref = createRef()\n\n    handleClick = () => {\n        this.ref.current.click()\n    }\n\n    handleChange = e => {\n        if (this.props.onChange) {\n            this.props.onChange(this.createHandlerPayload(), e)\n        }\n\n        // reset the file input so it won't prevent on-change\n        // if the same file was added in a second attempt\n        this.ref.current.value = ''\n    }\n\n    handleBlur = e => {\n        if (this.props.onBlur) {\n            this.props.onBlur(this.createHandlerPayload(), e)\n        }\n    }\n\n    handleFocus = e => {\n        if (this.props.onFocus) {\n            this.props.onFocus(this.createHandlerPayload(), e)\n        }\n    }\n\n    createHandlerPayload() {\n        return {\n            files: this.ref.current.files,\n            name: this.props.name,\n        }\n    }\n\n    render() {\n        const {\n            accept,\n            buttonLabel,\n            className,\n            dataTest,\n            disabled,\n            error,\n            initialFocus,\n            large,\n            multiple,\n            name,\n            small,\n            tabIndex,\n            valid,\n            warning,\n        } = this.props\n\n        return (\n            <div className={cx('file-input', className)} data-test={dataTest}>\n                <input\n                    id={name}\n                    name={name}\n                    type=\"file\"\n                    ref={this.ref}\n                    onChange={this.handleChange}\n                    accept={accept}\n                    multiple={multiple}\n                    disabled={disabled}\n                />\n                <Button\n                    disabled={disabled}\n                    icon={<Upload />}\n                    initialFocus={initialFocus}\n                    large={large}\n                    onBlur={this.handleBlur}\n                    onClick={this.handleClick}\n                    onFocus={this.handleFocus}\n                    small={small}\n                    tabIndex={tabIndex}\n                    type=\"button\"\n                >\n                    {buttonLabel}\n                </Button>\n                <StatusIcon error={error} valid={valid} warning={warning} />\n\n                <style jsx>{`\n                    input {\n                        display: none;\n                    }\n\n                    .file-input {\n                        display: flex;\n                        align-items: center;\n                        padding-bottom: ${spacers.dp4};\n                    }\n\n                    .file-input > :global(svg) {\n                        width: 18px;\n                        height: 18px;\n                        margin-left: ${spacers.dp8};\n                    }\n                `}</style>\n            </div>\n        )\n    }\n}\n\nFileInput.defaultProps = {\n    accept: '*',\n    dataTest: 'dhis2-uicore-fileinput',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [name]\n * @prop {function} [onChange] - called with the signature `object, event`\n * @prop {function} [onFocus] - called with the signature `object, event`\n * @prop {function} [onBlur] - called with the signature `object, event`\n * @prop {string} [buttonLabel]\n * @prop {string} [className]\n * @prop {string} [tabIndex]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning` and `error` are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [small] - `small` and `large` are mutually exclusive\n * @prop {boolean} [large]\n *\n * @prop {string} [accept=*] - the `accept` attribute of the [native file input]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept}\n * @prop {boolean} [multiple] - the `multiple` attribute of the [native file input]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#multiple}\n * @prop {string} [dataTest]\n */\nFileInput.propTypes = {\n    accept: propTypes.string,\n    buttonLabel: propTypes.string,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    initialFocus: propTypes.bool,\n    large: sizePropType,\n    multiple: propTypes.bool,\n    name: propTypes.string,\n    small: sizePropType,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { FileInput }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\n/**\n * @module\n * @param {FileList.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { FileList } from '@dhis2/ui-core'\n */\nconst FileList = ({ children, className, dataTest }) => (\n    <div className={className} data-test={dataTest}>\n        {children}\n        <style jsx>{`\n            div {\n                padding-top: 4px;\n            }\n            :global(.file-input) + div {\n                padding-top: 0;\n            }\n        `}</style>\n    </div>\n)\n\nFileList.defaultProps = {\n    dataTest: 'dhis2-uicore-filelist',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [className]\n * @prop {FileListPlaceholder|FileListItem|Array.<FileListItem>} [children]\n * @prop {string} [dataTest]\n */\nFileList.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nexport { FileList }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { colors, spacers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {FileListPlaceholder.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { FileListPlaceholder } from '@dhis2/ui-core'\n */\nconst FileListPlaceholder = ({ children, dataTest }) => (\n    <p data-test={dataTest}>\n        {children}\n        <style jsx>{`\n            p {\n                margin: 0;\n                padding-top: ${spacers.dp4};\n                font-size: 14px;\n                color: ${colors.grey700};\n            }\n        `}</style>\n    </p>\n)\n\nFileListPlaceholder.defaultProps = {\n    dataTest: 'dhis2-uicore-filelistplaceholder',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [children]\n * @prop {string} [dataTest]\n */\nFileListPlaceholder.propTypes = {\n    children: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nexport { FileListPlaceholder }\n","import React from 'react'\nimport cx from 'classnames'\nimport css from 'styled-jsx/css'\nimport propTypes from '@dhis2/prop-types'\nimport { Required } from './Label/Required.js'\n\nconst styles = css`\n    label {\n        display: block;\n        box-sizing: border-box;\n        font-size: 14px;\n        line-height: 24px;\n        padding: 0;\n    }\n\n    .disabled {\n        cursor: not-allowed;\n    }\n`\n\nconst constructClassName = ({ disabled, className }) =>\n    cx(className, {\n        disabled: disabled,\n    })\n\n/**\n * @module\n * @param {Label.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Label } from '@dhis2/ui-core'\n */\nexport const Label = ({\n    htmlFor,\n    children,\n    required,\n    disabled,\n    className,\n    dataTest,\n}) => (\n    <label\n        htmlFor={htmlFor}\n        className={constructClassName({ className, disabled })}\n        data-test={dataTest}\n    >\n        <span>{children}</span>\n\n        {required && <Required dataTest={`${dataTest}-required`} />}\n\n        <style jsx>{styles}</style>\n    </label>\n)\n\nLabel.defaultProps = {\n    dataTest: 'dhis2-uicore-label',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [htmlFor]\n * @prop {string} [children]\n * @prop {string} [className]\n * @prop {boolean} [required]\n * @prop {boolean} [disabled]\n * @prop {string} [dataTest]\n */\nLabel.propTypes = {\n    children: propTypes.string,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    disabled: propTypes.bool,\n    htmlFor: propTypes.string,\n    required: propTypes.bool,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { statusPropType, sizePropType } from './common-prop-types.js'\nimport { FileInput } from './FileInput.js'\nimport { FileList } from './FileList.js'\nimport { FileListPlaceholder } from './FileListPlaceholder.js'\nimport { Field } from './Field.js'\nimport { Label } from './Label.js'\nimport { Help } from './Help.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {FileInputField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { FileInputField } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/fileinput.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/fileinputfield--default|Storybook}\n */\nconst FileInputField = ({\n    accept,\n    buttonLabel,\n    children,\n    className,\n    dataTest,\n    disabled,\n    error,\n    helpText,\n    initialFocus,\n    label,\n    large,\n    multiple,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    required,\n    small,\n    tabIndex,\n    valid,\n    validationText,\n    warning,\n}) => (\n    <Field className={className} dataTest={dataTest}>\n        {label && (\n            <Label required={required} disabled={disabled} htmlFor={name}>\n                {label}\n            </Label>\n        )}\n\n        <FileInput\n            accept={accept}\n            buttonLabel={buttonLabel}\n            className={className}\n            disabled={disabled}\n            error={error}\n            initialFocus={initialFocus}\n            large={large}\n            multiple={multiple}\n            name={name}\n            onBlur={onBlur}\n            onChange={onChange}\n            onFocus={onFocus}\n            small={small}\n            tabIndex={tabIndex}\n            valid={valid}\n            warning={warning}\n        />\n\n        {helpText && <Help dataTest={`${dataTest}-help`}>{helpText}</Help>}\n\n        {validationText && (\n            <Help\n                error={error}\n                warning={warning}\n                valid={valid}\n                dataTest={`${dataTest}-validation`}\n            >\n                {validationText}\n            </Help>\n        )}\n\n        <FileList>\n            {!children && placeholder ? (\n                <FileListPlaceholder>{placeholder}</FileListPlaceholder>\n            ) : (\n                children\n            )}\n        </FileList>\n    </Field>\n)\n\nFileInputField.defaultProps = {\n    accept: '*',\n    dataTest: 'dhis2-uicore-fileinputfield',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [name]\n * @prop {function} [onChange]\n * @prop {function} [onBlur]\n * @prop {function} [onFocus]\n * @prop {string} [label]\n * @prop {string} [buttonLabel]\n * @prop {string} [className]\n * @prop {string} [placeholder]\n * @prop {string} [tabIndex]\n *\n * @prop {boolean} [required]\n * @prop {boolean} [disabled]\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning` and `error` are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [small] - `small` and `large` are mutually exclusive\n * @prop {boolean} [large]\n *\n * @prop {string} [validationText]\n * @prop {string} [helpText]\n *\n * @prop {FileListItem|Array.<FileListItem>} [children]\n * @prop {string} [accept=*] - the `accept` attribute of the [native file input]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept}\n * @prop {boolean} [multiple] - the `multiple` attribute of the [native file input]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#multiple}\n * @prop {string} [dataTest]\n */\nFileInputField.propTypes = {\n    accept: propTypes.string,\n    buttonLabel: propTypes.string,\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    helpText: propTypes.string,\n    initialFocus: propTypes.bool,\n    label: propTypes.string,\n    large: sizePropType,\n    multiple: propTypes.bool,\n    name: propTypes.string,\n    placeholder: propTypes.string,\n    required: propTypes.bool,\n    small: sizePropType,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    validationText: propTypes.string,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { FileInputField }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nexport function AttachFile({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 48 48\"\n            className={className}\n        >\n            <path d=\"M33 12v23c0 4.42-3.58 8-8 8s-8-3.58-8-8V10c0-2.76 2.24-5 5-5s5 2.24 5 5v21c0 1.1-.89 2-2 2-1.11 0-2-.9-2-2V12h-3v19c0 2.76 2.24 5 5 5s5-2.24 5-5V10c0-4.42-3.58-8-8-8s-8 3.58-8 8v25c0 6.08 4.93 11 11 11s11-4.92 11-11V12h-3z\" />\n            <style jsx>{`\n                svg {\n                    fill: inherit;\n                    height: 24px;\n                    width: 24px;\n                    vertical-align: middle;\n                    pointer-events: none;\n                }\n            `}</style>\n        </svg>\n    )\n}\n\nAttachFile.propTypes = {\n    className: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nimport { colors, spacers } from './theme.js'\nimport { AttachFile } from './icons/AttachFile.js'\nimport { Loading } from './icons/Status.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {FileListItem.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { FileListItem } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/fileinput.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/fileinputfield--file-list|Storybook}\n */\nconst FileListItem = ({\n    className,\n    label,\n    onRemove,\n    removeText,\n    loading,\n    onCancel,\n    cancelText,\n    dataTest,\n}) => (\n    <p className={cx('selected-file', className)} data-test={dataTest}>\n        <span className=\"icon\">{loading ? <Loading /> : <AttachFile />}</span>\n\n        <span className=\"text\">\n            <span className=\"label\">{label}</span>\n\n            {loading && onCancel && cancelText && (\n                <span\n                    className=\"action\"\n                    onClick={event => onCancel({}, event)}\n                    data-test={`${dataTest}-cancel`}\n                >\n                    {cancelText}\n                </span>\n            )}\n\n            {!loading && (\n                <span\n                    className=\"action\"\n                    onClick={event => onRemove({}, event)}\n                    data-test={`${dataTest}-remove`}\n                >\n                    {removeText}\n                </span>\n            )}\n        </span>\n\n        <style jsx>{`\n            p {\n                display: flex;\n                margin: 0;\n                padding-top: ${spacers.dp4};\n                line-height: 18px;\n            }\n            .icon > :global(svg) {\n                width: 12px;\n                height: 12px;\n                line-height: 12px;\n                margin-right: 4px;\n                flex-grow: 0;\n                flex-shrink: 0;\n            }\n            .text {\n                flex-grow: 1;\n                flex-shrink: 1;\n            }\n            .label {\n                font-size: 14px;\n                color: ${colors.grey900};\n                word-break: break-all;\n            }\n            .label::after {\n                content: ' ';\n                display: inline-block;\n                width: 12px;\n            }\n            .action {\n                font-size: 12px;\n                line-height: 12px;\n                margin-top: 0;\n                text-decoration: underline;\n                cursor: pointer;\n                color: ${colors.grey700};\n            }\n        `}</style>\n    </p>\n)\n\nFileListItem.defaultProps = {\n    dataTest: 'dhis2-uicore-filelistitem',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [label]\n * @prop {function} onRemove\n * @prop {string} [removeText]\n * @prop {string} [className]\n * @prop {boolean} [loading]\n * @prop {function} [onCancel]\n * @prop {string} [cancelText]\n * @prop {string} [dataTest]\n */\nFileListItem.propTypes = {\n    onRemove: propTypes.func.isRequired,\n    cancelText: propTypes.string,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    label: propTypes.string,\n    loading: propTypes.bool,\n    removeText: propTypes.string,\n    onCancel: propTypes.func,\n}\n\nexport { FileListItem }\n","import React, { Component } from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { FileListItem } from '../FileListItem.js'\n\nclass FileListItemWithRemove extends Component {\n    handleRemove = event => {\n        const { onRemove, file } = this.props\n\n        onRemove({ file }, event)\n    }\n\n    render() {\n        const { label, removeText, className } = this.props\n\n        return (\n            <FileListItem\n                label={label}\n                removeText={removeText}\n                onRemove={this.handleRemove}\n                className={className}\n            />\n        )\n    }\n}\n\nFileListItemWithRemove.propTypes = {\n    label: propTypes.string.isRequired,\n    removeText: propTypes.string.isRequired,\n    onRemove: propTypes.func.isRequired,\n    className: propTypes.string,\n    file: propTypes.instanceOf(File),\n}\n\nexport { FileListItemWithRemove }\n","import React, { Component } from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { FileInputField } from './FileInputField.js'\nimport { FileListItemWithRemove } from './FileInputFieldWithList/FileListItemWithRemove.js'\nimport { statusPropType, sizePropType } from './common-prop-types.js'\n\n/**\n * @module\n * @param {FileInputFieldWithList.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { FileInputFieldWithList } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/fileinput.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/fileinputfieldwithlist--default|Storybook}\n */\n\nclass FileInputFieldWithList extends Component {\n    handleChange = ({ files: fileList }, event) => {\n        const { onChange, name } = this.props\n\n        onChange({ files: this.updateFileArray(fileList), name: name }, event)\n    }\n\n    /**\n     * @param {FileList} fileList\n     * @returns {File[]}\n     */\n    updateFileArray(fileList) {\n        const { multiple, files } = this.props\n        // Spread immutable FileList instance onto array\n        const newFiles = [...fileList]\n\n        if (!multiple) {\n            return newFiles\n        }\n\n        return files\n            .filter(\n                file =>\n                    !newFiles.some(\n                        x =>\n                            x.name === file.name &&\n                            x.lastModified === file.lastModified &&\n                            x.size === file.size &&\n                            x.type === file.type\n                    )\n            )\n            .concat(newFiles)\n    }\n\n    handleRemove = ({ file: fileToRemove }, event) => {\n        const { files, onChange, name } = this.props\n\n        onChange(\n            {\n                files: files.filter(file => file !== fileToRemove),\n                name,\n            },\n            event\n        )\n    }\n\n    render() {\n        const {\n            accept,\n            buttonLabel,\n            className,\n            dataTest,\n            disabled,\n            error,\n            files,\n            helpText,\n            initialFocus,\n            label,\n            large,\n            multiple,\n            name,\n            onBlur,\n            onFocus,\n            placeholder,\n            removeText,\n            required,\n            small,\n            tabIndex,\n            valid,\n            validationText,\n            warning,\n        } = this.props\n\n        return (\n            <FileInputField\n                accept={accept}\n                buttonLabel={buttonLabel}\n                className={className}\n                dataTest={dataTest}\n                disabled={disabled || (!multiple && files.length >= 1)}\n                error={error}\n                helpText={helpText}\n                initialFocus={initialFocus}\n                label={label}\n                large={large}\n                multiple={multiple}\n                name={name}\n                onBlur={onBlur}\n                onChange={this.handleChange}\n                onFocus={onFocus}\n                placeholder={placeholder}\n                required={required}\n                small={small}\n                tabIndex={tabIndex}\n                valid={valid}\n                validationText={validationText}\n                warning={warning}\n            >\n                {files.map(file => (\n                    <FileListItemWithRemove\n                        key={file.name}\n                        label={file.name}\n                        removeText={removeText}\n                        onRemove={this.handleRemove}\n                        file={file}\n                    />\n                ))}\n            </FileInputField>\n        )\n    }\n}\n\nFileInputFieldWithList.defaultProps = {\n    dataTest: 'dhis2-uicore-fileinputfieldwithlist',\n    files: [],\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [removeText]\n * @prop {function} onChange\n * @prop {Array<File>} [files=[]] - an array of File instances (NOTE: not a FileList instance)\n * @prop {string} [name]\n * @prop {function} [onBlur]\n * @prop {function} [onFocus]\n * @prop {string} [label]\n * @prop {string} [buttonLabel]\n * @prop {string} [className]\n * @prop {string} [placeholder]\n * @prop {string} [tabIndex]\n *\n * @prop {boolean} [required]\n * @prop {boolean} [disabled]\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning` and `error` are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [small] - `small` and `large` are mutually exclusive\n * @prop {boolean} [large]\n *\n * @prop {string} [validationText]\n * @prop {string} [helpText]\n *\n * @prop {FileListItem|Array.<FileListItem>} [children]\n * @prop {string} [accept=*] - the `accept` attribute of the [native file input]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept}\n * @prop {boolean} [multiple] - the `multiple` attribute of the [native file input]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#multiple}\n * @prop {string} [dataTest=dhis2-uicore-fileinputfieldwithlist]\n */\nFileInputFieldWithList.propTypes = {\n    onChange: propTypes.func.isRequired,\n    accept: propTypes.string,\n    buttonLabel: propTypes.string,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    files: propTypes.arrayOf(propTypes.instanceOf(File)),\n    helpText: propTypes.string,\n    initialFocus: propTypes.bool,\n    label: propTypes.string,\n    large: sizePropType,\n    multiple: propTypes.bool,\n    name: propTypes.string,\n    placeholder: propTypes.string,\n    removeText: propTypes.string,\n    required: propTypes.bool,\n    small: sizePropType,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    validationText: propTypes.string,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { FileInputFieldWithList }\n","import propTypes from '@dhis2/prop-types'\nimport React, { Component } from 'react'\nimport css from 'styled-jsx/css'\nimport cx from 'classnames'\n\nimport { statusPropType } from './common-prop-types.js'\nimport { theme, colors, spacers } from './theme.js'\nimport { StatusIcon } from './icons/Status.js'\n\nconst styles = css`\n    .input {\n        display: flex;\n        align-items: center;\n    }\n\n    input {\n        box-sizing: border-box;\n\n        font-size: 14px;\n        line-height: 16px;\n        user-select: text;\n\n        color: ${colors.grey900};\n        background-color: white;\n\n        padding: 12px 11px 10px;\n\n        outline: 0;\n        border: 1px solid ${colors.grey500};\n        border-radius: 3px;\n        box-shadow: inset 0 1px 2px 0 rgba(48, 54, 60, 0.1);\n        text-overflow: ellipsis;\n    }\n\n    input.dense {\n        padding: 8px 11px 6px;\n    }\n\n    input:focus {\n        border-color: ${colors.teal400};\n    }\n\n    input.valid {\n        border-color: ${theme.valid};\n    }\n\n    input.warning {\n        border-color: ${theme.warning};\n    }\n\n    input.error {\n        border-color: ${theme.error};\n    }\n\n    input.read-only {\n        background-color: ${colors.grey100};\n        border-color: ${colors.grey500};\n        cursor: text;\n    }\n\n    input.disabled {\n        background-color: ${colors.grey100};\n        border-color: ${colors.grey500};\n        color: ${theme.disabled};\n        cursor: not-allowed;\n    }\n\n    .status-icon {\n        flex-shrink: 0;\n        flex-grow: 0;\n        margin-left: ${spacers.dp4};\n    }\n`\n\n/**\n * @module\n * @param {Input.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Input } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/inputfield.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/inputfield--default|Storybook}\n */\nexport class Input extends Component {\n    inputRef = React.createRef()\n\n    componentDidMount() {\n        if (this.props.initialFocus) {\n            this.inputRef.current.focus()\n        }\n    }\n\n    handleChange = e => {\n        if (this.props.onChange) {\n            this.props.onChange(this.createHandlerPayload(e), e)\n        }\n    }\n\n    handleBlur = e => {\n        if (this.props.onBlur) {\n            this.props.onBlur(this.createHandlerPayload(e), e)\n        }\n    }\n\n    handleFocus = e => {\n        if (this.props.onFocus) {\n            this.props.onFocus(this.createHandlerPayload(e), e)\n        }\n    }\n\n    createHandlerPayload(e) {\n        return {\n            value: e.target.value,\n            name: this.props.name,\n        }\n    }\n\n    render() {\n        const {\n            className,\n            type,\n            dense,\n            disabled,\n            readOnly,\n            placeholder,\n            name,\n            valid,\n            error,\n            warning,\n            loading,\n            value,\n            tabIndex,\n            dataTest,\n        } = this.props\n\n        return (\n            <div className={cx('input', className)} data-test={dataTest}>\n                <input\n                    id={name}\n                    name={name}\n                    placeholder={placeholder}\n                    ref={this.inputRef}\n                    type={type}\n                    value={value}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                    tabIndex={tabIndex}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    onChange={this.handleChange}\n                    className={cx({\n                        dense,\n                        disabled,\n                        error,\n                        valid,\n                        warning,\n                        'read-only': readOnly,\n                    })}\n                />\n\n                <div className=\"status-icon\">\n                    <StatusIcon\n                        error={error}\n                        valid={valid}\n                        loading={loading}\n                        warning={warning}\n                    />\n                </div>\n\n                <style jsx>{styles}</style>\n                <style jsx>{`\n                    input {\n                        width: 100%;\n                    }\n                `}</style>\n            </div>\n        )\n    }\n}\n\nInput.defaultProps = {\n    type: 'text',\n    dataTest: 'dhis2-uicore-input',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} name\n * @prop {string} [type=text]\n * @prop {function} [onChange] - called with the signature `object, event`\n * @prop {function} [onBlur]\n * @prop {function} [onFocus]\n * @prop {string} [className]\n * @prop {string} [placeholder]\n * @prop {string} [value]\n * @prop {string} [tabIndex]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [readOnly]\n * @prop {boolean} [dense] - Compact mode\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, and `loading`\n * are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [loading]\n * @prop {string} [dataTest]\n */\nInput.propTypes = {\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    initialFocus: propTypes.bool,\n    loading: propTypes.bool,\n    name: propTypes.string,\n    placeholder: propTypes.string,\n    readOnly: propTypes.bool,\n    tabIndex: propTypes.string,\n    type: propTypes.oneOf([\n        'text',\n        'number',\n        'password',\n        'email',\n        'url',\n        'tel',\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'week',\n        'time',\n        'search',\n    ]),\n    valid: statusPropType,\n    value: propTypes.string,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n","import propTypes from '@dhis2/prop-types'\nimport React from 'react'\n\nimport { statusPropType } from './common-prop-types.js'\nimport { Field } from './Field.js'\nimport { Label } from './Label.js'\nimport { Input } from './Input.js'\nimport { Help } from './Help.js'\nimport { Constrictor } from './Constrictor.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {InputField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { InputField } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/inputfield.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/inputfield--no-placeholder-no-value|Storybook}\n */\nclass InputField extends React.Component {\n    render() {\n        const {\n            className,\n            onChange,\n            onFocus,\n            onBlur,\n            initialFocus,\n            type,\n            dense,\n            required,\n            label,\n            disabled,\n            readOnly,\n            placeholder,\n            name,\n            valid,\n            error,\n            warning,\n            loading,\n            value,\n            tabIndex,\n            helpText,\n            validationText,\n            inputWidth,\n            dataTest,\n        } = this.props\n\n        return (\n            <Field className={className} dataTest={dataTest}>\n                {label && (\n                    <Label\n                        required={required}\n                        disabled={disabled}\n                        htmlFor={name}\n                    >\n                        {label}\n                    </Label>\n                )}\n\n                <Constrictor width={inputWidth} minWidth=\"72px\">\n                    <Input\n                        onFocus={onFocus}\n                        onBlur={onBlur}\n                        onChange={onChange}\n                        name={name}\n                        type={type}\n                        value={value || ''}\n                        placeholder={placeholder}\n                        disabled={disabled}\n                        valid={valid}\n                        warning={warning}\n                        error={error}\n                        loading={loading}\n                        dense={dense}\n                        tabIndex={tabIndex}\n                        initialFocus={initialFocus}\n                        readOnly={readOnly}\n                    />\n                </Constrictor>\n\n                {helpText && (\n                    <Help dataTest={`${dataTest}-help`}>{helpText}</Help>\n                )}\n\n                {validationText && (\n                    <Help\n                        error={error}\n                        warning={warning}\n                        valid={valid}\n                        dataTest={`${dataTest}-validation`}\n                    >\n                        {validationText}\n                    </Help>\n                )}\n            </Field>\n        )\n    }\n}\n\nInputField.defaultProps = {\n    dataTest: 'dhis2-uicore-inputfield',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} name\n * @prop {string} [type=text]\n * @prop {function} [onChange]\n * @prop {function} [onBlur]\n * @prop {function} [onFocus]\n * @prop {string} [label]\n * @prop {string} [className]\n * @prop {string} [placeholder]\n * @prop {string} [value]\n * @prop {string} [tabIndex]\n * @prop {string} [inputWidth]\n *\n * @prop {boolean} [required]\n * @prop {boolean} [disabled]\n * @prop {boolean} [readOnly]\n * @prop {boolean} [dense] - Compact mode\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, and `loading`\n * are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [loading]\n *\n * @prop {string} [validationText]\n * @prop {string} [helpText]\n * @prop {string} [dataTest]\n */\nInputField.propTypes = {\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    helpText: propTypes.string,\n    initialFocus: propTypes.bool,\n    inputWidth: propTypes.string,\n    label: propTypes.string,\n    loading: propTypes.bool,\n    name: propTypes.string,\n    placeholder: propTypes.string,\n    readOnly: propTypes.bool,\n    required: propTypes.bool,\n    tabIndex: propTypes.string,\n    type: Input.propTypes.type,\n    valid: statusPropType,\n    validationText: propTypes.string,\n    value: propTypes.string,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { InputField }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { theme, spacers } from './theme.js'\n\nconst Progress = ({ amount }) => {\n    return (\n        <div>\n            <style jsx>{`\n                div {\n                    width: ${amount}%;\n                }\n            `}</style>\n            <style jsx>{`\n                div {\n                    background-color: ${theme.primary600};\n                    transition: width 0.3s linear;\n                    height: 4px;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nProgress.propTypes = {\n    amount: propTypes.number.isRequired,\n}\n\n/**\n * @module\n * @param {LinearLoader.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { LinearLoader } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/loading.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/linearloader--determinate|Storybook}\n */\nconst LinearLoader = ({ amount, width, margin, className, dataTest }) => {\n    return (\n        <div role=\"progressbar\" className={className} data-test={dataTest}>\n            <Progress amount={amount} />\n\n            <style jsx>{`\n                div {\n                    display: block;\n                    overflow: hidden;\n                    overflow-x: hidden;\n                    overflow-y: hidden;\n                    background-color: rgba(110, 122, 138, 0.2);\n                }\n            `}</style>\n            <style jsx>{`\n                div {\n                    width: ${width};\n                    margin: ${margin};\n                }\n            `}</style>\n        </div>\n    )\n}\n\nLinearLoader.defaultProps = {\n    margin: spacers.dp12,\n    width: '300px',\n    dataTest: 'dhis2-uicore-linearloader',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [className]\n * @prop {number} [amount] - The progression in percent without the '%' sign\n * @prop {string} [margin=spacers.dp12] - The margin around the loader, can be a full shorthand\n * @prop {string} [width=300px] - The width of the entire indicator, e.g. '100%' or '300px'\n * @prop {string} [dataTest]\n */\nLinearLoader.propTypes = {\n    amount: propTypes.number.isRequired,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    margin: propTypes.string,\n    width: propTypes.string,\n}\n\nexport { LinearLoader }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nexport function LogoSvg({ iconColor, textColor, className, dataTest }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 600 182\"\n            className={className}\n            data-test={dataTest}\n        >\n            <path\n                fill={iconColor}\n                d=\"M191.91,60,109.17,6.34a19.75,19.75,0,0,0-20.33,0L8.49,58.43a12,12,0,0,0-.25,20.63L88.78,134a19.39,19.39,0,0,0,20.38.25l82.75-53.65a11.87,11.87,0,0,0,0-20.59Zm-91,61.45a4.29,4.29,0,0,1-3.49-.05l-77-52.49L97.13,19.13a4.76,4.76,0,0,1,3.74,0l78.91,51.15Z\"\n            />\n            <path\n                fill={iconColor}\n                d=\"M88.84,47.82,45.28,76.06,58.9,85.39,97.13,60.61a4.76,4.76,0,0,1,3.74,0l39.37,25.52,14-9.06L109.17,47.82A19.78,19.78,0,0,0,88.84,47.82Z\"\n            />\n            <path\n                fill={iconColor}\n                d=\"M191.91,101.46l-8.62-5.59-14,9.06,10.52,6.83-78.91,51.15a4.37,4.37,0,0,1-3.49,0l-77-52.5,10-6.47L16.74,94.57,8.49,99.91a12,12,0,0,0-.25,20.63l80.54,54.92a19.36,19.36,0,0,0,20.38.24l82.74-53.65a11.87,11.87,0,0,0,0-20.59Z\"\n            />\n            <path\n                fill={textColor}\n                d=\"M293.59,70.72q-6.91-11-20.62-11a29.31,29.31,0,0,0-22.88,10.39Q240.76,80.82,240.76,98t9.78,28.3A30.15,30.15,0,0,0,274,137q14,0,20.78-13.39l2.1,11.29h14.6V31.59H293.59Zm0,31.76a18,18,0,0,1-5.27,13.25,16.12,16.12,0,0,1-24.53-1.13q-5.12-6.24-5.12-16.48t5-16.33a15.65,15.65,0,0,1,12.57-6.1q7.53,0,12,4.51A18.36,18.36,0,0,1,293.59,93Z\"\n            />\n            <path\n                fill={textColor}\n                d=\"M368.85,59.73q-14.44,0-22,13.85v-42H329.12V134.85h17.76V101q.3-12.65,5.34-19t12.12-6.32q7.07,0,11,4.14t3.91,12.27v42.75H397V92.1q0-14.61-6.85-23.49T368.85,59.73Z\"\n            />\n            <rect\n                fill={textColor}\n                x=\"414.01\"\n                y=\"61.54\"\n                width=\"17.76\"\n                height=\"73.31\"\n            />\n            <path\n                fill={textColor}\n                d=\"M422.89,27.67q-5.26,0-8.13,2.79a10.15,10.15,0,0,0-2.86,7.6,10.13,10.13,0,0,0,2.86,7.6c1.91,1.86,4.62,2.78,8.13,2.78s6.1-.92,8.05-2.78a10,10,0,0,0,2.94-7.6,10,10,0,0,0-2.94-7.6C429,28.6,426.3,27.67,422.89,27.67Z\"\n            />\n            <path\n                fill={textColor}\n                d=\"M494.39,95.56l-17.31-6.47q-8.88-2.57-8.88-7.83,0-3,3.24-5.35c2.15-1.55,5.19-2.33,9.1-2.33s6.93.71,9,2.11A7.38,7.38,0,0,1,493,81.41h16.71a20.11,20.11,0,0,0-7.91-15.51q-7.6-6.17-21.67-6.17t-22.43,5.65q-8.36,5.64-8.36,15,0,14,17.76,20.17l16,5.71a22.53,22.53,0,0,1,7.08,3.32,6.18,6.18,0,0,1,2.25,5.12c0,2.2-1.23,4.14-3.68,5.79a16.49,16.49,0,0,1-9.41,2.48q-14.89,0-15.21-10.38H447.58q.15,11.6,9,18T480.09,137q14.6,0,23.48-6.92,8.58-6.63,8.58-15.65a15.31,15.31,0,0,0-4.59-11.52Q503,98.42,494.39,95.56Z\"\n            />\n            <path\n                fill={textColor}\n                d=\"M544.06,118.59V115a8.65,8.65,0,0,1,2.79-6.55c1.85-1.75,4.89-3.19,9.11-4.29l15.8-3.92Q585,96.92,591,90.82t5.95-17.24q0-11.13-9.18-18.66-9.5-7.83-24.24-7.83-15.79,0-25.29,6.77Q528.26,61.09,528,74.64h19.72q1.5-12,16.71-12,6.92,0,10.83,3.31a10.42,10.42,0,0,1,3.92,8.29,11.34,11.34,0,0,1-3.39,8.35q-3.39,3.39-11.67,5.49L549.79,91.5q-12.21,3-17.77,9.33-5.71,6.77-5.72,19.26v14.76h71.2V118.59Z\"\n            />\n        </svg>\n    )\n}\n\nLogoSvg.propTypes = {\n    iconColor: propTypes.string.isRequired,\n    textColor: propTypes.string.isRequired,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nexport function LogoIconSvg({ iconColor, className, dataTest }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 200 182\"\n            className={className}\n            data-test={dataTest}\n        >\n            <defs />\n            <path\n                fill={iconColor}\n                d=\"M191.73,60,109,6.34a19.73,19.73,0,0,0-20.32,0L8.31,58.43a12,12,0,0,0-.25,20.63L88.6,134a19.37,19.37,0,0,0,20.37.25l82.76-53.65a11.88,11.88,0,0,0,0-20.59Zm-91,61.45a4.29,4.29,0,0,1-3.49-.05l-77-52.49L97,19.13a4.76,4.76,0,0,1,3.74,0L179.6,70.28Z\"\n            />\n            <path\n                fill={iconColor}\n                d=\"M88.66,47.82,45.1,76.06l13.61,9.33L97,60.61a4.76,4.76,0,0,1,3.74,0l39.37,25.52,14-9.06L109,47.82A19.76,19.76,0,0,0,88.66,47.82Z\"\n            />\n            <path\n                fill={iconColor}\n                d=\"M191.73,101.46l-8.62-5.59-14.05,9.06,10.53,6.83-78.91,51.15a4.37,4.37,0,0,1-3.49,0l-77-52.5,10-6.47L16.55,94.57,8.31,99.91a12,12,0,0,0-.25,20.63L88.6,175.46a19.34,19.34,0,0,0,20.37.24l82.75-53.65a11.88,11.88,0,0,0,0-20.59Z\"\n            />\n        </svg>\n    )\n}\n\nLogoIconSvg.propTypes = {\n    iconColor: propTypes.string.isRequired,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { LogoSvg } from './Logo/LogoSvg'\nimport { LogoIconSvg } from './Logo/LogoIconSvg'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/*\n * This should likely not live in ui-core, but in ui-widgets\n */\n\n/**\n * @module\n * @deprecated\n * @param {Logo.PropTypes} props\n * @returns {React.Component}\n */\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\n\n/*\n * These are official colors for dhis2 logos.\n *\n * They are isolated here and not in `theme.js` as they should not be\n * shared with any other components.\n *\n * https://github.com/dhis2/dhis2-identity\n *\n */\nconst blue = '#0080d4'\nconst white = '#ffffff'\nconst dark = '#212225'\n\nexport const LogoIcon = ({ className, dataTest }) => (\n    <LogoIconSvg iconColor={blue} className={className} dataTest={dataTest} />\n)\n\nLogoIcon.defaultProps = {\n    dataTest: 'dhis2-uicore-logoicon',\n}\n\nLogoIcon.propTypes = {\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nexport const LogoIconWhite = ({ className, dataTest }) => (\n    <LogoIconSvg iconColor={white} className={className} dataTest={dataTest} />\n)\n\nLogoIconWhite.defaultProps = {\n    dataTest: 'dhis2-uicore-logoiconwhite',\n}\n\nLogoIconWhite.propTypes = {\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nexport const Logo = ({ className, dataTest }) => (\n    <LogoSvg\n        iconColor={blue}\n        textColor={dark}\n        className={className}\n        dataTest={dataTest}\n    />\n)\n\nLogo.defaultProps = {\n    dataTest: 'dhis2-uicore-logo',\n}\n\nLogo.propTypes = {\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nexport const LogoWhite = ({ className, dataTest }) => (\n    <LogoSvg\n        iconColor={white}\n        textColor={white}\n        className={className}\n        dataTest={dataTest}\n    />\n)\n\nLogoWhite.defaultProps = {\n    dataTest: 'dhis2-uicore-logowhite',\n}\n\nLogoWhite.propTypes = {\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nexport function ChevronRight({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 48 48\"\n            className={className}\n        >\n            <path d=\"M20 12l-2.83 2.83L26.34 24l-9.17 9.17L20 36l12-12z\" />\n            <style jsx>{`\n                svg {\n                    fill: inherit;\n                    height: 24px;\n                    width: 24px;\n                    vertical-align: middle;\n                    pointer-events: none;\n                }\n            `}</style>\n        </svg>\n    )\n}\nChevronRight.propTypes = {\n    className: propTypes.string,\n}\n\nexport function ChevronLeft({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 48 48\"\n            className={className}\n        >\n            <path d=\"M30.83 14.83L28 12 16 24l12 12 2.83-2.83L21.66 24z\" />\n            <style jsx>{`\n                svg {\n                    fill: inherit;\n                    height: 24px;\n                    width: 24px;\n                    vertical-align: middle;\n                    pointer-events: none;\n                }\n            `}</style>\n        </svg>\n    )\n}\nChevronLeft.propTypes = {\n    className: propTypes.string,\n}\n","import css from 'styled-jsx/css'\nimport { colors, spacers } from '../../theme.js'\n\nexport default css`\n    li {\n        position: relative;\n        padding: 0;\n        cursor: pointer;\n        list-style: none;\n    }\n\n    li div.label:not(:first-child) {\n        margin-left: ${spacers.dp8};\n    }\n\n    li:hover {\n        background-color: ${colors.grey200};\n    }\n\n    li:active,\n    li.active {\n        background-color: ${colors.grey400};\n    }\n\n    .dense .link {\n        padding: ${spacers.dp8} ${spacers.dp12};\n    }\n\n    .dense .label {\n        font-size: 14px;\n        line-height: 16px;\n    }\n\n    .dense .icon {\n        font-size: 20px;\n    }\n\n    .disabled {\n        cursor: not-allowed;\n        pointer-events: none;\n        user-select: none;\n    }\n\n    .disabled .icon,\n    .disabled .label {\n        color: ${colors.grey500};\n    }\n\n    .destructive .label {\n        color: ${colors.red700};\n    }\n\n    .destructive .icon {\n        color: ${colors.red600};\n    }\n\n    li.destructive:hover {\n        background-color: ${colors.red050};\n    }\n\n    li.destructive:active {\n        background-color: ${colors.red100};\n    }\n\n    .link {\n        display: block;\n        height: 100%;\n        padding: 15px ${spacers.dp24};\n        text-decoration: none;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n    }\n\n    .label {\n        color: ${colors.grey900};\n        font-size: 15px;\n        line-height: 18px;\n        user-select: none;\n    }\n\n    .icon {\n        box-sizing: border-box;\n\n        margin-right: ${spacers.dp16};\n        color: #404040;\n        font-size: 24px;\n        pointer-events: none;\n        user-select: none;\n    }\n`\n","import React, { forwardRef } from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\nimport css from 'styled-jsx/css'\n\nimport { ChevronRight } from '../icons/Chevron.js'\nimport styles from './MenuItemContent/styles.js'\n\nconst subChevron = css.resolve`\n    svg {\n        margin: 0 -14px 0 auto;\n        width: 18px;\n        height: 18px;\n        pointer-events: none;\n        user-select: none;\n    }\n`\n\nconst createOnClickHandler = (onClick, value) => evt => {\n    if (onClick) {\n        evt.preventDefault()\n        evt.stopPropagation()\n        onClick({ value }, evt)\n    }\n}\n\nconst MenuItemContent = forwardRef(\n    (\n        {\n            href,\n            onClick,\n            onMouseOver,\n            onMouseOut,\n            target,\n            icon,\n            label,\n            value,\n            className,\n            destructive,\n            disabled,\n            dense,\n            active,\n            dataTest,\n            showChevron,\n        },\n        ref\n    ) => {\n        const isClickable = href || onClick\n        const LinkElement = isClickable ? 'a' : 'span'\n        const linkElementProps = isClickable\n            ? {\n                  href,\n                  onClick: createOnClickHandler(onClick, value),\n              }\n            : {}\n\n        return (\n            <li\n                className={cx(className, {\n                    destructive,\n                    disabled,\n                    dense,\n                    active,\n                })}\n                ref={ref}\n                data-test={dataTest}\n                onMouseOver={onMouseOver}\n                onMouseOut={onMouseOut}\n            >\n                <LinkElement\n                    className=\"link\"\n                    target={target}\n                    {...linkElementProps}\n                >\n                    {icon}\n                    <div className=\"label\">{label}</div>\n\n                    {showChevron && (\n                        <ChevronRight className={subChevron.className} />\n                    )}\n                    {subChevron.styles}\n                </LinkElement>\n\n                <style jsx>{styles}</style>\n            </li>\n        )\n    }\n)\nMenuItemContent.displayName = 'MenuItemContent'\n\nMenuItemContent.propTypes = {\n    active: propTypes.bool,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    destructive: propTypes.bool,\n    disabled: propTypes.bool,\n    href: propTypes.string,\n    icon: propTypes.element,\n    label: propTypes.oneOfType([propTypes.string, propTypes.node]),\n    showChevron: propTypes.bool,\n    target: propTypes.string,\n    value: propTypes.string,\n    onClick: propTypes.func,\n    onMouseOut: propTypes.func,\n    onMouseOver: propTypes.func,\n}\n\nexport { MenuItemContent }\n","export const preventOverflow = {\n    name: 'preventOverflow',\n    options: {\n        altAxis: true,\n        rootBoundary: 'document',\n        boundary: document.body,\n    },\n}\n\nexport const flip = {\n    name: 'flip',\n    options: {\n        rootBoundary: 'document',\n        boundary: document.body,\n    },\n}\n","import React, { Component, createRef } from 'react'\nimport propTypes from 'prop-types'\nimport { createPopper } from '@popperjs/core'\n\nimport {\n    elementRefPropType,\n    referencePlacementPropType,\n} from './common-prop-types.js'\nimport * as baseModifiers from './Popper/modifiers.js'\n\n/**\n * @module\n * @param {Popper.PropTypes} props\n * @returns {React.Component}\n * @description A React wrapper around popper.js.\n *\n * @example import { Popper } from '@dhis2/ui-core'\n *\n * @see Live demo: {@link /demo/?path=/story/popper--default|Storybook}\n * @see Popper js: {@link https://popper.js.org/docs/v2/|Documentation}\n */\n\nclass Popper extends Component {\n    popperInstance = null\n    popperRef = createRef()\n\n    componentDidMount() {\n        const { reference, strategy, onFirstUpdate, placement } = this.props\n\n        this.popperInstance = createPopper(\n            reference.current,\n            this.popperRef.current,\n            {\n                strategy,\n                onFirstUpdate,\n                placement,\n                modifiers: this.deduplicateModifiers(),\n            }\n        )\n    }\n\n    deduplicateModifiers() {\n        const { modifiers } = this.props\n        // Deduplicate modifiers from props and baseModifiers,\n        // when duplicates are encountered (by name), use the\n        // modifier from props so each Popper can be fully custom\n        return Object.keys(baseModifiers)\n            .map(key => baseModifiers[key])\n            .filter(({ name }) => !modifiers.some(m => m.name === name))\n            .concat(modifiers)\n    }\n\n    componentWillUnmount() {\n        this.popperInstance && this.popperInstance.destroy()\n        this.popperInstance = null\n    }\n\n    render() {\n        const { children, dataTest, className } = this.props\n\n        return (\n            <div\n                className={className}\n                data-test={dataTest}\n                ref={this.popperRef}\n            >\n                {children}\n            </div>\n        )\n    }\n}\n\nPopper.defaultProps = {\n    dataTest: 'dhis2-uicore-popper',\n    modifiers: [],\n}\n\n/**\n * @typedef Modifier\n * @type {Object}\n * @property {string} name\n * @property {Object} options\n */\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {Node} children\n * @prop {React.Ref} reference A React ref that refers to the element the Popover should position against\n * @prop {string} [className]\n * @prop {string} [dataTest=dhis2-uicore-popper]\n * @prop {Array.<Modifier>} [modifiers=[]] A property of the `createPopper` options, {@link https://popper.js.org/docs/v2/constructors/|see constructor section of popper.js docs}\n * @prop {('absolute'|'fixed')} [strategy=absolute] A property of the `createPopper` options, {@link https://popper.js.org/docs/v2/constructors/|see constructor section of popper.js docs}\n * @prop {Function} [onFirstUpdate] A property of the `createPopper` options, {@link https://popper.js.org/docs/v2/constructors/|see constructor section of popper.js docs}\n * @prop {('auto'|'auto-start'|'auto-end'|'top'|'top-start'|'top-end'|'bottom'|'bottom-start'|'bottom-end'|'right'|'right-start'|'right-end'|'left'|'left-start'|'left-end')} [placement=top] A property of the `createPopper` options, {@link https://popper.js.org/docs/v2/constructors/|see constructor section of popper.js docs}\n */\n// Prop names follow the names here: https://popper.js.org/docs/v2/constructors/\nPopper.propTypes = {\n    children: propTypes.node.isRequired,\n    reference: elementRefPropType.isRequired,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    modifiers: propTypes.arrayOf(\n        propTypes.shape({\n            name: propTypes.string,\n            options: propTypes.object,\n        })\n    ),\n    placement: referencePlacementPropType,\n    strategy: propTypes.oneOf(['absolute', 'fixed']), // defaults to 'absolute'\n    onFirstUpdate: propTypes.func,\n}\n\nexport { Popper }\n","import React, { useState, useRef } from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { MenuItemContent } from './MenuItemContent'\nimport { Popper } from '../Popper.js'\n\nconst createMenuItemMouseOutHandler = (setOpen, popperRef) => event => {\n    if (!popperRef.current.contains(event.relatedTarget)) {\n        setOpen(false)\n    }\n}\nconst createPopperMouseOutHandler = (\n    setOpen,\n    menuItemRef,\n    popperRef\n) => event => {\n    if (\n        !menuItemRef.current.contains(event.relatedTarget) &&\n        !popperRef.current.contains(event.relatedTarget)\n    ) {\n        setOpen(false)\n    }\n}\n\nconst SubMenu = ({\n    children,\n    active,\n    className,\n    dataTest,\n    dense,\n    destructive,\n    disabled,\n    icon,\n    label,\n}) => {\n    const menuItemRef = useRef()\n    const popperRef = useRef()\n    const [open, setOpen] = useState(false)\n\n    return (\n        <>\n            <MenuItemContent\n                active={active}\n                className={className}\n                dataTest={dataTest}\n                dense={dense}\n                destructive={destructive}\n                disabled={disabled}\n                icon={icon}\n                label={label}\n                showChevron={true}\n                onMouseOver={() => setOpen(true)}\n                onMouseOut={createMenuItemMouseOutHandler(setOpen, popperRef)}\n                ref={menuItemRef}\n            />\n            {open && (\n                <Popper placement=\"right-start\" reference={menuItemRef}>\n                    <div\n                        ref={popperRef}\n                        onMouseOut={createPopperMouseOutHandler(\n                            setOpen,\n                            menuItemRef,\n                            popperRef\n                        )}\n                    >\n                        {children}\n                    </div>\n                </Popper>\n            )}\n        </>\n    )\n}\n\nSubMenu.propTypes = {\n    active: propTypes.bool,\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    destructive: propTypes.bool,\n    disabled: propTypes.bool,\n    icon: propTypes.element,\n    label: propTypes.oneOfType([propTypes.string, propTypes.node]),\n}\n\nexport { SubMenu }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { MenuItemContent } from './MenuItem/MenuItemContent'\nimport { SubMenu } from './MenuItem/SubMenu'\n\n/**\n * @module\n * @param {MenuItem.PropTypes}\n * @returns {React.Component}\n *\n * @example import { MenuItem } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/menu.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/menu--default|Storybook}\n */\nconst MenuItem = ({\n    href,\n    value,\n    label,\n    icon,\n    children,\n    active,\n    destructive,\n    disabled,\n    dense,\n    onClick,\n    className,\n    target,\n    dataTest,\n}) => {\n    return !children ? (\n        <MenuItemContent\n            active={active}\n            className={className}\n            dataTest={dataTest}\n            dense={dense}\n            destructive={destructive}\n            disabled={disabled}\n            href={href}\n            icon={icon}\n            label={label}\n            target={target}\n            value={value}\n            onClick={onClick}\n        />\n    ) : (\n        <SubMenu\n            active={active}\n            className={className}\n            dataTest={dataTest}\n            dense={dense}\n            destructive={destructive}\n            disabled={disabled}\n            icon={icon}\n            label={label}\n        >\n            {children}\n        </SubMenu>\n    )\n}\n\nMenuItem.defaultProps = {\n    dataTest: 'dhis2-uicore-menuitem',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string|Node} [label]\n * @prop {string} [value]\n * @prop {string} [href]\n * @prop {string} [target]\n * @prop {function} [onClick] - Click handler called with `value` as the sole argument\n * @prop {string} [className]\n * @prop {Element} [children]\n * @prop {Element} [icon]\n * @prop {boolean} [dense]\n * @prop {boolean} [active]\n * @prop {boolean} [destructive]\n * @prop {boolean} [disabled]\n * @prop {string} [dataTest]\n */\nMenuItem.propTypes = {\n    active: propTypes.bool,\n    children: propTypes.element,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    destructive: propTypes.bool,\n    disabled: propTypes.bool,\n    href: propTypes.string,\n    icon: propTypes.element,\n    label: propTypes.oneOfType([propTypes.string, propTypes.node]),\n    target: propTypes.string,\n    value: propTypes.string,\n    onClick: propTypes.func,\n}\n\nexport { MenuItem }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\n/**\n * @module\n * @param {MenuList.PropTypes}\n * @returns {React.Component}\n *\n * @example import { MenuList } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/menu.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/menulist--default|Storybook}\n */\nconst MenuList = ({ children, className, dataTest }) => (\n    <ul className={className} data-test={dataTest}>\n        {children}\n\n        <style jsx>{`\n            ul {\n                display: block;\n                position: relative;\n                width: 100%;\n                margin: 0;\n\n                padding: 0;\n                user-select: none;\n            }\n        `}</style>\n    </ul>\n)\n\nMenuList.defaultProps = {\n    dataTest: 'dhis2-uicore-menulist',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nMenuList.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nexport { MenuList }\n","import React, { useContext } from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { layers } from './theme.js'\n\nconst LayerContext = React.createContext(0)\n\nconst getStackedLayer = (zIndex, context) => {\n    // Keep alert layer constant\n    if (zIndex === layers.alert) {\n        return layers.alert\n    }\n\n    // Differentiate between a stacked blocking and applicationTop layer\n    const layerIncrement = zIndex === layers.blocking ? 2 : 1\n    const layer = context + layerIncrement\n\n    // stay within stack layer boundaries defined by the design system\n    // https://github.com/dhis2/design-system/blob/master/principles/spacing-alignment.md#stacking\n    if (layer >= layers.alert) {\n        return layers.alert - 1\n    }\n\n    return layer\n}\n\nconst useLayer = zIndex => {\n    const context = useContext(LayerContext)\n\n    if (context) return getStackedLayer(zIndex, context)\n\n    return zIndex\n}\n\n/**\n * @module\n * @private\n * @param {Layer.PropTypes} props\n * @returns {React.Component}\n */\nconst Layer = ({ children, zIndex }) => {\n    const newLayer = useLayer(zIndex)\n\n    return (\n        <LayerContext.Provider value={newLayer}>\n            {children(newLayer)}\n        </LayerContext.Provider>\n    )\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {function} children\n * @prop {number} zIndex\n */\nLayer.propTypes = {\n    children: propTypes.func.isRequired,\n    zIndex: propTypes.number,\n}\n\nexport { Layer, useLayer }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nimport { Layer } from './LayerContext.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @private\n * @param {Object} PropTypes\n * @returns {React.Component}\n */\nconst Backdrop = ({\n    onClick,\n    transparent,\n    children,\n    zIndex,\n    className,\n    dataTest,\n}) => {\n    return (\n        <Layer zIndex={zIndex}>\n            {zIndexComputed => (\n                <div\n                    className={cx('backdrop', className)}\n                    onClick={event => onClick && onClick({}, event)}\n                    data-test={dataTest}\n                >\n                    <div\n                        onClick={e => {\n                            // stop events from bubbling up through the\n                            // children to the backdrop click handler\n                            e.stopPropagation()\n                        }}\n                    >\n                        {children}\n                    </div>\n\n                    <style jsx>{`\n                        .backdrop {\n                            position: fixed;\n                            height: 100%;\n                            width: 100%;\n                            left: 0;\n                            top: 0;\n                        }\n                    `}</style>\n\n                    <style jsx>{`\n                        .backdrop {\n                            background: ${transparent\n                                ? 'transparent'\n                                : 'rgba(33, 43, 54, 0.4)'};\n\n                            z-index: ${zIndexComputed};\n                        }\n                    `}</style>\n                </div>\n            )}\n        </Layer>\n    )\n}\n\nBackdrop.defaultProps = {\n    dataTest: 'dhis2-uicore-backdrop',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {function} onClick\n * @prop {boolean} transparent\n * @prop {Node} children\n * @prop {number} zIndex\n * @prop {string} className\n * @prop {string} [dataTest]\n */\nBackdrop.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    transparent: propTypes.bool,\n    zIndex: propTypes.number,\n    onClick: propTypes.func,\n}\n\nexport { Backdrop }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { colors } from '../theme.js'\n\nconst ARROW_SIZE = 8\n\n/**\n * Note: the `data-popper-placement` attribute is automatically updated\n * by popper.js in case of flipping etc. So be aware that the value of\n * the `placement` prop that was initially passed to the Popper component\n * and the value of `data-popper-placement` do not always match\n */\n\nconst Arrow = ({ className }) => (\n    <div data-popper-arrow className={className}>\n        <style jsx>{`\n            div {\n                pointer-events: none;\n                width: ${ARROW_SIZE}px;\n                height: ${ARROW_SIZE}px;\n            }\n\n            :global([data-popper-placement^='top']) div {\n                bottom: -${ARROW_SIZE / 2}px;\n            }\n\n            :global([data-popper-placement^='bottom']) div {\n                top: -${ARROW_SIZE / 2}px;\n            }\n\n            :global([data-popper-placement^='left']) div {\n                right: -${ARROW_SIZE / 2}px;\n            }\n\n            :global([data-popper-placement^='right']) div {\n                left: -${ARROW_SIZE / 2}px;\n            }\n\n            :global([data-popper-arrow-displaced]) div {\n                visibility: hidden;\n            }\n\n            div::after {\n                content: '';\n                position: absolute;\n                pointer-events: none;\n                box-sizing: border-box;\n                border-style: solid;\n                border-width: ${ARROW_SIZE / 2}px;\n                border-color: transparent transparent ${colors.white}\n                    ${colors.white};\n                box-shadow: -1px 1px 1px 0 rgba(64, 75, 90, 0.08),\n                    -3px 3px 8px -6px rgba(64, 75, 90, 0.15);\n            }\n\n            :global([data-popper-placement^='top']) div::after {\n                transform: rotate(-45deg);\n            }\n\n            :global([data-popper-placement^='bottom']) div::after {\n                transform: rotate(135deg);\n            }\n\n            :global([data-popper-placement^='left']) div::after {\n                transform: rotate(-135deg);\n            }\n\n            :global([data-popper-placement^='right']) div::after {\n                transform: rotate(45deg);\n            }\n        `}</style>\n    </div>\n)\n\nArrow.propTypes = {\n    className: propTypes.string,\n}\n\nexport { Arrow, ARROW_SIZE }\n","import { ARROW_SIZE } from './Arrow.js'\n\nconst BORDER_RADIUS = 4\n\nconst computeArrowPadding = () => {\n    // pythagoras\n    const diagonal = Math.sqrt(2 * Math.pow(ARROW_SIZE, 2))\n    const overflowInPx = (diagonal - ARROW_SIZE) / 2\n    const padding = BORDER_RADIUS + overflowInPx\n\n    return Math.ceil(padding)\n}\n\nexport const offset = {\n    name: 'offset',\n    options: {\n        offset: [0, ARROW_SIZE],\n    },\n}\n\nexport const arrow = {\n    name: 'arrow',\n    options: {\n        padding: computeArrowPadding(),\n    },\n}\n\nexport const hideArrowWhenDisplaced = {\n    name: 'hideArrowWhenDisplaced',\n    enabled: true,\n    phase: 'main',\n    fn: ({ state }) => {\n        const halfArrow = ARROW_SIZE / 2\n        const displacement = state.modifiersData.preventOverflow\n        const referenceRect = state.rects.reference\n        const shouldHideArrow =\n            Math.abs(displacement.x) >= referenceRect.width + halfArrow ||\n            Math.abs(displacement.y) >= referenceRect.height + halfArrow\n\n        state.attributes.popper['data-popper-arrow-displaced'] = shouldHideArrow\n\n        return state\n    },\n    requires: ['preventOverflow'],\n}\n","import React from 'react'\nimport { createPortal } from 'react-dom'\nimport propTypes from 'prop-types'\n\nimport {\n    elementRefPropType,\n    referencePlacementPropType,\n} from './common-prop-types.js'\n\nimport { Popper } from './Popper'\nimport { Backdrop } from './Backdrop'\n\nimport { Arrow } from './Popover/Arrow'\nimport { arrow, offset, hideArrowWhenDisplaced } from './Popover/modifiers.js'\nimport { colors, elevations } from './theme.js'\n\nconst arroModifiers = [arrow, offset, hideArrowWhenDisplaced]\n/**\n * @module\n * @param {Popover.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Popover } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/popover.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/popover--default|Storybook}\n */\n\nconst Popover = ({\n    children,\n    reference,\n    arrow,\n    className,\n    dataTest,\n    elevation,\n    maxWidth,\n    placement,\n    onBackdropClick,\n}) =>\n    createPortal(\n        <Backdrop onClick={onBackdropClick} transparent>\n            <Popper\n                dataTest={`${dataTest}-popper`}\n                placement={placement}\n                reference={reference}\n                modifiers={arrow ? arroModifiers : []}\n                className={className}\n            >\n                <div>\n                    {children}\n                    {arrow && <Arrow />}\n                    <style jsx>{`\n                        div {\n                            max-width: ${maxWidth}px;\n                            box-shadow: ${elevation};\n                            background-color: ${colors.white};\n                            border-radius: 4px;\n                        }\n                    `}</style>\n                </div>\n            </Popper>\n        </Backdrop>,\n        document.body\n    )\n\nPopover.defaultProps = {\n    arrow: true,\n    dataTest: 'dhis2-uicore-popover',\n    elevation: elevations.e200,\n    maxWidth: 360,\n    placement: 'top',\n}\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {React.Ref} reference A React ref that refers to the element the Popover should position against\n * @prop {Node} children\n * @prop {boolean} [arrow=true] Show or hide the arrow\n * @prop {string} [className]\n * @prop {string} [dataTest=dhis2-uicore-popover]\n * @prop {number} [maxWidth=360]\n * @prop {('auto'|'auto-start'|'auto-end'|'top'|'top-start'|'top-end'|'bottom'|'bottom-start'|'bottom-end'|'right'|'right-start'|'right-end'|'left'|'left-start'|'left-end')} [placement=top]\n * @prop {function} [onBackdropClick]\n */\nPopover.propTypes = {\n    children: propTypes.node.isRequired,\n    reference: elementRefPropType.isRequired,\n    arrow: propTypes.bool,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    maxWidth: propTypes.number,\n    placement: referencePlacementPropType,\n    onBackdropClick: propTypes.func,\n}\n\nexport { Popover }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { colors, theme } from '../theme.js'\nimport css from 'styled-jsx/css'\n\nconst styles = css`\n    svg {\n        display: block;\n        pointer-events: none;\n    }\n\n    svg {\n        fill: ${theme.default};\n    }\n\n    circle.background {\n        fill: ${colors.white};\n    }\n\n    svg.checked {\n        fill: ${colors.teal400};\n    }\n\n    svg.disabled {\n        fill: ${colors.grey400};\n    }\n\n    svg.error {\n        fill: ${theme.error};\n    }\n\n    svg.valid {\n        fill: ${theme.valid};\n    }\n\n    svg.warning {\n        fill: ${theme.warning};\n    }\n\n    svg:not(.checked) .inner,\n    svg:not(.checked) .outer.checked {\n        fill: none;\n    }\n`\n\nexport function Regular({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 18 18\"\n            className={className}\n        >\n            <circle className=\"background\" cx=\"9\" cy=\"9\" r=\"9\"></circle>\n            <path\n                d=\"M9,18 C13.9705627,18 18,13.9705627 18,9 C18,4.02943725 13.9705627,0 9,0 C4.02943725,0 0,4.02943725 0,9 C0,13.9705627 4.02943725,18 9,18 Z M9,16 C5.13400675,16 2,12.8659932 2,9 C2,5.13400675 5.13400675,2 9,2 C12.8659932,2 16,5.13400675 16,9 C16,12.8659932 12.8659932,16 9,16 Z\"\n                className=\"outer\"\n            ></path>\n            <circle className=\"inner\" cx=\"9\" cy=\"9\" r=\"5\"></circle>\n            <style jsx>{`\n                svg {\n                    height: 18px;\n                    width: 18px;\n                }\n            `}</style>\n            <style jsx>{styles}</style>\n        </svg>\n    )\n}\nRegular.propTypes = {\n    className: propTypes.string,\n}\n\nexport function Dense({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 14 14\"\n            className={className}\n        >\n            <circle className=\"background\" cx=\"7\" cy=\"7\" r=\"7\"></circle>\n            <path\n                d=\"M7,14 C10.8659932,14 14,10.8659932 14,7 C14,3.13400675 10.8659932,0 7,0 C3.13400675,0 0,3.13400675 0,7 C0,10.8659932 3.13400675,14 7,14 Z M7,13 C3.6862915,13 1,10.3137085 1,7 C1,3.6862915 3.6862915,1 7,1 C10.3137085,1 13,3.6862915 13,7 C13,10.3137085 10.3137085,13 7,13 Z\"\n                className=\"outer unchecked\"\n            ></path>\n            <path\n                d=\"M7,14 C10.8659932,14 14,10.8659932 14,7 C14,3.13400675 10.8659932,0 7,0 C3.13400675,0 0,3.13400675 0,7 C0,10.8659932 3.13400675,14 7,14 Z M7,12 C4.23857625,12 2,9.76142375 2,7 C2,4.23857625 4.23857625,2 7,2 C9.76142375,2 12,4.23857625 12,7 C12,9.76142375 9.76142375,12 7,12 Z\"\n                className=\"outer checked\"\n            ></path>\n            <circle className=\"inner\" cx=\"7\" cy=\"7\" r=\"3\"></circle>\n            <style jsx>{`\n                svg {\n                    height: 14px;\n                    width: 14px;\n                }\n            `}</style>\n            <style jsx>{styles}</style>\n        </svg>\n    )\n}\nDense.propTypes = {\n    className: propTypes.string,\n}\n","import cx from 'classnames'\nimport propTypes from '@dhis2/prop-types'\nimport React, { Component, createRef } from 'react'\n\nimport { statusPropType } from './common-prop-types.js'\nimport { Regular, Dense } from './icons/Radio.js'\nimport { colors, theme } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n *\n * @param {Radio.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Radio } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/radio.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/radio--default|Storybook}\n */\nclass Radio extends Component {\n    ref = createRef()\n\n    componentDidMount() {\n        if (this.props.initialFocus) {\n            this.ref.current.focus()\n        }\n    }\n\n    handleChange = e => {\n        if (this.props.onChange) {\n            this.props.onChange(this.createHandlerPayload(), e)\n        }\n    }\n\n    handleBlur = e => {\n        if (this.props.onBlur) {\n            this.props.onBlur(this.createHandlerPayload(), e)\n        }\n    }\n\n    handleFocus = e => {\n        if (this.props.onFocus) {\n            this.props.onFocus(this.createHandlerPayload(), e)\n        }\n    }\n\n    createHandlerPayload() {\n        return {\n            value: this.props.value,\n            name: this.props.name,\n            checked: !this.props.checked,\n        }\n    }\n\n    render() {\n        const {\n            checked = false,\n            className,\n            disabled,\n            error,\n            label,\n            name,\n            tabIndex,\n            valid,\n            value,\n            warning,\n            dense,\n            dataTest,\n        } = this.props\n\n        const classes = cx({\n            checked,\n            disabled,\n            valid,\n            error,\n            warning,\n        })\n\n        return (\n            <label\n                className={cx(className, {\n                    disabled,\n                    dense,\n                })}\n                data-test={dataTest}\n            >\n                <input\n                    type=\"radio\"\n                    ref={this.ref}\n                    name={name}\n                    value={value}\n                    checked={checked}\n                    disabled={disabled}\n                    tabIndex={tabIndex}\n                    onChange={this.handleChange}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                />\n\n                <div className={cx('icon', { dense })}>\n                    {dense ? (\n                        <Dense className={classes} />\n                    ) : (\n                        <Regular className={classes} />\n                    )}\n                </div>\n\n                {label}\n\n                <style jsx>{`\n                    label {\n                        display: flex;\n                        flex-direction: row;\n                        align-items: center;\n                        justify-content: flex-start;\n                        cursor: pointer;\n                        pointer-events: all;\n                        user-select: none;\n                        color: ${colors.grey900};\n                        font-size: 16px;\n                        line-height: 20px;\n                    }\n\n                    label.dense {\n                        font-size: 14px;\n                        line-height: 16px;\n                    }\n\n                    label.disabled {\n                        cursor: not-allowed;\n                        color: ${theme.disabled};\n                    }\n\n                    input {\n                        opacity: 0;\n                        pointer-events: none;\n                        position: absolute;\n                    }\n\n                    .icon {\n                        pointer-events: none;\n                        user-select: none;\n                        margin-right: 5px;\n                        border: 2px solid transparent;\n                        padding: 1px;\n                        border-radius: 50%;\n                    }\n\n                    label.dense .icon {\n                        margin-right: 3px;\n                    }\n\n                    input:focus + .icon {\n                        border-color: ${colors.blue600};\n                    }\n                `}</style>\n            </label>\n        )\n    }\n}\n\nRadio.defaultProps = {\n    dataTest: 'dhis2-uicore-radio',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [value]\n * @prop {Node} [label]\n * @prop {function} [onChange] - called with the signature `object, event`\n * @prop {string} [name]\n * @prop {string} [className]\n * @prop {string} [tabIndex]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [checked]\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, and `error` are\n * mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [dense]\n *\n * @prop {function} [onFocus]\n * @prop {function} [onBlur]\n * @prop {string} [dataTest]\n */\nRadio.propTypes = {\n    checked: propTypes.bool,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    initialFocus: propTypes.bool,\n    label: propTypes.node,\n    name: propTypes.string,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    value: propTypes.string,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { Radio }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { ToggleGroup } from './ToggleGroup.js'\nimport { statusPropType } from './common-prop-types.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {RadioGroup.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { RadioGroup } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/radio.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/radiogroup--default|Storybook}\n */\n\nconst RadioGroup = ({\n    children,\n    onChange,\n    name,\n    value,\n    className,\n    disabled,\n    valid,\n    warning,\n    error,\n    dense,\n    dataTest,\n}) => (\n    <ToggleGroup\n        onChange={onChange}\n        name={name}\n        value={value}\n        className={className}\n        disabled={disabled}\n        valid={valid}\n        warning={warning}\n        error={error}\n        dense={dense}\n        dataTest={dataTest}\n    >\n        {children}\n    </ToggleGroup>\n)\n\nRadioGroup.defaultProps = {\n    dataTest: 'dhis2-uicore-radiogroup',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Array.<Radio>} [children]\n * @prop {function} [onChange]\n * @prop {string} name\n *\n * @prop {string} [value]\n * @prop {string} [className]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [valid] - `valid`, `warning`, and `error` are\n * mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [dense]\n * @prop {string} [dataTest]\n */\nRadioGroup.propTypes = {\n    children: propTypes.arrayOf(propTypes.element),\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    name: propTypes.string,\n    valid: statusPropType,\n    value: propTypes.string,\n    warning: statusPropType,\n    onChange: propTypes.func,\n}\n\nexport { RadioGroup }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { ToggleGroupField } from './ToggleGroupField.js'\nimport { statusPropType } from './common-prop-types.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {RadioGroupField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { RadioGroupField } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/radio.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/radiogroupfield--default|Storybook}\n */\n\nconst RadioGroupField = ({\n    children,\n    onChange,\n    name,\n    value,\n    className,\n    disabled,\n    valid,\n    warning,\n    error,\n    dense,\n    label,\n    helpText,\n    validationText,\n    required,\n    dataTest,\n}) => (\n    <ToggleGroupField\n        onChange={onChange}\n        name={name}\n        value={value}\n        className={className}\n        disabled={disabled}\n        valid={valid}\n        warning={warning}\n        error={error}\n        dense={dense}\n        label={label}\n        helpText={helpText}\n        validationText={validationText}\n        required={required}\n        dataTest={dataTest}\n    >\n        {children}\n    </ToggleGroupField>\n)\n\nRadioGroupField.defaultProps = {\n    dataTest: 'dhis2-uicore-radiogroupfield',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Array.<Radio>} [children]\n * @prop {function} [onChange]\n * @prop {string} name\n *\n * @prop {string} [value]\n * @prop {string} [className]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [valid] - `valid`, `warning`, and `error` are\n * mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [dense]\n * @prop {string} [label]\n * @prop {string} [helpText]\n * @prop {string} [validationText]\n * @prop {boolean} [required]\n * @prop {string} [dataTest]\n */\nRadioGroupField.propTypes = {\n    children: propTypes.arrayOf(propTypes.element),\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    helpText: propTypes.string,\n    label: propTypes.string,\n    name: propTypes.string,\n    required: propTypes.bool,\n    valid: statusPropType,\n    validationText: propTypes.string,\n    value: propTypes.string,\n    warning: statusPropType,\n    onChange: propTypes.func,\n}\n\nexport { RadioGroupField }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { Backdrop } from './Backdrop.js'\nimport { insideAlignmentPropType } from './common-prop-types.js'\nimport { layers, spacers } from './theme.js'\n\nconst Content = ({ children, position }) => (\n    <div className={position}>\n        {children}\n        <style jsx>{`\n            div {\n                position: absolute;\n                left: 50%;\n                width: auto;\n                height: auto;\n            }\n\n            .top {\n                top: ${spacers.dp64};\n            }\n\n            .middle {\n                top: 50%;\n                transform: translate(-50%, -50%);\n            }\n\n            .bottom {\n                top: auto;\n                bottom: ${spacers.dp64};\n            }\n        `}</style>\n    </div>\n)\n\nContent.propTypes = {\n    children: propTypes.node,\n    position: insideAlignmentPropType,\n}\n\n/**\n * @module\n *\n * @param {ScreenCover.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { ScreenCover } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/principles/spacing-alignment.md#stacking|Design system}\n * @see Live demo: {@link /demo/?path=/story/screencover--default|Storybook}\n */\nconst ScreenCover = ({ children, onClick, className, dataTest, position }) => {\n    return (\n        <Backdrop\n            onClick={onClick}\n            zIndex={layers.blocking}\n            className={className}\n            dataTest={dataTest}\n        >\n            <Content position={position}>{children}</Content>\n        </Backdrop>\n    )\n}\n\nScreenCover.defaultProps = {\n    dataTest: 'dhis2-uicore-screencover',\n    position: 'middle',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {function} [onClick]\n * @prop {string} [className]\n * @prop {Node} [children]\n * @prop {string} [dataTest]\n */\nScreenCover.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    position: insideAlignmentPropType,\n    onClick: propTypes.func,\n}\n\nexport { ScreenCover }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { colors } from '../theme.js'\nimport css from 'styled-jsx/css'\n\nconst styles = css`\n    svg {\n        display: block;\n        pointer-events: none;\n        height: 18px;\n        width: 35px;\n    }\n\n    svg.dense {\n        height: 14px;\n        width: 27px;\n    }\n\n    svg .background,\n    svg .border {\n        fill: ${colors.grey600};\n    }\n\n    svg .checkmark,\n    svg .cross,\n    svg .handle {\n        fill: ${colors.white};\n    }\n\n    svg.checked .handle-unchecked,\n    svg:not(.checked) .handle-checked {\n        fill: none;\n    }\n\n    svg.checked .background {\n        fill: ${colors.teal400};\n    }\n    svg.valid .background {\n        fill: ${colors.blue600};\n    }\n    svg.warning .background {\n        fill: ${colors.yellow700};\n    }\n    svg.error .background {\n        fill: ${colors.red500};\n    }\n\n    svg.checked .border {\n        fill: ${colors.teal700};\n    }\n\n    svg.disabled .background {\n        fill: ${colors.grey300};\n    }\n    svg.disabled .border {\n        fill: ${colors.grey400};\n    }\n\n    svg.valid .border {\n        fill: ${colors.blue600};\n    }\n    svg.valid.checked .border,\n    svg.valid.indeterminate .border {\n        fill: ${colors.blue700};\n    }\n\n    svg.warning .border {\n        fill: ${colors.yellow700};\n    }\n    svg.warning.checked .border {\n        fill: ${colors.yellow800};\n    }\n\n    svg.error .border {\n        fill: ${colors.red500};\n    }\n    svg.error.checked .border {\n        fill: ${colors.red700};\n    }\n`\n\nexport function Regular({ className }) {\n    return (\n        <svg\n            viewBox=\"0 0 42 22\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className={className}\n        >\n            <path\n                d=\"M0,11 L0,11 C0,4.92486775 4.92076837,0 11.0075657,0 L30.9924343,0 C37.071745,0 42,4.923532 42,11 L42,11 C42,17.0751322 37.0792316,22 30.9924343,22 L11.0075657,22 C4.92825504,22 0,17.0791222 0,11 L0,11 Z\"\n                className=\"background\"\n                fill=\"red\"\n            ></path>\n            <path\n                d=\"M30.9924343,0 C36.975248,0 41.8432574,4.76846989 41.99629,10.7115309 L42,11 C42,17.0751322 37.0792316,22 30.9924343,22 L11.0075657,22 C5.02475203,22 0.156742552,17.2341007 0.00370995454,11.2885915 L0,11 C0,4.92486775 4.92076837,0 11.0075657,0 L30.9924343,0 Z M30.9924343,1 L11.0075657,1 C5.47559009,1 0.99991738,5.47461611 0.99991738,10.9871457 L1.00337887,11.2628608 C1.14271146,16.6761076 5.5768313,21 11.0075657,21 L30.9924343,21 C36.5244099,21 41.0000827,16.5253839 41.0000827,11.0128598 L40.9966214,10.7372722 C40.8572703,5.32553352 36.4222391,1 30.9924343,1 Z\"\n                className=\"border\"\n                // fill=\"#00695C\"\n                // fillRule=\"nonzero\"\n            ></path>\n            <path\n                d=\"M27.7071068,7.29289322 L30,9.585 L32.2928932,7.29289322 C32.6533772,6.93240926 33.2206082,6.90467972 33.6128994,7.20970461 L33.7071068,7.29289322 C34.0976311,7.68341751 34.0976311,8.31658249 33.7071068,8.70710678 L33.7071068,8.70710678 L31.415,11 L33.7071068,13.2928932 C34.0976311,13.6834175 34.0976311,14.3165825 33.7071068,14.7071068 C33.3165825,15.0976311 32.6834175,15.0976311 32.2928932,14.7071068 L30,12.415 L27.7071068,14.7071068 C27.3466228,15.0675907 26.7793918,15.0953203 26.3871006,14.7902954 L26.2928932,14.7071068 C25.9023689,14.3165825 25.9023689,13.6834175 26.2928932,13.2928932 L26.2928932,13.2928932 L28.585,11 L26.2928932,8.70710678 C25.9023689,8.31658249 25.9023689,7.68341751 26.2928932,7.29289322 C26.6834175,6.90236893 27.3165825,6.90236893 27.7071068,7.29289322 Z\"\n                className=\"cross\"\n                fill=\"#FFFFFF\"\n            ></path>\n            <path\n                d=\"M7.74451387,10.0285252 C7.39595738,10.1198564 7.12375034,10.3923519 7.03251575,10.7412777 C6.94128115,11.0902035 7.04521722,11.4612586 7.30437605,11.7118278 L10.2982384,14.7078028 C10.6875399,15.0973991 11.3185977,15.0973991 11.7078992,14.7078028 L16.695624,8.71585285 C16.9547828,8.46528367 17.0587189,8.09422851 16.9674843,7.74530271 C16.8762497,7.39637691 16.6040426,7.12388146 16.2554861,7.0325502 C15.9069296,6.94121893 15.5362672,7.04526513 15.2859632,7.30469855 L11.0030688,12.5910713 L8.71403676,10.3006735 C8.46373279,10.0412401 8.09307036,9.9371939 7.74451387,10.0285252 Z\"\n                className=\"checkmark\"\n                // fill=\"#FFFFFF\"\n                // fillRule=\"nonzero\"\n            ></path>\n            <path\n                d=\"M11,20 C15.9705627,20 20,15.9705627 20,11 C20,6.02943725 15.9705627,2 11,2 C6.02943725,2 2,6.02943725 2,11 C2,15.9705627 6.02943725,20 11,20 Z\"\n                className=\"handle handle-unchecked\"\n                // fill=\"#FFFFFF\"\n            ></path>\n            <path\n                d=\"M31,20 C35.9705627,20 40,15.9705627 40,11 C40,6.02943725 35.9705627,2 31,2 C26.0294373,2 22,6.02943725 22,11 C22,15.9705627 26.0294373,20 31,20 Z\"\n                className=\"handle handle-checked\"\n                // fill=\"#FFFFFF\"\n            ></path>\n            <style jsx>{styles}</style>\n        </svg>\n    )\n}\nRegular.propTypes = {\n    className: propTypes.string,\n}\n","import cx from 'classnames'\nimport propTypes from '@dhis2/prop-types'\nimport React, { Component, createRef } from 'react'\n\nimport { statusPropType } from './common-prop-types.js'\nimport { Regular } from './icons/Switch.js'\nimport { colors, theme } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n *\n * @param {Switch.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Switch } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/switch.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/switch--default|Storybook}\n */\nclass Switch extends Component {\n    ref = createRef()\n\n    componentDidMount() {\n        if (this.props.initialFocus) {\n            this.ref.current.focus()\n        }\n    }\n\n    handleChange = e => {\n        if (this.props.onChange) {\n            this.props.onChange(this.createHandlerPayload(), e)\n        }\n    }\n\n    handleBlur = e => {\n        if (this.props.onBlur) {\n            this.props.onBlur(this.createHandlerPayload(), e)\n        }\n    }\n\n    handleFocus = e => {\n        if (this.props.onFocus) {\n            this.props.onFocus(this.createHandlerPayload(), e)\n        }\n    }\n\n    createHandlerPayload() {\n        return {\n            value: this.props.value,\n            name: this.props.name,\n            checked: !this.props.checked,\n        }\n    }\n\n    render() {\n        const {\n            checked = false,\n            className,\n            disabled,\n            error,\n            label,\n            name,\n            tabIndex,\n            valid,\n            value,\n            warning,\n            dense,\n            dataTest,\n        } = this.props\n\n        const classes = cx({\n            checked,\n            disabled,\n            valid,\n            error,\n            warning,\n            dense,\n        })\n\n        return (\n            <label\n                className={cx(className, {\n                    disabled,\n                    dense,\n                })}\n                data-test={dataTest}\n            >\n                <input\n                    type=\"checkbox\"\n                    ref={this.ref}\n                    name={name}\n                    value={value}\n                    checked={checked}\n                    disabled={disabled}\n                    tabIndex={tabIndex}\n                    onChange={this.handleChange}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                />\n\n                <div className={cx('icon', { dense })}>\n                    <Regular className={classes} />\n                </div>\n\n                {label}\n\n                <style jsx>{`\n                    label {\n                        display: flex;\n                        flex-direction: row;\n                        align-items: center;\n                        justify-content: flex-start;\n                        cursor: pointer;\n                        pointer-events: all;\n                        user-select: none;\n                        color: ${colors.grey900};\n                        font-size: 16px;\n                        line-height: 20px;\n                    }\n\n                    label.dense {\n                        font-size: 14px;\n                        line-height: 16px;\n                    }\n\n                    label.disabled {\n                        cursor: not-allowed;\n                        color: ${theme.disabled};\n                    }\n\n                    input {\n                        opacity: 0;\n                        pointer-events: none;\n                        position: absolute;\n                    }\n\n                    .icon {\n                        pointer-events: none;\n                        user-select: none;\n                        margin-right: 5px;\n                        border: 2px solid transparent;\n                        padding: 1px;\n                        border-radius: 14px;\n                    }\n\n                    label.dense .icon {\n                        margin-right: 3px;\n                        border-radius: 12px;\n                    }\n\n                    input:focus + .icon {\n                        border-color: ${colors.blue600};\n                    }\n                `}</style>\n            </label>\n        )\n    }\n}\n\nSwitch.defaultProps = {\n    dataTest: 'dhis2-uicore-switch',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [value]\n * @prop {Node} [label]\n * @prop {function} [onChange] - called with the signature `object, event`\n * @prop {string} [name]\n * @prop {string} [className]\n * @prop {string} [tabIndex]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [checked]\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, and `error` are\n * mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [dense]\n *\n * @prop {function} [onFocus]\n * @prop {function} [onBlur]\n * @prop {string} [dataTest]\n */\nSwitch.propTypes = {\n    checked: propTypes.bool,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    initialFocus: propTypes.bool,\n    label: propTypes.node,\n    name: propTypes.string,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    value: propTypes.string,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { Switch }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { statusPropType } from './common-prop-types.js'\nimport { ToggleField } from './ToggleField.js'\nimport { Switch } from './Switch.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {SwitchField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { SwitchField } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/switch.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/switchfield--default|Storybook}\n */\n\nconst SwitchField = ({\n    value,\n    label,\n    name,\n    className,\n    tabIndex,\n    onChange,\n    onFocus,\n    onBlur,\n    checked,\n    disabled,\n    valid,\n    warning,\n    error,\n    dense,\n    initialFocus,\n    required,\n    helpText,\n    validationText,\n    dataTest,\n}) => (\n    <ToggleField\n        toggleComponent={Switch}\n        value={value}\n        label={label}\n        name={name}\n        className={className}\n        tabIndex={tabIndex}\n        onChange={onChange}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        checked={checked}\n        disabled={disabled}\n        valid={valid}\n        warning={warning}\n        error={error}\n        dense={dense}\n        initialFocus={initialFocus}\n        required={required}\n        helpText={helpText}\n        validationText={validationText}\n        dataTest={dataTest}\n    />\n)\n\nSwitchField.defaultProps = {\n    dataTest: 'dhis2-uicore-switchfield',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} value\n * @prop {string} [label]\n *\n * @prop {string} [name]\n * @prop {string} [className]\n * @prop {string} [tabIndex]\n *\n * @prop {function} [onChange]\n * @prop {function} [onFocus]\n * @prop {function} [onBlur]\n *\n * @prop {boolean} [checked]\n * @prop {boolean} [disabled]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, and `error` are\n * mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [dense]\n * @prop {boolean} [initialFocus]\n * @prop {boolean} [required]\n * @prop {string} [helpText]\n * @prop {string} [validationText]\n * @prop {string} [dataTest]\n */\nSwitchField.propTypes = {\n    checked: propTypes.bool,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    helpText: propTypes.string,\n    initialFocus: propTypes.bool,\n    label: propTypes.node,\n    name: propTypes.string,\n    required: propTypes.bool,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    validationText: propTypes.string,\n    value: propTypes.string,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { SwitchField }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { ToggleGroup } from './ToggleGroup.js'\nimport { statusPropType } from './common-prop-types.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {SwitchGroup.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { SwitchGroup } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/switch.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/switchgroup--default|Storybook}\n */\n\nconst SwitchGroup = ({\n    children,\n    onChange,\n    name,\n    value,\n    className,\n    disabled,\n    valid,\n    warning,\n    error,\n    dense,\n    dataTest,\n}) => (\n    <ToggleGroup\n        onChange={onChange}\n        name={name}\n        value={value}\n        className={className}\n        disabled={disabled}\n        valid={valid}\n        warning={warning}\n        error={error}\n        dense={dense}\n        dataTest={dataTest}\n    >\n        {children}\n    </ToggleGroup>\n)\n\nSwitchGroup.defaultProps = {\n    dataTest: 'dhis2-uicore-switchgroup',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Array.<Switch>} [children]\n * @prop {function} [onChange]\n * @prop {string} name\n *\n * @prop {Array.<String>} [value]\n * @prop {string} [className]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [valid] - `valid`, `warning`, and `error` are\n * mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [dense]\n * @prop {string} [dataTest]\n */\nSwitchGroup.propTypes = {\n    children: propTypes.arrayOf(propTypes.element),\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    name: propTypes.string,\n    valid: statusPropType,\n    value: propTypes.arrayOf(propTypes.string),\n    warning: statusPropType,\n    onChange: propTypes.func,\n}\n\nexport { SwitchGroup }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { ToggleGroupField } from './ToggleGroupField.js'\nimport { statusPropType } from './common-prop-types.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {SwitchGroupField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { SwitchGroupField } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/switch.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/switchgroupfield--default|Storybook}\n */\n\nconst SwitchGroupField = ({\n    children,\n    onChange,\n    name,\n    value,\n    className,\n    disabled,\n    valid,\n    warning,\n    error,\n    dense,\n    label,\n    helpText,\n    validationText,\n    required,\n    dataTest,\n}) => (\n    <ToggleGroupField\n        onChange={onChange}\n        name={name}\n        value={value}\n        className={className}\n        disabled={disabled}\n        valid={valid}\n        warning={warning}\n        error={error}\n        dense={dense}\n        label={label}\n        helpText={helpText}\n        validationText={validationText}\n        required={required}\n        dataTest={dataTest}\n    >\n        {children}\n    </ToggleGroupField>\n)\n\nSwitchGroupField.defaultProps = {\n    dataTest: 'dhis2-uicore-switchgroupfield',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Array.<Switch>} [children]\n * @prop {function} [onChange]\n * @prop {string} name\n *\n * @prop {Array.<String>} [value]\n * @prop {string} [className]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [valid] - `valid`, `warning`, and `error` are\n * mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [dense]\n * @prop {string} [label]\n * @prop {string} [helpText]\n * @prop {string} [validationText]\n * @prop {boolean} [required]\n * @prop {string} [dataTest]\n */\nSwitchGroupField.propTypes = {\n    children: propTypes.arrayOf(propTypes.element),\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    helpText: propTypes.string,\n    label: propTypes.string,\n    name: propTypes.string,\n    required: propTypes.bool,\n    valid: statusPropType,\n    validationText: propTypes.string,\n    value: propTypes.arrayOf(propTypes.string),\n    warning: statusPropType,\n    onChange: propTypes.func,\n}\n\nexport { SwitchGroupField }\n","import propTypes from '@dhis2/prop-types'\nimport React from 'react'\n\nexport const TagIcon = ({ children, dataTest }) => (\n    <div data-test={dataTest}>\n        {children}\n        <style jsx>{`\n            margin-right: 4px;\n            width: 12px;\n            height: 12px;\n            overflow: hidden;\n            flex-shrink: 0;\n        `}</style>\n    </div>\n)\n\nTagIcon.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    children: propTypes.node,\n}\n","import propTypes from '@dhis2/prop-types'\nimport React from 'react'\n\nexport const TagText = ({ children, dataTest }) => (\n    <span data-test={dataTest}>\n        {children}\n        <style jsx>{`\n            overflow: hidden;\n            white-space: nowrap;\n            text-overflow: ellipsis;\n        `}</style>\n    </span>\n)\n\nTagText.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    children: propTypes.node,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nimport { TagIcon } from './Tag/TagIcon.js'\nimport { TagText } from './Tag/TagText.js'\nimport { colors } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {Tag.PropTypes} props\n * @returns {React.Component}\n * @example import { Tag } from @dhis2/ui-core\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/tag.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/tag--default|Storybook}\n */\n\nexport const Tag = ({\n    neutral,\n    negative,\n    positive,\n    icon,\n    bold,\n    className,\n    dataTest,\n    children,\n}) => (\n    <div\n        data-test={dataTest}\n        className={cx(className, {\n            neutral,\n            positive,\n            negative,\n            bold,\n        })}\n    >\n        {icon && <TagIcon dataTest={`${dataTest}-icon`}>{icon}</TagIcon>}\n        <TagText dataTest={`${dataTest}-text`}>{children}</TagText>\n        <style jsx>\n            {`\n                div {\n                    padding: 5px 6px 3px;\n                    border-radius: 3px;\n                    background-color: ${colors.grey300};\n                    fill: ${colors.grey700};\n                    color: ${colors.grey900};\n                    max-width: 240px;\n                    display: inline-flex;\n                    font-size: 13px;\n                    line-height: 12px;\n                    height: 23px;\n                }\n                .negative {\n                    background-color: ${colors.red100};\n                    fill: ${colors.red800};\n                    color: ${colors.red900};\n                }\n\n                .neutral {\n                    background-color: ${colors.blue100};\n                    fill: ${colors.blue800};\n                    color: ${colors.blue900};\n                }\n\n                .positive {\n                    background-color: ${colors.green100};\n                    fill: ${colors.green800};\n                    color: ${colors.green900};\n                }\n\n                .bold {\n                    font-weight: 700;\n                    background-color: ${colors.grey700};\n                    color: ${colors.white};\n                    fill: ${colors.white};\n                }\n\n                .bold.neutral {\n                    background-color: ${colors.blue800};\n                    color: ${colors.blue050};\n                    fill: ${colors.white};\n                }\n\n                .bold.positive {\n                    background-color: ${colors.green700};\n                    color: ${colors.green050};\n                    fill: ${colors.white};\n                }\n\n                .bold.negative {\n                    background-color: ${colors.red700};\n                    color: ${colors.red050};\n                    fill: ${colors.white};\n                }\n            `}\n        </style>\n    </div>\n)\n\nconst tagVariantPropType = propTypes.mutuallyExclusive(\n    ['neutral', 'positive', 'negative'],\n    propTypes.bool\n)\n\nTag.defaultProps = {\n    dataTest: 'dhis2-uicore-tag',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {boolean} [bold]\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n * @prop {Node} [icon]\n * @prop {boolean} [neutral] - `neutral`, `positive`, and\n * `negative` are mutually exclusive boolean props\n * @prop {boolean} [positive]\n * @prop {boolean} [negative]\n */\n\nTag.propTypes = {\n    bold: propTypes.bool,\n    children: propTypes.string,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    icon: propTypes.node,\n    negative: tagVariantPropType,\n    neutral: tagVariantPropType,\n    positive: tagVariantPropType,\n}\n","import css from 'styled-jsx/css'\nimport { colors, theme, spacers } from '../theme.js'\n\nexport const styles = css`\n    .textarea {\n        display: flex;\n    }\n    textarea {\n        box-sizing: border-box;\n        padding: 8px 12px;\n\n        color: ${colors.grey900};\n        background-color: transparent;\n\n        border: 1px solid ${colors.grey500};\n        border-radius: 3px;\n        box-shadow: inset 0 0 0 1px rgba(102, 113, 123, 0.15),\n            inset 0 1px 2px 0 rgba(102, 113, 123, 0.1);\n        outline: 0;\n\n        font-size: 14px;\n        line-height: 16px;\n        user-select: text;\n    }\n\n    textarea.dense {\n        padding: 4px 12px;\n    }\n\n    textarea:focus {\n        border-color: ${colors.teal400};\n    }\n\n    textarea.valid {\n        border-color: ${theme.valid};\n    }\n\n    textarea.warning {\n        border-color: ${theme.warning};\n    }\n\n    textarea.error {\n        border-color: ${theme.error};\n    }\n\n    textarea.read-only {\n        background-color: ${colors.grey100};\n        border-color: ${colors.grey500};\n        cursor: text;\n    }\n\n    textarea.disabled {\n        background-color: ${colors.grey100};\n        border-color: ${colors.grey500};\n        color: ${theme.disabled};\n        cursor: not-allowed;\n    }\n\n    .status-icon {\n        flex-grow: 0;\n        flex-shrink: 0;\n        margin-left: ${spacers.dp4};\n    }\n`\n","import propTypes from '@dhis2/prop-types'\nimport React, { Component } from 'react'\nimport cx from 'classnames'\n\nimport { statusPropType } from './common-prop-types.js'\nimport { StatusIcon } from './icons/Status.js'\nimport { styles } from './TextArea/styles.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {TextArea.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { TextArea } from '@dhis2/ui-core'\n */\nexport class TextArea extends Component {\n    textareaRef = React.createRef()\n    state = {\n        height: 'auto',\n    }\n    textareaDimensions = { width: 0, height: 0 }\n    userHasResized = false\n\n    componentDidMount() {\n        this.attachResizeListener()\n\n        if (this.props.initialFocus) {\n            this.textareaRef.current.focus()\n        }\n\n        if (this.shouldDoAutoGrow()) {\n            this.setHeight()\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.shouldDoAutoGrow() && this.props.value !== prevProps.value) {\n            this.setHeight()\n        }\n    }\n\n    attachResizeListener() {\n        const textarea = this.textareaRef.current\n        textarea.addEventListener('mousedown', this.setTextareaDimensions)\n        textarea.addEventListener('mouseup', this.hasUserResized)\n    }\n\n    removeResizeListener() {\n        const textarea = this.textareaRef.current\n        textarea.removeEventListener('mousedown', this.setTextareaDimensions)\n        textarea.removeEventListener('mouseup', this.hasUserResized)\n    }\n\n    setHeight() {\n        const textarea = this.textareaRef.current\n        const offset = textarea.offsetHeight - textarea.clientHeight\n        const height = textarea.scrollHeight + offset + 'px'\n        this.setState({ height })\n    }\n\n    setTextareaDimensions = () => {\n        const textarea = this.textareaRef.current\n        this.textareaDimensions = {\n            width: textarea.clientWidth,\n            height: textarea.clientHeight,\n        }\n    }\n\n    shouldDoAutoGrow() {\n        return this.props.autoGrow && !this.userHasResized\n    }\n\n    hasUserResized = () => {\n        const { width: oldWidth, height: oldHeight } = this.textareaDimensions\n\n        this.setTextareaDimensions()\n\n        const { width: newWidth, height: newHeight } = this.textareaDimensions\n        const userHasResized = newWidth !== oldWidth || newHeight !== oldHeight\n\n        if (userHasResized) {\n            this.userHasResized = true\n            this.removeResizeListener()\n        }\n    }\n\n    handleChange = e => {\n        if (this.props.onChange) {\n            this.props.onChange(this.createHandlerPayload(e), e)\n        }\n    }\n\n    handleBlur = e => {\n        if (this.props.onBlur) {\n            this.props.onBlur(this.createHandlerPayload(e), e)\n        }\n    }\n\n    handleFocus = e => {\n        if (this.props.onFocus) {\n            this.props.onFocus(this.createHandlerPayload(e), e)\n        }\n    }\n\n    createHandlerPayload(e) {\n        return {\n            value: e.target.value,\n            name: this.props.name,\n        }\n    }\n\n    render() {\n        const {\n            className,\n            dense,\n            disabled,\n            readOnly,\n            placeholder,\n            name,\n            valid,\n            error,\n            warning,\n            loading,\n            value,\n            tabIndex,\n            rows,\n            width,\n            resize,\n            dataTest,\n        } = this.props\n        const { height } = this.state\n\n        return (\n            <div className={cx('textarea', className)} data-test={dataTest}>\n                <textarea\n                    id={name}\n                    name={name}\n                    placeholder={placeholder}\n                    ref={this.textareaRef}\n                    value={value}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                    tabIndex={tabIndex}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    onChange={this.handleChange}\n                    rows={rows}\n                    className={cx({\n                        dense,\n                        disabled,\n                        error,\n                        valid,\n                        warning,\n                        'read-only': readOnly,\n                    })}\n                />\n\n                <div className=\"status-icon\">\n                    <StatusIcon\n                        error={error}\n                        valid={valid}\n                        loading={loading}\n                        warning={warning}\n                    />\n                </div>\n\n                <style jsx>{styles}</style>\n                <style jsx>{`\n                    textarea {\n                        width: ${width};\n                        height: ${height};\n                        resize: ${resize};\n                    }\n                `}</style>\n            </div>\n        )\n    }\n}\n\nTextArea.defaultProps = {\n    rows: 4,\n    width: '100%',\n    resize: 'vertical',\n    dataTest: 'dhis2-uicore-textarea',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} name\n * @prop {function} [onChange] - called with the signature `object, event`\n * @prop {function} [onBlur]\n * @prop {function} [onFocus]\n * @prop {string} [className]\n * @prop {string} [placeholder]\n * @prop {string} [value]\n * @prop {string} [tabIndex]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [dense] - Compact mode\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, and `loading`\n * are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [loading]\n *\n * @prop {boolean} [autoGrow]\n * @prop {boolean} [readOnly]\n * @prop {string} [resize=vertical] - resize attribute on the textarea,\n * one of `none`, `both`, `horizontal`, `vertical`\n * @prop {number} [rows=4]\n * @prop {string} [width]\n * @prop {string} [dataTest]\n */\nTextArea.propTypes = {\n    autoGrow: propTypes.bool,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    initialFocus: propTypes.bool,\n    loading: propTypes.bool,\n    name: propTypes.string,\n    placeholder: propTypes.string,\n    readOnly: propTypes.bool,\n    resize: propTypes.oneOf(['none', 'both', 'horizontal', 'vertical']),\n    rows: propTypes.number,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    value: propTypes.string,\n    warning: statusPropType,\n    width: propTypes.string,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n","import propTypes from '@dhis2/prop-types'\nimport React from 'react'\n\nimport { statusPropType } from './common-prop-types.js'\nimport { Field } from './Field.js'\nimport { Label } from './Label.js'\nimport { TextArea } from './TextArea.js'\nimport { Help } from './Help.js'\nimport { Constrictor } from './Constrictor.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {TextAreaField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { TextAreaField } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/update-input/atoms/inputfield.md#textarea|Design system}\n * @see Live demo: {@link /demo/?path=/story/textareafield--default|Storybook}\n */\nconst TextAreaField = ({\n    className,\n    onChange,\n    onFocus,\n    onBlur,\n    initialFocus,\n    dense,\n    required,\n    label,\n    disabled,\n    placeholder,\n    name,\n    valid,\n    error,\n    warning,\n    loading,\n    value,\n    tabIndex,\n    helpText,\n    validationText,\n    autoGrow,\n    readOnly,\n    resize,\n    rows,\n    inputWidth,\n    dataTest,\n}) => (\n    <Field className={className} dataTest={dataTest}>\n        {label && (\n            <Label required={required} disabled={disabled} htmlFor={name}>\n                {label}\n            </Label>\n        )}\n\n        <Constrictor width={inputWidth} minWidth=\"220px\">\n            <TextArea\n                onFocus={onFocus}\n                onBlur={onBlur}\n                onChange={onChange}\n                name={name}\n                value={value || ''}\n                placeholder={placeholder}\n                disabled={disabled}\n                valid={valid}\n                warning={warning}\n                error={error}\n                loading={loading}\n                dense={dense}\n                tabIndex={tabIndex}\n                initialFocus={initialFocus}\n                autoGrow={autoGrow}\n                readOnly={readOnly}\n                resize={resize}\n                rows={rows}\n            />\n        </Constrictor>\n\n        {helpText && <Help dataTest={`${dataTest}-help`}>{helpText}</Help>}\n\n        {validationText && (\n            <Help\n                error={error}\n                warning={warning}\n                valid={valid}\n                dataTest={`${dataTest}-validation`}\n            >\n                {validationText}\n            </Help>\n        )}\n    </Field>\n)\n\nTextAreaField.defaultProps = {\n    rows: 4,\n    width: '100%',\n    resize: 'vertical',\n    dataTest: 'dhis2-uicore-textareafield',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} name\n * @prop {function} [onChange]\n * @prop {function} [onBlur]\n * @prop {function} [onFocus]\n * @prop {string} [label]\n * @prop {string} [className]\n * @prop {string} [placeholder]\n * @prop {string} [value]\n * @prop {string} [tabIndex]\n *\n * @prop {boolean} [required]\n * @prop {boolean} [disabled]\n * @prop {boolean} [dense] - Compact mode\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, and `loading`\n * are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [loading]\n *\n * @prop {string} [validationText]\n * @prop {string} [helpText]\n *\n * @prop {boolean} [autoGrow]\n * @prop {boolean} [readOnly]\n * @prop {string} [resize=vertical] - resize attribute on the textarea,\n * one of `none`, `both`, `horizontal`, `vertical`\n * @prop {number} [rows=4]\n * @prop {string} [inputWidth]\n * @prop {string} [dataTest]\n */\nTextAreaField.propTypes = {\n    autoGrow: propTypes.bool,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    helpText: propTypes.string,\n    initialFocus: propTypes.bool,\n    inputWidth: propTypes.string,\n    label: propTypes.string,\n    loading: propTypes.bool,\n    name: propTypes.string,\n    placeholder: propTypes.string,\n    readOnly: propTypes.bool,\n    required: propTypes.bool,\n    resize: propTypes.oneOf(['none', 'both', 'horizontal', 'vertical']),\n    rows: propTypes.number,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    validationText: propTypes.string,\n    value: propTypes.string,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { TextAreaField }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nexport const ArrowDown = ({ className }) => (\n    <svg\n        viewBox=\"0 0 16 16\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className={className}\n    >\n        <g\n            id=\"icon/16/arrow-down\"\n            stroke=\"none\"\n            strokeWidth=\"1\"\n            fill=\"none\"\n            fillRule=\"evenodd\"\n        >\n            <path\n                d=\"M7.29289,11.7071 C7.68342,12.0976 8.31658,12.0976 8.70711,11.7071 L13.7071,6.70711 C14.0976,6.31658 14.0976,5.68342 13.7071,5.29289 C13.3166,4.90237 12.6834,4.90237 12.2929,5.29289 L8,9.58579 L3.70711,5.29289 C3.31658,4.90237 2.68342,4.90237 2.29289,5.29289 C1.90237,5.68342 1.90237,6.31658 2.29289,6.70711 L7.29289,11.7071 Z\"\n                id=\"arrow-down\"\n                fill=\"#4A5768\"\n            ></path>\n        </g>\n        <style jsx>{`\n            svg {\n                fill: inherit;\n                height: 16px;\n                width: 16px;\n                vertical-align: middle;\n            }\n        `}</style>\n    </svg>\n)\n\nArrowDown.propTypes = {\n    className: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\nimport { statusPropType } from '../common-prop-types.js'\nimport { ArrowDown } from './ArrowDown.js'\nimport { colors, theme } from '../theme.js'\n\nconst InputWrapper = ({\n    dataTest,\n    onToggle,\n    children,\n    tabIndex,\n    error,\n    warning,\n    valid,\n    disabled,\n    dense,\n    className,\n    inputRef,\n}) => {\n    const classNames = cx(className, 'root', {\n        error,\n        warning,\n        valid,\n        disabled,\n        dense,\n    })\n\n    return (\n        <div\n            className={classNames}\n            onClick={onToggle}\n            tabIndex={tabIndex}\n            ref={inputRef}\n            data-test={dataTest}\n        >\n            <div className=\"root-children\">{children}</div>\n            <div className=\"root-right\">\n                <ArrowDown />\n            </div>\n\n            <style jsx>{`\n                .root {\n                    align-items: center;\n                    background-color: white;\n                    border-radius: 3px;\n                    border: 1px solid ${colors.grey500};\n                    box-sizing: border-box;\n                    display: flex;\n                    min-height: 40px;\n                    padding: 6px 12px;\n                    box-shadow: inset 0 1px 2px 0 rgba(48, 54, 60, 0.1);\n                }\n\n                .root:focus,\n                .root:active {\n                    border-color: ${colors.teal400};\n                    outline: 0;\n                }\n\n                .root.valid {\n                    border-color: ${theme.valid};\n                }\n\n                .root.warning {\n                    border-color: ${theme.warning};\n                }\n\n                .root.error {\n                    border-color: ${theme.error};\n                }\n\n                .root.disabled {\n                    background-color: ${colors.grey100};\n                    border-color: ${colors.grey500};\n                    color: ${theme.disabled};\n                    cursor: not-allowed;\n                }\n\n                .root.dense {\n                    padding: 4px 8px;\n                    min-height: 32px;\n                }\n\n                .root-children {\n                    flex-grow: 1;\n                }\n\n                .root-right {\n                    margin-left: auto;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nInputWrapper.defaultProps = {\n    tabIndex: '0',\n}\n\nInputWrapper.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    inputRef: propTypes.object.isRequired,\n    tabIndex: propTypes.string.isRequired,\n    onToggle: propTypes.func.isRequired,\n    children: propTypes.element,\n    className: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    valid: statusPropType,\n    warning: statusPropType,\n}\n\nexport { InputWrapper }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport propTypes from '@dhis2/prop-types'\nimport { resolve } from 'styled-jsx/css'\nimport { Card } from '../Card.js'\nimport { layers } from '../theme.js'\nimport { Backdrop } from '../Backdrop.js'\nimport { Popper } from '../Popper.js'\n\nconst MenuWrapper = ({\n    children,\n    dataTest,\n    maxHeight,\n    menuWidth,\n    onClick,\n    selectRef,\n}) => {\n    const { styles, className: cardClassName } = resolve`\n        height: auto;\n        max-height: ${maxHeight};\n        overflow: auto;\n    `\n    return ReactDOM.createPortal(\n        <Backdrop onClick={onClick} transparent zIndex={layers.applicationTop}>\n            <Popper reference={selectRef} placement=\"bottom\">\n                <div data-test={`${dataTest}-menuwrapper`}>\n                    <Card className={cardClassName}>{children}</Card>\n\n                    {styles}\n\n                    <style jsx>{`\n                        div {\n                            width: ${menuWidth};\n                        }\n                    `}</style>\n                </div>\n            </Popper>\n        </Backdrop>,\n        document.body\n    )\n}\n\nMenuWrapper.defaultProps = {\n    maxHeight: '280px',\n}\n\nMenuWrapper.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    menuWidth: propTypes.string.isRequired,\n    selectRef: propTypes.object.isRequired,\n    children: propTypes.node,\n    maxHeight: propTypes.string,\n    onClick: propTypes.func,\n}\n\nexport { MenuWrapper }\n","import React, { Component } from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport {\n    statusPropType,\n    singleSelectedPropType,\n    multiSelectedPropType,\n} from './common-prop-types.js'\nimport { InputWrapper } from './Select/InputWrapper.js'\nimport { MenuWrapper } from './Select/MenuWrapper.js'\n\n// Keycodes for the keypress event handlers\nconst ESCAPE_KEY = 27\nconst SPACE_KEY = 32\nconst UP_KEY = 38\nconst DOWN_KEY = 40\n\nexport class Select extends Component {\n    state = {\n        open: false,\n        menuWidth: 'auto',\n    }\n\n    selectRef = React.createRef()\n    inputRef = React.createRef()\n\n    componentDidMount() {\n        if (this.props.initialFocus) {\n            this.inputRef.current.focus()\n        }\n        this.setState({\n            menuWidth: `${this.inputRef.current.offsetWidth}px`,\n        })\n    }\n\n    handleFocusInput = () => {\n        this.inputRef.current.focus()\n    }\n\n    onFocus = e => {\n        const { onFocus, disabled, selected } = this.props\n\n        if (disabled || !onFocus) {\n            return\n        }\n\n        onFocus({ selected }, e)\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n\n    onToggle = e => {\n        if (this.props.disabled) {\n            return\n        }\n\n        e.stopPropagation()\n\n        this.state.open ? this.handleClose() : this.handleOpen()\n    }\n\n    onOutsideClick = e => {\n        const { onBlur, disabled, selected } = this.props\n\n        if (disabled) {\n            return\n        }\n\n        this.handleClose()\n\n        if (onBlur) {\n            onBlur({ selected }, e)\n        }\n    }\n\n    onKeyDown = e => {\n        if (this.props.disabled) {\n            return\n        }\n\n        e.stopPropagation()\n\n        const { open } = this.state\n        const { keyCode } = e\n        const shouldOpen =\n            !open &&\n            (keyCode === SPACE_KEY ||\n                keyCode === UP_KEY ||\n                keyCode === DOWN_KEY)\n        const shouldClose = open && keyCode === ESCAPE_KEY\n\n        if (shouldClose) {\n            return this.handleClose()\n        }\n\n        if (shouldOpen) {\n            return this.handleOpen()\n        }\n    }\n\n    render() {\n        const { open, menuWidth } = this.state\n        const {\n            children,\n            className,\n            selected,\n            onChange,\n            tabIndex,\n            maxHeight,\n            error,\n            warning,\n            valid,\n            disabled,\n            dense,\n            dataTest,\n        } = this.props\n\n        // We need to update the menu's position on selection because\n        // that can cause the input area to change size\n        const handleChange = (data, e) => {\n            onChange(data, e)\n        }\n\n        // Create the input\n        const inputProps = {\n            selected,\n            onChange: handleChange,\n            options: children,\n            disabled,\n        }\n        const input = React.cloneElement(this.props.input, inputProps)\n\n        // Create the menu\n        const menuProps = {\n            selected,\n            onChange: handleChange,\n            options: children,\n            handleClose: this.handleClose,\n            handleFocusInput: this.handleFocusInput,\n        }\n        const menu = React.cloneElement(this.props.menu, menuProps)\n\n        return (\n            <div\n                className={className}\n                ref={this.selectRef}\n                onFocus={this.onFocus}\n                onKeyDown={this.onKeyDown}\n                data-test={dataTest}\n            >\n                <InputWrapper\n                    onToggle={this.onToggle}\n                    inputRef={this.inputRef}\n                    tabIndex={tabIndex}\n                    error={error}\n                    warning={warning}\n                    valid={valid}\n                    disabled={disabled}\n                    dense={dense}\n                    dataTest={`${dataTest}-input`}\n                >\n                    {input}\n                </InputWrapper>\n                {open && (\n                    <MenuWrapper\n                        onClick={this.onOutsideClick}\n                        maxHeight={maxHeight}\n                        selectRef={this.selectRef}\n                        menuWidth={menuWidth}\n                        dataTest={`${dataTest}-menu`}\n                    >\n                        {menu}\n                    </MenuWrapper>\n                )}\n            </div>\n        )\n    }\n}\n\nSelect.defaultProps = {\n    dataTest: 'dhis2-uicore-select',\n}\n\nSelect.propTypes = {\n    input: propTypes.element.isRequired,\n    menu: propTypes.element.isRequired,\n    selected: propTypes.oneOfType([\n        singleSelectedPropType,\n        multiSelectedPropType,\n    ]).isRequired,\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    error: statusPropType,\n    initialFocus: propTypes.bool,\n    maxHeight: propTypes.string,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n","import React from 'react'\n\n// Check whether an option is valid\nexport const checkIfValidOption = option =>\n    option &&\n    'props' in option &&\n    'value' in option.props &&\n    'label' in option.props\n\n// Filters all children that won't be rendered from an array of react children\nexport const filterIgnored = children =>\n    React.Children.toArray(children).filter(\n        child => child !== null && child !== false && child !== undefined\n    )\n\n// Find an option in an array of react children\nexport const findOptionChild = (targetOption, optionChildren) =>\n    React.Children.toArray(optionChildren).find(currentOption => {\n        if (!currentOption.props) {\n            return false\n        }\n\n        const matchesLabel = targetOption.label === currentOption.props.label\n        const matchesValue = targetOption.value === currentOption.props.value\n\n        return matchesLabel && matchesValue\n    })\n\n// Find an option in an array of option objects\nexport const findOption = (targetOption, optionArray) =>\n    optionArray.find(currentOption => {\n        const matchesLabel = targetOption.label === currentOption.label\n        const matchesValue = targetOption.value === currentOption.value\n\n        return matchesLabel && matchesValue\n    })\n\n// Remove a specific option from an array of options\nexport const removeOption = (targetOption, optionArray) =>\n    optionArray.filter(currentOption => {\n        const matchesLabel = targetOption.label === currentOption.label\n        const matchesValue = targetOption.value === currentOption.value\n\n        return !matchesLabel && !matchesValue\n    })\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\nimport { singleSelectedPropType } from '../common-prop-types.js'\nimport { spacers } from '../theme.js'\nimport { findOptionChild } from '../Select/option-helpers.js'\n\nconst Selection = ({ options, selected, className }) => {\n    const selectedOption = findOptionChild(selected, options)\n\n    if (!selectedOption) {\n        const message =\n            'The selected option could not be found as a child of the select. ' +\n            'Make sure that the value and label passed to the `selected` prop ' +\n            'match an existing option.'\n        throw new Error(message)\n    }\n\n    const icon = selectedOption.props.icon\n    const label = selectedOption.props.label\n\n    return (\n        <div className={cx(className, 'root')}>\n            {icon && <div className=\"root-icon\">{icon}</div>}\n            {label}\n\n            <style jsx>{`\n                .root {\n                    display: flex;\n                    align-items: center;\n                    user-select: none;\n                }\n\n                .root-icon {\n                    margin-right: ${spacers.dp8};\n                    width: ${spacers.dp16};\n                    height: ${spacers.dp16};\n                    overflow: hidden;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nSelection.propTypes = {\n    className: propTypes.string,\n    options: propTypes.node,\n    selected: singleSelectedPropType,\n}\n\nexport { Selection }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { colors } from '../theme.js'\n\nconst InputPlaceholder = ({ placeholder, className, dataTest }) => {\n    if (!placeholder) {\n        return null\n    }\n\n    return (\n        <div className={className} data-test={dataTest}>\n            {placeholder}\n\n            <style jsx>{`\n                div {\n                    color: ${colors.grey600};\n                    user-select: none;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nInputPlaceholder.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    className: propTypes.string,\n    placeholder: propTypes.string,\n}\n\nexport { InputPlaceholder }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { colors, spacers } from '../theme.js'\n\nconst InputPrefix = ({ prefix, className, dataTest }) => {\n    if (!prefix) {\n        return null\n    }\n\n    return (\n        <div className={className} data-test={dataTest}>\n            {prefix}\n\n            <style jsx>{`\n                div {\n                    color: ${colors.grey600};\n                    padding-right: ${spacers.dp4};\n                    font-size: 14px;\n                    user-select: none;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nInputPrefix.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    className: propTypes.string,\n    prefix: propTypes.string,\n}\n\nexport { InputPrefix }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { Button } from '../Button.js'\n\nconst InputClearButton = ({ onClear, clearText, className, dataTest }) => (\n    <Button\n        small\n        secondary\n        dataTest={dataTest}\n        onClick={onClear}\n        type=\"button\"\n        className={className}\n    >\n        {clearText}\n    </Button>\n)\n\nInputClearButton.propTypes = {\n    clearText: propTypes.string.isRequired,\n    dataTest: propTypes.string.isRequired,\n    onClear: propTypes.func.isRequired,\n    className: propTypes.string,\n}\n\nexport { InputClearButton }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\nimport { singleSelectedPropType } from '../common-prop-types.js'\nimport { colors } from '../theme.js'\nimport { Selection } from './Selection.js'\nimport { InputPlaceholder } from '../Select/InputPlaceholder.js'\nimport { InputPrefix } from '../Select/InputPrefix.js'\nimport { InputClearButton } from '../Select/InputClearButton.js'\n\nconst Input = ({\n    selected,\n    onChange,\n    clearable,\n    clearText,\n    placeholder,\n    dataTest,\n    prefix,\n    options,\n    className,\n    disabled,\n    inputMaxHeight,\n}) => {\n    const hasSelection = 'label' in selected && 'value' in selected\n    const onClear = (_, e) => {\n        const data = { selected: {} }\n\n        e.stopPropagation()\n        onChange(data, e)\n    }\n\n    return (\n        <div className={cx('root', className)}>\n            <InputPrefix prefix={prefix} dataTest={`${dataTest}-prefix`} />\n            {!hasSelection && !prefix && (\n                <InputPlaceholder\n                    placeholder={placeholder}\n                    dataTest={`${dataTest}-placeholder`}\n                />\n            )}\n            {hasSelection && (\n                <div className=\"root-input\">\n                    {/* the wrapper div above is necessary to enforce wrapping on overflow */}\n                    <Selection selected={selected} options={options} />\n                </div>\n            )}\n            {hasSelection && clearable && !disabled && (\n                <div className=\"root-right\">\n                    <InputClearButton\n                        onClear={onClear}\n                        clearText={clearText}\n                        dataTest={`${dataTest}-clear`}\n                    />\n                </div>\n            )}\n\n            <style jsx>{`\n                .root {\n                    display: flex;\n                    align-items: center;\n                    color: ${colors.grey900};\n                    font-size: 14px;\n                    line-height: 16px;\n                }\n\n                .root-input {\n                    overflow-y: auto;\n                    flex: 1;\n                }\n\n                .root-right {\n                    margin-left: auto;\n                    margin-right: 10px;\n                }\n            `}</style>\n\n            <style jsx>{`\n                .root-input {\n                    max-height: ${inputMaxHeight};\n                }\n            `}</style>\n        </div>\n    )\n}\n\nInput.defaultProps = {\n    inputMaxHeight: '100px',\n}\n\nInput.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    className: propTypes.string,\n    clearText: propTypes.requiredIf(props => props.clearable, propTypes.string),\n    clearable: propTypes.bool,\n    disabled: propTypes.bool,\n    inputMaxHeight: propTypes.string,\n    options: propTypes.node,\n    placeholder: propTypes.string,\n    prefix: propTypes.string,\n    selected: singleSelectedPropType,\n    onChange: propTypes.func,\n}\n\nexport { Input }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { colors, spacers, theme } from '../theme.js'\n\nconst Empty = ({ message, className, dataTest }) => (\n    <div className={className} data-test={dataTest}>\n        {message}\n        <style jsx>{`\n            div {\n                color: ${colors.grey700};\n                font-family: ${theme.fonts};\n                font-size: 13px;\n                line-height: 16px;\n                padding: ${spacers.dp8} ${spacers.dp24};\n                text-align: center;\n            }\n        `}</style>\n    </div>\n)\n\nEmpty.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    message: propTypes.string.isRequired,\n    className: propTypes.string,\n}\n\nexport { Empty }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { singleSelectedPropType } from '../common-prop-types.js'\nimport { Empty } from '../Select/Empty.js'\nimport { filterIgnored, checkIfValidOption } from '../Select/option-helpers.js'\n\nconst onIgnoredClick = (_, e) => {\n    e.stopPropagation()\n    e.preventDefault()\n}\n\nconst Menu = ({\n    options,\n    onChange,\n    selected,\n    empty,\n    handleFocusInput,\n    handleClose,\n    dataTest,\n}) => {\n    const renderedOptions = filterIgnored(options)\n\n    if (React.Children.count(renderedOptions) === 0) {\n        // If it's a string, supply it to our <Empty> component so it looks better\n        if (typeof empty === 'string') {\n            return <Empty message={empty} dataTest={`${dataTest}-empty`} />\n        }\n\n        // Otherwise just render the supplied markup\n        return empty\n    }\n\n    const children = React.Children.map(options, child => {\n        const isValidOption = checkIfValidOption(child)\n\n        // Return early if the child isn't an option, to prevent attaching handlers etc.\n        if (!isValidOption) {\n            return child\n        }\n\n        const { value, label, disabled: isDisabled } = child.props\n\n        // Active means the option is currently selected\n        const isActive = value === selected.value && label === selected.label\n        const onClick = (_, e) => {\n            const data = { selected: { value, label } }\n            e.stopPropagation()\n\n            onChange(data, e)\n            handleClose()\n            handleFocusInput()\n        }\n\n        // Clicks on active options or disabled options should be ignored for the single select\n        const isIgnored = isActive || isDisabled\n\n        return React.cloneElement(child, {\n            ...child.props,\n            onClick: isIgnored ? onIgnoredClick : onClick,\n            active: isActive,\n        })\n    })\n\n    return <React.Fragment>{children}</React.Fragment>\n}\n\nMenu.defaultProps = {\n    empty: '',\n}\n\nMenu.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    empty: propTypes.node,\n    handleClose: propTypes.func,\n    handleFocusInput: propTypes.func,\n    options: propTypes.node,\n    selected: singleSelectedPropType,\n    onChange: propTypes.func,\n}\n\nexport { Menu }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { Input } from '../Input.js'\nimport { spacers, colors } from '../theme.js'\n\nconst FilterInput = ({ value, onChange, placeholder, className, dataTest }) => (\n    <div className={className}>\n        <Input\n            dense\n            dataTest={dataTest}\n            value={value}\n            onChange={onChange}\n            type=\"text\"\n            name=\"filter\"\n            placeholder={placeholder}\n            initialFocus\n        />\n\n        <style jsx>{`\n            div {\n                position: sticky;\n                top: 0;\n                background: ${colors.white};\n                padding: ${spacers.dp8} ${spacers.dp8} ${spacers.dp4}\n                    ${spacers.dp8};\n            }\n        `}</style>\n    </div>\n)\n\nFilterInput.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    value: propTypes.string.isRequired,\n    className: propTypes.string,\n    placeholder: propTypes.string,\n    onChange: propTypes.func,\n}\n\nexport { FilterInput }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { colors, spacers, theme } from '../theme.js'\n\nconst NoMatch = ({ message, className }) => (\n    <div className={className}>\n        {message}\n\n        <style jsx>{`\n            div {\n                color: ${colors.grey700};\n                font-family: ${theme.fonts};\n                font-size: 13px;\n                line-height: 16px;\n                padding: ${spacers.dp8} ${spacers.dp24};\n                text-align: center;\n            }\n        `}</style>\n    </div>\n)\n\nNoMatch.propTypes = {\n    message: propTypes.string.isRequired,\n    className: propTypes.string,\n}\n\nexport { NoMatch }\n","import React, { Component } from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport {\n    singleSelectedPropType,\n    multiSelectedPropType,\n} from '../common-prop-types.js'\nimport { FilterInput } from '../Select/FilterInput.js'\nimport { NoMatch } from '../Select/NoMatch.js'\nimport { filterIgnored, checkIfValidOption } from '../Select/option-helpers.js'\n\nexport class FilterableMenu extends Component {\n    state = {\n        filter: '',\n    }\n\n    onFilterChange = ({ value }) => {\n        this.setState({ filter: value })\n    }\n\n    render() {\n        const {\n            dataTest,\n            options,\n            onChange,\n            selected,\n            empty,\n            handleClose,\n            handleFocusInput,\n            placeholder,\n            noMatchText,\n            Menu,\n        } = this.props\n        const { filter } = this.state\n        const menuProps = {\n            onChange,\n            selected,\n            empty,\n            handleClose,\n            handleFocusInput,\n            dataTest,\n        }\n\n        const renderedOptions = filterIgnored(options)\n\n        // If there are no options or there's no filter, just pass everything through\n        if (React.Children.count(renderedOptions) === 0 || !filter) {\n            return (\n                <React.Fragment>\n                    <FilterInput\n                        dataTest={`${dataTest}-filterinput`}\n                        placeholder={placeholder}\n                        value={filter}\n                        onChange={this.onFilterChange}\n                    />\n                    <Menu {...menuProps} options={options} />\n                </React.Fragment>\n            )\n        }\n\n        const filtered = React.Children.map(options, child => {\n            const isValidOption = checkIfValidOption(child)\n\n            // Filter it out if it's an invalid option\n            if (!isValidOption) {\n                return null\n            }\n\n            const { label } = child.props\n\n            // Filter by label, because that's the part of an option that's displayed to the user\n            const match = label.toLowerCase().includes(filter.toLowerCase())\n\n            return match ? child : null\n        })\n\n        const hasMatch = React.Children.count(filtered) > 0\n\n        return (\n            <React.Fragment>\n                <FilterInput\n                    dataTest={`${dataTest}-filterinput`}\n                    placeholder={placeholder}\n                    value={filter}\n                    onChange={this.onFilterChange}\n                />\n                {hasMatch ? (\n                    <Menu {...menuProps} options={filtered} />\n                ) : (\n                    <NoMatch message={noMatchText} />\n                )}\n            </React.Fragment>\n        )\n    }\n}\n\nFilterableMenu.propTypes = {\n    Menu: propTypes.elementType.isRequired,\n    dataTest: propTypes.string.isRequired,\n    noMatchText: propTypes.string.isRequired,\n    selected: propTypes.oneOfType([\n        singleSelectedPropType,\n        multiSelectedPropType,\n    ]).isRequired,\n    empty: propTypes.node,\n    handleClose: propTypes.func,\n    handleFocusInput: propTypes.func,\n    options: propTypes.node,\n    placeholder: propTypes.string,\n    onChange: propTypes.func,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { singleSelectedPropType } from '../common-prop-types.js'\nimport { FilterableMenu as CommonFilterableMenu } from '../Select/FilterableMenu.js'\nimport { Menu } from './Menu.js'\n\nconst FilterableMenu = ({\n    dataTest,\n    options,\n    onChange,\n    selected,\n    empty,\n    handleClose,\n    handleFocusInput,\n    placeholder,\n    noMatchText,\n}) => (\n    <CommonFilterableMenu\n        dataTest={dataTest}\n        options={options}\n        onChange={onChange}\n        selected={selected}\n        empty={empty}\n        handleClose={handleClose}\n        handleFocusInput={handleFocusInput}\n        placeholder={placeholder}\n        noMatchText={noMatchText}\n        Menu={Menu}\n    />\n)\n\nFilterableMenu.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    noMatchText: propTypes.string.isRequired,\n    empty: propTypes.node,\n    handleClose: propTypes.func,\n    handleFocusInput: propTypes.func,\n    options: propTypes.node,\n    placeholder: propTypes.string,\n    selected: singleSelectedPropType,\n    onChange: propTypes.func,\n}\n\nexport { FilterableMenu }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { colors, spacers, theme } from '../theme.js'\nimport { CircularLoader } from '../CircularLoader.js'\n\nconst Loading = ({ message, className, dataTest }) => (\n    <div className={className} data-test={dataTest}>\n        <CircularLoader small />\n        {message}\n        <style jsx>{`\n            div {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                color: ${colors.grey700};\n                font-family: ${theme.fonts};\n                font-size: 13px;\n                padding: ${spacers.dp8} ${spacers.dp24};\n            }\n        `}</style>\n    </div>\n)\n\nLoading.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    className: propTypes.string,\n    message: propTypes.string,\n}\n\nexport { Loading }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { singleSelectedPropType, statusPropType } from './common-prop-types.js'\nimport { Select } from './Select.js'\nimport { Input } from './SingleSelect/Input.js'\nimport { Menu } from './SingleSelect/Menu.js'\nimport { FilterableMenu } from './SingleSelect/FilterableMenu.js'\nimport { Loading } from './Select/Loading.js'\nimport { StatusIcon } from './icons/Status.js'\nimport { spacers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n *\n * @param {SingleSelect.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { SingleSelect } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/select.md|Design system}\n */\nconst SingleSelect = ({\n    className,\n    selected,\n    tabIndex,\n    maxHeight,\n    inputMaxHeight,\n    onChange,\n    onFocus,\n    onBlur,\n    loading,\n    error,\n    warning,\n    valid,\n    disabled,\n    children,\n    clearable,\n    clearText,\n    filterable,\n    filterPlaceholder,\n    placeholder,\n    prefix,\n    empty,\n    loadingText,\n    noMatchText,\n    initialFocus,\n    dense,\n    dataTest,\n}) => {\n    // If the select is filterable, use a filterable menu\n    const menu = filterable ? (\n        <FilterableMenu\n            dataTest={dataTest}\n            empty={empty}\n            noMatchText={noMatchText}\n            placeholder={filterPlaceholder}\n        />\n    ) : (\n        <Menu empty={empty} dataTest={dataTest} />\n    )\n\n    return (\n        <div className=\"root\" data-test={dataTest}>\n            <div className=\"root-input\">\n                <Select\n                    className={className}\n                    selected={selected}\n                    input={\n                        <Input\n                            clearable={clearable}\n                            clearText={clearText}\n                            dataTest={dataTest}\n                            placeholder={placeholder}\n                            prefix={prefix}\n                            inputMaxHeight={inputMaxHeight}\n                        />\n                    }\n                    menu={menu}\n                    tabIndex={tabIndex}\n                    maxHeight={maxHeight}\n                    onChange={onChange}\n                    onFocus={onFocus}\n                    onBlur={onBlur}\n                    error={error}\n                    warning={warning}\n                    valid={valid}\n                    disabled={disabled}\n                    initialFocus={initialFocus}\n                    dense={dense}\n                >\n                    {children}\n                    {loading && (\n                        <Loading\n                            message={loadingText}\n                            dataTest={`${dataTest}-loading`}\n                        />\n                    )}\n                </Select>\n            </div>\n            <StatusIcon error={error} valid={valid} warning={warning} />\n\n            <style jsx>{`\n                .root {\n                    align-items: center;\n                    display: flex;\n                }\n\n                .root-input {\n                    margin-right: ${spacers.dp4};\n                    flex: 1;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nSingleSelect.defaultProps = {\n    selected: {},\n    dataTest: 'dhis2-uicore-singleselect',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {function} [onChange]\n * @prop {Object} [selected]\n * @prop {string} [className]\n * @prop {string} [tabIndex]\n * @prop {Node} [children]\n * @prop {boolean} [disabled]\n * @prop {boolean} [dense]\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, `loading`, are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [loading]\n * @prop {function} [onFocus]\n * @prop {function} [onBlur]\n * @prop {boolean} [initialFocus]\n * @prop {string} [clearText] - Only required if clearable is true\n * @prop {boolean} [clearable]\n * @prop {Node} [empty]\n * @prop {string} [filterPlaceholder]\n * @prop {boolean} [filterable]\n * @prop {string} [loadingText]\n * @prop {string} [maxHeight]\n * @prop {string} [inputMaxHeight]\n * @prop {string} [noMatchText] - Only required if filterable is true\n * @prop {string} [placeholder]\n * @prop {string} [prefix]\n * @prop {string} [dataTest]\n */\nSingleSelect.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    clearText: propTypes.requiredIf(props => props.clearable, propTypes.string),\n    clearable: propTypes.bool,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    empty: propTypes.node,\n    error: statusPropType,\n    filterPlaceholder: propTypes.string,\n    filterable: propTypes.bool,\n    initialFocus: propTypes.bool,\n    inputMaxHeight: propTypes.string,\n    loading: propTypes.bool,\n    loadingText: propTypes.string,\n    maxHeight: propTypes.string,\n    noMatchText: propTypes.requiredIf(\n        props => props.filterable,\n        propTypes.string\n    ),\n    placeholder: propTypes.string,\n    prefix: propTypes.string,\n    selected: singleSelectedPropType,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { SingleSelect }\n","import propTypes from '@dhis2/prop-types'\nimport React from 'react'\n\nimport { statusPropType, singleSelectedPropType } from './common-prop-types.js'\nimport { Field } from './Field.js'\nimport { Label } from './Label.js'\nimport { Help } from './Help.js'\nimport { SingleSelect } from './SingleSelect.js'\nimport { Constrictor } from './Constrictor.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n *\n * @param {SingleSelectField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { SingleSelectField } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/select.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/singleselectfield--default|Storybook}\n */\nclass SingleSelectField extends React.Component {\n    render() {\n        const {\n            className,\n            onChange,\n            onFocus,\n            onBlur,\n            required,\n            label,\n            valid,\n            error,\n            warning,\n            disabled,\n            loading,\n            selected,\n            tabIndex,\n            helpText,\n            validationText,\n            maxHeight,\n            inputMaxHeight,\n            inputWidth,\n            children,\n            clearable,\n            clearText,\n            filterable,\n            filterPlaceholder,\n            placeholder,\n            prefix,\n            empty,\n            loadingText,\n            noMatchText,\n            initialFocus,\n            dense,\n            dataTest,\n        } = this.props\n\n        return (\n            <Field className={className} dataTest={dataTest}>\n                {label && (\n                    <Label required={required} disabled={disabled}>\n                        {label}\n                    </Label>\n                )}\n\n                <Constrictor width={inputWidth} minWidth=\"100px\">\n                    <SingleSelect\n                        selected={selected}\n                        tabIndex={tabIndex}\n                        maxHeight={maxHeight}\n                        inputMaxHeight={inputMaxHeight}\n                        onChange={onChange}\n                        onFocus={onFocus}\n                        onBlur={onBlur}\n                        loading={loading}\n                        error={error}\n                        warning={warning}\n                        valid={valid}\n                        disabled={disabled}\n                        clearable={clearable}\n                        clearText={clearText}\n                        filterable={filterable}\n                        filterPlaceholder={filterPlaceholder}\n                        placeholder={placeholder}\n                        prefix={prefix}\n                        empty={empty}\n                        loadingText={loadingText}\n                        noMatchText={noMatchText}\n                        initialFocus={initialFocus}\n                        dense={dense}\n                    >\n                        {children}\n                    </SingleSelect>\n                </Constrictor>\n\n                {helpText && (\n                    <Help dataTest={`${dataTest}-help`}>{helpText}</Help>\n                )}\n\n                {validationText && (\n                    <Help\n                        error={error}\n                        warning={warning}\n                        valid={valid}\n                        dataTest={`${dataTest}-validation`}\n                    >\n                        {validationText}\n                    </Help>\n                )}\n            </Field>\n        )\n    }\n}\n\nSingleSelectField.defaultProps = {\n    selected: {},\n    dataTest: 'dhis2-uicore-singleselectfield',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {function} [onChange]\n * @prop {string} label\n * @prop {Object} [selected]\n * @prop {string} [className]\n * @prop {string} [tabIndex]\n * @prop {Node} [children]\n * @prop {boolean} [required]\n * @prop {boolean} [disabled]\n * @prop {boolean} [dense]\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, `loading`, are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [loading]\n * @prop {function} [onFocus]\n * @prop {function} [onBlur]\n * @prop {boolean} [initialFocus]\n * @prop {string} [validationText]\n * @prop {string} [helpText]\n * @prop {string} [clearText] - Only required if clearable is true\n * @prop {boolean} [clearable]\n * @prop {Node} [empty]\n * @prop {string} [filterPlaceholder]\n * @prop {boolean} [filterable]\n * @prop {string} [loadingText]\n * @prop {string} [maxHeight]\n * @prop {string} [inputMaxHeight]\n * @prop {string} [inputWidth]\n * @prop {string} [noMatchText] - Only required if filterable is true\n * @prop {string} [placeholder]\n * @prop {string} [prefix]\n * @prop {string} [dataTest]\n */\nSingleSelectField.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    clearText: propTypes.requiredIf(props => props.clearable, propTypes.string),\n    clearable: propTypes.bool,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    empty: propTypes.node,\n    error: statusPropType,\n    filterPlaceholder: propTypes.string,\n    filterable: propTypes.bool,\n    helpText: propTypes.string,\n    initialFocus: propTypes.bool,\n    inputMaxHeight: propTypes.string,\n    inputWidth: propTypes.string,\n    label: propTypes.string,\n    loading: propTypes.bool,\n    loadingText: propTypes.string,\n    maxHeight: propTypes.string,\n    noMatchText: propTypes.requiredIf(\n        props => props.filterable,\n        propTypes.string\n    ),\n    placeholder: propTypes.string,\n    prefix: propTypes.string,\n    required: propTypes.bool,\n    selected: singleSelectedPropType,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    validationText: propTypes.string,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { SingleSelectField }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\nimport { colors, spacers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n *\n * @param {SingleSelectOption.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { SingleSelectOption } from '@dhis2/ui-core'\n *\n */\n\nconst SingleSelectOption = ({\n    label,\n    active,\n    disabled,\n    onClick,\n    className,\n    dataTest,\n    value,\n}) => (\n    <div\n        className={cx(className, {\n            disabled,\n            active,\n        })}\n        onClick={e => onClick({}, e)}\n        data-test={dataTest}\n        data-value={value}\n        data-label={label}\n    >\n        {label}\n\n        <style jsx>{`\n            div {\n                cursor: pointer;\n                font-size: 14px;\n                text-decoration: none;\n                color: ${colors.grey900};\n                padding: ${spacers.dp8} ${spacers.dp12};\n            }\n\n            div:hover {\n                background-color: ${colors.grey200};\n            }\n\n            div:active,\n            div.active {\n                background-color: ${colors.teal700};\n                color: ${colors.white};\n                cursor: auto;\n            }\n\n            div.disabled {\n                color: ${colors.grey500};\n                cursor: not-allowed;\n                user-select: none;\n            }\n\n            div.disabled:hover {\n                background-color: initial;\n            }\n        `}</style>\n    </div>\n)\n\nSingleSelectOption.defaultProps = {\n    dataTest: 'dhis2-uicore-singleselectoption',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} value\n * @prop {string} label\n * @prop {string} [className]\n * @prop {function} [onClick]\n * @prop {boolean} [active]\n * @prop {boolean} [disabled]\n * @prop {string} [dataTest]\n */\nSingleSelectOption.propTypes = {\n    label: propTypes.string.isRequired,\n    value: propTypes.string.isRequired,\n    active: propTypes.bool,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    disabled: propTypes.bool,\n    onClick: propTypes.func,\n}\n\nexport { SingleSelectOption }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { multiSelectedPropType } from '../common-prop-types.js'\nimport { Chip } from '../Chip.js'\nimport { removeOption, findOptionChild } from '../Select/option-helpers.js'\n\nconst createRemoveHandler = ({ selected, onChange, value, label }) => (\n    _,\n    e\n) => {\n    const clickedOption = { value, label }\n    const filtered = removeOption(clickedOption, selected)\n    const data = { selected: filtered }\n\n    onChange(data, e)\n}\n\nconst SelectionList = ({ selected, onChange, disabled, options }) => (\n    <React.Fragment>\n        {selected.map(({ value, label }) => {\n            const selectedOption = findOptionChild({ value, label }, options)\n\n            if (!selectedOption) {\n                const message =\n                    'The selected option could not be found as a child of the select. ' +\n                    'Make sure that the value and label for all options passed to the ' +\n                    '`selected` prop matches an existing option.'\n                throw new Error(message)\n            }\n\n            // The chip should be disabled if the option or the select are disabled\n            const isDisabled = selectedOption.props.disabled || disabled\n\n            // Create an onRemove handler, but only if it's not disabled\n            const onRemove = isDisabled\n                ? undefined\n                : createRemoveHandler({\n                      selected,\n                      onChange,\n                      value,\n                      label,\n                  })\n\n            return (\n                <Chip\n                    key={label}\n                    onRemove={onRemove}\n                    disabled={isDisabled}\n                    overflow\n                    dense\n                >\n                    {label}\n                </Chip>\n            )\n        })}\n    </React.Fragment>\n)\n\nSelectionList.propTypes = {\n    disabled: propTypes.bool,\n    options: propTypes.node,\n    selected: multiSelectedPropType,\n    onChange: propTypes.func,\n}\n\nexport { SelectionList }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\nimport { multiSelectedPropType } from '../common-prop-types.js'\nimport { colors } from '../theme.js'\nimport { SelectionList } from './SelectionList.js'\nimport { InputPlaceholder } from '../Select/InputPlaceholder.js'\nimport { InputPrefix } from '../Select/InputPrefix.js'\nimport { InputClearButton } from '../Select/InputClearButton.js'\n\nconst Input = ({\n    selected,\n    onChange,\n    clearable,\n    clearText,\n    placeholder,\n    dataTest,\n    prefix,\n    options,\n    className,\n    disabled,\n    inputMaxHeight,\n}) => {\n    const hasSelection = selected.length > 0\n    const onClear = (_, e) => {\n        const data = { selected: [] }\n\n        e.stopPropagation()\n        onChange(data, e)\n    }\n\n    return (\n        <div className={cx('root', className)}>\n            <InputPrefix prefix={prefix} dataTest={`${dataTest}-prefix`} />\n            {!hasSelection && !prefix && (\n                <InputPlaceholder\n                    placeholder={placeholder}\n                    dataTest={`${dataTest}-placeholder`}\n                />\n            )}\n            {hasSelection && (\n                <div className=\"root-input\">\n                    {/* the wrapper div above is necessary to enforce wrapping on overflow */}\n                    <SelectionList\n                        selected={selected}\n                        onChange={onChange}\n                        options={options}\n                        disabled={disabled}\n                    />\n                </div>\n            )}\n            {hasSelection && clearable && !disabled && (\n                <div className=\"root-right\">\n                    <InputClearButton\n                        onClear={onClear}\n                        clearText={clearText}\n                        dataTest={`${dataTest}-clear`}\n                    />\n                </div>\n            )}\n\n            <style jsx>{`\n                .root {\n                    display: flex;\n                    align-items: center;\n                    color: ${colors.grey900};\n                    font-size: 14px;\n                    line-height: 16px;\n                }\n\n                .root-input {\n                    overflow-y: auto;\n                    flex: 1;\n                }\n\n                .root-right {\n                    margin-left: auto;\n                    margin-right: 10px;\n                }\n            `}</style>\n\n            <style jsx>{`\n                .root-input {\n                    max-height: ${inputMaxHeight};\n                }\n            `}</style>\n        </div>\n    )\n}\n\nInput.defaultProps = {\n    inputMaxHeight: '100px',\n}\n\nInput.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    className: propTypes.string,\n    clearText: propTypes.requiredIf(props => props.clearable, propTypes.string),\n    clearable: propTypes.bool,\n    disabled: propTypes.bool,\n    inputMaxHeight: propTypes.string,\n    options: propTypes.node,\n    placeholder: propTypes.string,\n    prefix: propTypes.string,\n    selected: multiSelectedPropType,\n    onChange: propTypes.func,\n}\n\nexport { Input }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { multiSelectedPropType } from '../common-prop-types.js'\nimport { Empty } from '../Select/Empty.js'\nimport {\n    filterIgnored,\n    checkIfValidOption,\n    removeOption,\n    findOption,\n} from '../Select/option-helpers.js'\n\nconst onDisabledClick = (_, e) => {\n    e.stopPropagation()\n    e.preventDefault()\n}\n\nconst createHandler = ({ isActive, onChange, selected, value, label }) => (\n    _,\n    e\n) => {\n    const clickedOption = { value, label }\n    e.stopPropagation()\n    e.preventDefault()\n\n    // If the option is currently selected remove it from the array of selected options\n    if (isActive) {\n        const filtered = removeOption(clickedOption, selected)\n        const data = { selected: filtered }\n\n        return onChange(data, e)\n    }\n\n    // Otherwise, add it to selected\n    const data = {\n        selected: selected.concat([clickedOption]),\n    }\n    return onChange(data, e)\n}\n\nconst Menu = ({ options, onChange, selected, empty, dataTest }) => {\n    const renderedOptions = filterIgnored(options)\n\n    if (React.Children.count(renderedOptions) === 0) {\n        // If it's a string, supply it to our <Empty> component so it looks better\n        if (typeof empty === 'string') {\n            return <Empty message={empty} dataTest={`${dataTest}-empty`} />\n        }\n\n        // Otherwise just render the supplied markup\n        return empty\n    }\n\n    const children = React.Children.map(options, child => {\n        const isValidOption = checkIfValidOption(child)\n\n        // Return early if the child isn't an option, to prevent attaching handlers etc.\n        if (!isValidOption) {\n            return child\n        }\n\n        const { value, label, disabled: isDisabled } = child.props\n\n        // Active means the option is currently selected\n        const isActive = !!findOption({ value, label }, selected)\n\n        // Create the appropriate click handler for the option\n        const onClick = isDisabled\n            ? onDisabledClick\n            : createHandler({\n                  isActive,\n                  onChange,\n                  selected,\n                  value,\n                  label,\n              })\n\n        return React.cloneElement(child, {\n            ...child.props,\n            onClick,\n            active: isActive,\n        })\n    })\n\n    return <React.Fragment>{children}</React.Fragment>\n}\n\nMenu.defaultProps = {\n    empty: '',\n}\n\nMenu.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    empty: propTypes.node,\n    options: propTypes.node,\n    selected: multiSelectedPropType,\n    onChange: propTypes.func,\n}\n\nexport { Menu }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { multiSelectedPropType } from '../common-prop-types.js'\nimport { FilterableMenu as CommonFilterableMenu } from '../Select/FilterableMenu.js'\nimport { Menu } from './Menu.js'\n\nconst FilterableMenu = ({\n    dataTest,\n    options,\n    onChange,\n    selected,\n    empty,\n    handleClose,\n    handleFocusInput,\n    placeholder,\n    noMatchText,\n}) => (\n    <CommonFilterableMenu\n        dataTest={dataTest}\n        options={options}\n        onChange={onChange}\n        selected={selected}\n        empty={empty}\n        handleClose={handleClose}\n        handleFocusInput={handleFocusInput}\n        placeholder={placeholder}\n        noMatchText={noMatchText}\n        Menu={Menu}\n    />\n)\n\nFilterableMenu.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    noMatchText: propTypes.string.isRequired,\n    empty: propTypes.node,\n    handleClose: propTypes.func,\n    handleFocusInput: propTypes.func,\n    options: propTypes.node,\n    placeholder: propTypes.string,\n    selected: multiSelectedPropType,\n    onChange: propTypes.func,\n}\n\nexport { FilterableMenu }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { multiSelectedPropType, statusPropType } from './common-prop-types.js'\nimport { Select } from './Select.js'\nimport { Input } from './MultiSelect/Input.js'\nimport { Menu } from './MultiSelect/Menu.js'\nimport { FilterableMenu } from './MultiSelect/FilterableMenu.js'\nimport { Loading } from './Select/Loading.js'\nimport { StatusIcon } from './icons/Status.js'\nimport { spacers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n *\n * @param {MultiSelect.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { MultiSelect } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/select.md|Design system}\n */\nconst MultiSelect = ({\n    className,\n    selected,\n    tabIndex,\n    maxHeight,\n    inputMaxHeight,\n    onChange,\n    onFocus,\n    onBlur,\n    loading,\n    error,\n    warning,\n    valid,\n    disabled,\n    children,\n    clearable,\n    clearText,\n    filterable,\n    filterPlaceholder,\n    placeholder,\n    prefix,\n    empty,\n    loadingText,\n    noMatchText,\n    initialFocus,\n    dense,\n    dataTest,\n}) => {\n    // If the select is filterable, use a filterable menu\n    const menu = filterable ? (\n        <FilterableMenu\n            dataTest={dataTest}\n            empty={empty}\n            noMatchText={noMatchText}\n            placeholder={filterPlaceholder}\n        />\n    ) : (\n        <Menu empty={empty} dataTest={dataTest} />\n    )\n\n    return (\n        <div className=\"root\" data-test={dataTest}>\n            <div className=\"root-input\">\n                <Select\n                    className={className}\n                    selected={selected}\n                    input={\n                        <Input\n                            clearable={clearable}\n                            clearText={clearText}\n                            dataTest={dataTest}\n                            placeholder={placeholder}\n                            prefix={prefix}\n                            inputMaxHeight={inputMaxHeight}\n                        />\n                    }\n                    menu={menu}\n                    tabIndex={tabIndex}\n                    maxHeight={maxHeight}\n                    onChange={onChange}\n                    onFocus={onFocus}\n                    onBlur={onBlur}\n                    error={error}\n                    warning={warning}\n                    valid={valid}\n                    disabled={disabled}\n                    initialFocus={initialFocus}\n                    dense={dense}\n                >\n                    {children}\n                    {loading && (\n                        <Loading\n                            message={loadingText}\n                            dataTest={`${dataTest}-loading`}\n                        />\n                    )}\n                </Select>\n            </div>\n            <StatusIcon error={error} valid={valid} warning={warning} />\n\n            <style jsx>{`\n                .root {\n                    align-items: center;\n                    display: flex;\n                }\n\n                .root-input {\n                    margin-right: ${spacers.dp4};\n                    flex: 1;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nMultiSelect.defaultProps = {\n    selected: [],\n    dataTest: 'dhis2-uicore-multiselect',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {function} [onChange]\n * @prop {Array} [selected]\n * @prop {string} [className]\n * @prop {string} [tabIndex]\n * @prop {Node} [children]\n * @prop {boolean} [disabled]\n * @prop {boolean} [dense]\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, `loading`, are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [loading]\n * @prop {function} [onFocus]\n * @prop {function} [onBlur]\n * @prop {boolean} [initialFocus]\n * @prop {string} [clearText] - Only required if clearable is true\n * @prop {boolean} [clearable]\n * @prop {Node} [empty]\n * @prop {string} [filterPlaceholder]\n * @prop {boolean} [filterable]\n * @prop {string} [loadingText]\n * @prop {string} [maxHeight]\n * @prop {string} [inputMaxHeight]\n * @prop {string} [noMatchText] - Only required if filterable is true\n * @prop {string} [placeholder]\n * @prop {string} [prefix]\n * @prop {string} [dataTest]\n */\nMultiSelect.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    clearText: propTypes.requiredIf(props => props.clearable, propTypes.string),\n    clearable: propTypes.bool,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    empty: propTypes.node,\n    error: statusPropType,\n    filterPlaceholder: propTypes.string,\n    filterable: propTypes.bool,\n    initialFocus: propTypes.bool,\n    inputMaxHeight: propTypes.string,\n    loading: propTypes.bool,\n    loadingText: propTypes.string,\n    maxHeight: propTypes.string,\n    noMatchText: propTypes.requiredIf(\n        props => props.filterable,\n        propTypes.string\n    ),\n    placeholder: propTypes.string,\n    prefix: propTypes.string,\n    selected: multiSelectedPropType,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { MultiSelect }\n","import propTypes from '@dhis2/prop-types'\nimport React from 'react'\n\nimport { statusPropType, multiSelectedPropType } from './common-prop-types.js'\nimport { Field } from './Field.js'\nimport { Label } from './Label.js'\nimport { Help } from './Help.js'\nimport { MultiSelect } from './MultiSelect.js'\nimport { Constrictor } from './Constrictor.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n *\n * @param {MultiSelectField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { MultiSelectField } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/select.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/multiselectfield--default|Storybook}\n */\nclass MultiSelectField extends React.Component {\n    render() {\n        const {\n            className,\n            onChange,\n            onFocus,\n            onBlur,\n            required,\n            label,\n            valid,\n            error,\n            disabled,\n            warning,\n            loading,\n            selected,\n            tabIndex,\n            helpText,\n            validationText,\n            maxHeight,\n            inputMaxHeight,\n            inputWidth,\n            children,\n            clearable,\n            clearText,\n            filterable,\n            filterPlaceholder,\n            placeholder,\n            prefix,\n            empty,\n            loadingText,\n            noMatchText,\n            initialFocus,\n            dense,\n            dataTest,\n        } = this.props\n\n        return (\n            <Field className={className} dataTest={dataTest}>\n                {label && (\n                    <Label required={required} disabled={disabled}>\n                        {label}\n                    </Label>\n                )}\n\n                <Constrictor width={inputWidth} minWidth=\"100px\">\n                    <MultiSelect\n                        selected={selected}\n                        tabIndex={tabIndex}\n                        maxHeight={maxHeight}\n                        inputMaxHeight={inputMaxHeight}\n                        onChange={onChange}\n                        onFocus={onFocus}\n                        onBlur={onBlur}\n                        loading={loading}\n                        error={error}\n                        warning={warning}\n                        valid={valid}\n                        disabled={disabled}\n                        clearable={clearable}\n                        clearText={clearText}\n                        filterable={filterable}\n                        filterPlaceholder={filterPlaceholder}\n                        placeholder={placeholder}\n                        prefix={prefix}\n                        empty={empty}\n                        loadingText={loadingText}\n                        noMatchText={noMatchText}\n                        initialFocus={initialFocus}\n                        dense={dense}\n                    >\n                        {children}\n                    </MultiSelect>\n                </Constrictor>\n\n                {helpText && (\n                    <Help dataTest={`${dataTest}-help`}>{helpText}</Help>\n                )}\n\n                {validationText && (\n                    <Help\n                        error={error}\n                        warning={warning}\n                        valid={valid}\n                        dataTest={`${dataTest}-validation`}\n                    >\n                        {validationText}\n                    </Help>\n                )}\n            </Field>\n        )\n    }\n}\n\nMultiSelectField.defaultProps = {\n    selected: [],\n    dataTest: 'dhis2-uicore-multiselectfield',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {function} [onChange]\n * @prop {string} [label]\n * @prop {Array} [selected]\n * @prop {string} [className]\n * @prop {string} [tabIndex]\n * @prop {Node} [children]\n * @prop {boolean} [required]\n * @prop {boolean} [disabled]\n * @prop {boolean} [dense]\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, `loading`, are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [loading]\n * @prop {function} [onFocus]\n * @prop {function} [onBlur]\n * @prop {boolean} [initialFocus]\n * @prop {string} [validationText]\n * @prop {string} [helpText]\n * @prop {string} [clearText] - Only required if clearable is true\n * @prop {boolean} [clearable]\n * @prop {Node} [empty]\n * @prop {string} [filterPlaceholder]\n * @prop {boolean} [filterable]\n * @prop {string} [loadingText]\n * @prop {string} [maxHeight]\n * @prop {string} [inputMaxHeight]\n * @prop {string} [inputWidth]\n * @prop {string} [noMatchText] - Only required if filterable is true\n * @prop {string} [placeholder]\n * @prop {string} [prefix]\n * @prop {string} [dataTest]\n */\nMultiSelectField.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    clearText: propTypes.requiredIf(props => props.clearable, propTypes.string),\n    clearable: propTypes.bool,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    disabled: propTypes.bool,\n    empty: propTypes.node,\n    error: statusPropType,\n    filterPlaceholder: propTypes.string,\n    filterable: propTypes.bool,\n    helpText: propTypes.string,\n    initialFocus: propTypes.bool,\n    inputMaxHeight: propTypes.string,\n    inputWidth: propTypes.string,\n    label: propTypes.string,\n    loading: propTypes.bool,\n    loadingText: propTypes.string,\n    maxHeight: propTypes.string,\n    noMatchText: propTypes.requiredIf(\n        props => props.filterable,\n        propTypes.string\n    ),\n    placeholder: propTypes.string,\n    prefix: propTypes.string,\n    required: propTypes.bool,\n    selected: multiSelectedPropType,\n    tabIndex: propTypes.string,\n    valid: statusPropType,\n    validationText: propTypes.string,\n    warning: statusPropType,\n    onBlur: propTypes.func,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { MultiSelectField }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\nimport { resolve } from 'styled-jsx/css'\nimport { colors, spacers } from './theme.js'\nimport { Checkbox } from './Checkbox.js'\n\n// Padding has to be set on the label, so that the entire area is clickable\nconst { styles, className: checkboxClassname } = resolve`\n    padding: ${spacers.dp8} ${spacers.dp12};\n`\n\n/**\n * @module\n *\n * @param {MultiSelectOption.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { MultiSelectOption } from '@dhis2/ui-core'\n *\n */\n\nconst MultiSelectOption = ({\n    label,\n    active,\n    disabled,\n    onClick,\n    className,\n    dataTest,\n    value,\n}) => (\n    <div\n        className={cx(className, { disabled })}\n        data-test={dataTest}\n        data-value={value}\n        data-label={label}\n    >\n        <Checkbox\n            name={label}\n            className={checkboxClassname}\n            checked={active}\n            label={label}\n            onChange={onClick}\n            disabled={disabled}\n            dense\n        />\n\n        {styles}\n\n        <style jsx>{`\n            div:hover {\n                background-color: ${colors.grey200};\n            }\n\n            div.disabled:hover {\n                background-color: initial;\n            }\n        `}</style>\n    </div>\n)\n\nMultiSelectOption.defaultProps = {\n    dataTest: 'dhis2-uicore-multiselectoption',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} value\n * @prop {string} label\n * @prop {function} [onChange]\n * @prop {string} [className]\n * @prop {function} [onClick]\n * @prop {boolean} [active]\n * @prop {boolean} [disabled]\n * @prop {string} [dataTest]\n */\nMultiSelectOption.propTypes = {\n    label: propTypes.string.isRequired,\n    value: propTypes.string.isRequired,\n    active: propTypes.bool,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    disabled: propTypes.bool,\n    onClick: propTypes.func,\n}\n\nexport { MultiSelectOption }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\n/**\n * @module\n * @param {TableBody.PropTypes} props\n * @returns {React.Component}\n * @example import { TableBody } from '@dhis2/ui-core'\n * @see Live demo: {@link /demo/?path=/story/table--static-layout|Storybook}\n */\nexport const TableBody = ({ children, className, dataTest }) => (\n    <tbody className={className} data-test={dataTest}>\n        {children}\n    </tbody>\n)\n\nTableBody.defaultProps = {\n    dataTest: 'dhis2-uicore-tablebody',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {TableRow|Array.<TableRow>} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nTableBody.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport css from 'styled-jsx/css'\nimport cx from 'classnames'\n\nconst tableCellStyles = css`\n    td {\n        border-bottom: 1px solid #e8edf2;\n        font-size: 14px;\n        line-height: 18px;\n        padding: 13px 12px;\n        height: 45px;\n    }\n\n    .dense {\n        padding: 9px 12px;\n        height: 36px;\n    }\n`\n\n/**\n * @module\n * @param {TableCell.PropTypes} props\n * @returns {React.Component}\n * @example import { TableCell } from '@dhis2/ui-core'\n * @see Live demo: {@link /demo/?path=/story/table--static-layout|Storybook}\n */\nexport const TableCell = ({\n    className,\n    children,\n    colSpan,\n    rowSpan,\n    dense,\n    dataTest,\n}) => (\n    <td\n        colSpan={colSpan}\n        rowSpan={rowSpan}\n        className={cx({ dense }, className)}\n        data-test={dataTest}\n    >\n        {children}\n\n        <style jsx>{tableCellStyles}</style>\n    </td>\n)\n\nTableCell.defaultProps = {\n    dataTest: 'dhis2-uicore-tablecell',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [colSpan]\n * @prop {string} [rowSpan]\n * @prop {bool} [dense]\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nTableCell.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    colSpan: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    rowSpan: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport css from 'styled-jsx/css'\nimport cx from 'classnames'\n\nconst tableCellHeadStyles = css`\n    th {\n        border-bottom: 1px solid #e8edf2;\n        font-size: 14px;\n        line-height: 18px;\n        padding: 13px 12px;\n        height: 45px;\n    }\n\n    .dense {\n        padding: 9px 12px;\n        height: 36px;\n    }\n`\n\n/**\n * @module\n * @param {TableCellHead.PropTypes} props\n * @returns {React.Component}\n * @example import { TableCellHead } from '@dhis2/ui-core'\n * @see Live demo: {@link /demo/?path=/story/table--static-layout|Storybook}\n */\nexport const TableCellHead = ({\n    colSpan,\n    rowSpan,\n    dense,\n    children,\n    className,\n    dataTest,\n}) => (\n    <th\n        colSpan={colSpan}\n        rowSpan={rowSpan}\n        className={cx({ dense }, className)}\n        data-test={dataTest}\n    >\n        {children}\n\n        <style jsx>{tableCellHeadStyles}</style>\n    </th>\n)\n\nTableCellHead.defaultProps = {\n    dataTest: 'dhis2-uicore-tablecellhead',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [colSpan]\n * @prop {string} [rowSpan]\n * @prop {bool} [dense]\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nTableCellHead.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    colSpan: propTypes.string,\n    dataTest: propTypes.string,\n    dense: propTypes.bool,\n    rowSpan: propTypes.string,\n}\n","import React from 'react'\nimport css from 'styled-jsx/css'\nimport propTypes from '@dhis2/prop-types'\n\nconst tableStyles = css`\n    table {\n        border: 1px solid #e8edf2;\n        background-color: #ffffff;\n        min-width: 100%;\n        text-align: left;\n        border-collapse: collapse;\n        vertical-align: top;\n    }\n`\n\n/**\n * @module\n * @param {Table.PropTypes} props\n * @returns {React.Component}\n * @example import { Table } from '@dhis2/ui-core'\n * @see Live demo: {@link /demo/?path=/story/table--static-layout|Storybook}\n */\nexport const Table = ({ children, className, dataTest }) => (\n    <table className={className} data-test={dataTest}>\n        {children}\n\n        <style jsx>{tableStyles}</style>\n    </table>\n)\n\nTable.defaultProps = {\n    dataTest: 'dhis2-uicore-table',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {TableHead|TableBody|TableFoot|Array.<TableHead|TableBody|TableFoot>} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nTable.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\n/**\n * @module\n * @param {TableFoot.PropTypes} props\n * @returns {React.Component}\n * @example import { TableFoot } from '@dhis2/ui-core'\n * @see Live demo: {@link /demo/?path=/story/table--static-layout|Storybook}\n */\nexport const TableFoot = ({ children, className, dataTest }) => (\n    <tfoot className={className} data-test={dataTest}>\n        {children}\n    </tfoot>\n)\n\nTableFoot.defaultProps = {\n    dataTest: 'dhis2-uicore-tablefoot',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {TableRow|Array.<TableRow>} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nTableFoot.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\n/**\n * @module\n * @param {TableHead.PropTypes} props\n * @returns {React.Component}\n * @example import { TableHead } from '@dhis2/ui-core'\n * @see Live demo: {@link /demo/?path=/story/table--static-layout|Storybook}\n */\nexport const TableHead = ({ children, className, dataTest }) => (\n    <thead className={className} data-test={dataTest}>\n        {children}\n    </thead>\n)\n\nTableHead.defaultProps = {\n    dataTest: 'dhis2-uicore-tablehead',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {TableRowHead|Array.<TableRowHead>} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nTableHead.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n","import React from 'react'\nimport css from 'styled-jsx/css'\nimport propTypes from '@dhis2/prop-types'\n\nconst tableRowStyles = css`\n    tr:nth-child(even) {\n        background: #fbfcfd;\n    }\n`\n\n/**\n * @module\n * @param {TableRow.PropTypes} props\n * @returns {React.Component}\n * @example import { TableRow } from '@dhis2/ui-core'\n * @see Live demo: {@link /demo/?path=/story/table--static-layout|Storybook}\n */\nexport const TableRow = ({ children, className, dataTest }) => (\n    <tr className={className} data-test={dataTest}>\n        {children}\n\n        <style jsx>{tableRowStyles}</style>\n    </tr>\n)\n\nTableRow.defaultProps = {\n    dataTest: 'dhis2-uicore-tablerow',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {TableCell|TableCellHead|Array.<TableCell|TableCellHead>} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nTableRow.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { TableRow } from './TableRow.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {TableRowHead.PropTypes} props\n * @returns {React.Component}\n * @example import { TableRowHead } from '@dhis2/ui-core'\n * @see Live demo: {@link /demo/?path=/story/table--static-layout|Storybook}\n */\nexport const TableRowHead = ({ children, className, dataTest }) => (\n    <TableRow className={className} dataTest={dataTest}>\n        {children}\n    </TableRow>\n)\n\nTableRowHead.defaultProps = {\n    dataTest: 'dhis2-uicore-tablerowhead',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {TableCellHead|Array.<TableCellHead>} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nTableRowHead.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\n/**\n * @module\n * @param {StackedTableBody.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTableBody } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\nexport const StackedTableBody = ({ children, className, dataTest }) => (\n    <tbody className={className} data-tset={dataTest}>\n        {children}\n        <style jsx>{`\n            tbody {\n                display: block;\n            }\n        `}</style>\n    </tbody>\n)\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * Should only be StackedTableCell or StackedTableCellHead\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nStackedTableBody.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nStackedTableBody.defaultProps = {\n    dataTest: 'dhis2-uicore-stackedtablebody',\n}\n","import React, { Fragment } from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { colors } from '../theme.js'\n\nexport const ContentWithTitle = ({ title, children }) => (\n    <Fragment>\n        {title && <span className=\"title\">{title}</span>}\n        <span className=\"content\">{children}</span>\n\n        <style jsx>{`\n            .title {\n                display: block;\n                white-space: normal;\n                min-height: 24px;\n                font-size: 13px;\n                line-height: 16px;\n                padding: 8px 0 4px;\n                font-weight: normal;\n                color: ${colors.grey700};\n            }\n\n            .content {\n                display: block;\n                padding: 0 0 8px 0;\n                font-size: 14px;\n                line-height: 18px;\n            }\n\n            .content:first-child {\n                padding-top: 8px;\n                padding-bottom: 8px;\n            }\n        `}</style>\n    </Fragment>\n)\n\nContentWithTitle.propTypes = {\n    children: propTypes.node.isRequired,\n    title: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from 'prop-types'\n\nimport { ContentWithTitle } from './StackedTableCell/ContentWithTitle.js'\nimport { colors } from './theme.js'\n\n/**\n * @module\n * @param {StackedTableCell.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTableCell } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\nexport const StackedTableCell = ({\n    children,\n    className,\n    colSpan,\n    column,\n    dataTest,\n    headerLabels,\n    hideTitle,\n    rowSpan,\n    title,\n}) => {\n    const cellTitle = title || headerLabels[column] || ''\n    const realTitle = hideTitle ? '' : cellTitle\n\n    return (\n        <td\n            colSpan={colSpan}\n            rowSpan={rowSpan}\n            className={className}\n            data-test={dataTest}\n        >\n            <ContentWithTitle title={realTitle}>{children}</ContentWithTitle>\n\n            <style jsx>{`\n                td {\n                    border-bottom: 1px solid ${colors.grey300};\n                    padding: 0 12px;\n                    font-size: 14px;\n                    width: 100%;\n                    display: block;\n                }\n\n                td:last-child {\n                    border-bottom: 0;\n                }\n            `}</style>\n        </td>\n    )\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [colSpan]\n * @prop {number} [column]\n * @prop {string} [dataTest]\n * @prop {boolean} [hideTitle]\n * @prop {boolean} [rowSpan]\n * @prop {string} [title]\n */\nStackedTableCell.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    colSpan: propTypes.string,\n    column: propTypes.number,\n    dataTest: propTypes.string,\n    headerLabels: propTypes.arrayOf(propTypes.string),\n    hideTitle: propTypes.bool,\n    rowSpan: propTypes.string,\n    title: propTypes.string,\n}\n\nStackedTableCell.defaultProps = {\n    dataTest: 'dhis2-uicore-stackedtablecell',\n    headerLabels: [],\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { colors } from './theme.js'\n\n/**\n * @module\n * @param {StackedTableCellHead.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTableCellHead } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\nexport const StackedTableCellHead = ({\n    children,\n    className,\n    colSpan,\n    dataTest,\n    rowSpan,\n}) => (\n    <th\n        colSpan={colSpan}\n        rowSpan={rowSpan}\n        className={className}\n        data-test={dataTest}\n    >\n        {children && <div>{children}</div>}\n\n        <style jsx>{`\n            th {\n                border-bottom: 1px solid ${colors.grey300};\n                padding: 0 12px;\n            }\n\n            div {\n                min-height: 36px;\n            }\n        `}</style>\n    </th>\n)\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [children]\n * Can be left empty to hide titles for all columns\n * @prop {string} [className]\n * @prop {string} [colSpan]\n * @prop {string} [dataTest]\n * @prop {string} [rowSpan]\n */\nStackedTableCellHead.propTypes = {\n    children: propTypes.string,\n    className: propTypes.string,\n    colSpan: propTypes.string,\n    dataTest: propTypes.string,\n    rowSpan: propTypes.string,\n}\n\nStackedTableCellHead.defaultProps = {\n    children: '',\n    dataTest: 'dhis2-uicore-stackedtablecellhead',\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\n/**\n * @module\n * @param {StackedTableHead.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTableHead } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\nexport const StackedTableHead = ({ children, className, dataTest }) => (\n    <thead className={className} data-test={dataTest}>\n        {children}\n        <style jsx>{`\n            thead {\n                display: none;\n            }\n        `}</style>\n    </thead>\n)\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [children]\n * Has to be instance of StackedTableRowHead\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nStackedTableHead.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nStackedTableHead.defaultProps = {\n    dataTest: 'dhis2-uicore-stackedtablehead',\n}\n","import React from 'react'\nimport { StackedTableHead } from '../StackedTableHead.js'\n\nconst isChildTableHead = child => child.type === StackedTableHead\nconst extractChildrenProp = component => component.props.children\n\nconst extractRowsFromTableChildren = children =>\n    React.Children.toArray(children)\n        .filter(isChildTableHead)\n\n        // extract table head children (rows)\n        .map(extractChildrenProp)\n\n        // when there are multiple header rows,\n        // children will come as arrays\n        .reduce(\n            (flattened, row) =>\n                Array.isArray(row)\n                    ? [...flattened, ...row]\n                    : [...flattened, row],\n            []\n        )\n\n        // extract table row children (cells),\n        // will return an array with arrays of cells\n        .map(extractChildrenProp)\n\nconst calculateColumnCount = row =>\n    Array.isArray(row)\n        ? row.reduce(\n              (total, col) =>\n                  // make sure to take col span into account\n                  col.props.colSpan\n                      ? total + parseInt(col.props.colSpan, 10)\n                      : total + 1,\n              0\n          )\n        : 1\n\nconst mapCellsToLabels = rowChildren => {\n    let labels = []\n    // in case there's only one cell, the children are not an array\n    const row = Array.isArray(rowChildren) ? rowChildren : [rowChildren]\n\n    // Using a for loop here to be able to increment \"i\"\n    // when a cell has a colspan prop by the colspan number\n    for (let i = 0, count = row.length; i < count; ++i) {\n        const cell = row[i]\n        const colSpan = cell.props.colSpan\n            ? parseInt(cell.props.colSpan, 10)\n            : 1\n\n        const label = extractLabelFromCell(cell)\n\n        // Add a label entry for each column\n        labels = [...labels, ...Array(colSpan).fill(label)]\n    }\n\n    return labels\n}\n\nconst extractLabelFromCell = cell =>\n    !cell.props.hideResponsiveLabel ? cell.props.children : ''\n\nconst combineRowLables = (columnCount, rowCount, headerLabels) =>\n    // create array with length of column count\n    Array(columnCount)\n        .fill('')\n        .reduce((labels, _, colIndex) => {\n            // an array with all labels for a column\n            const colLabels =\n                // create array with length of rows\n                Array(rowCount)\n                    .fill('')\n                    // get label for current row & col\n                    .map((__, rowIndex) => headerLabels[rowIndex][colIndex])\n                    // remove empty ones\n                    .filter(val => val)\n\n            return [...labels, colLabels.join(' / ')]\n        }, [])\n\nexport const extractHeaderLabels = children => {\n    if (React.Children.count(children) === 0) return []\n\n    const rows = extractRowsFromTableChildren(children)\n\n    if (!rows.length) return []\n\n    const rowCount = rows.length\n    const columnCount = calculateColumnCount(rows[0])\n    const headerLabels = rows.map(mapCellsToLabels)\n\n    return combineRowLables(columnCount, rowCount, headerLabels)\n}\n","import { createContext } from 'react'\n\nexport const TableContext = createContext({ headerLabels: [] })\nexport const { Provider, Consumer } = TableContext\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { colors } from '../theme.js'\n\nexport const Table = ({ children, className, dataTest }) => (\n    <table className={className} data-test={dataTest}>\n        {children}\n\n        <style jsx>{`\n            table {\n                display: block;\n                border: 0;\n                background-color: ${colors.white};\n                min-width: 100%;\n                text-align: left;\n                border-collapse: collapse;\n                vertical-align: top;\n                color: ${colors.grey900};\n            }\n        `}</style>\n    </table>\n)\n\nTable.propTypes = {\n    children: propTypes.node.isRequired,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { extractHeaderLabels } from './StackedTable/extractHeaderLabels.js'\nimport { Provider } from './StackedTable/TableContext.js'\nimport { Table } from './StackedTable/Table.js'\n\n/**\n * @module\n * @param {StackedTable.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTable } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\nexport const StackedTable = ({\n    children,\n    className,\n    dataTest,\n    headerLabels,\n}) => {\n    const contextHeaderLabels = extractHeaderLabels(children)\n    const context = {\n        headerLabels: headerLabels || contextHeaderLabels,\n    }\n\n    return (\n        <Provider value={context}>\n            <Table className={className} dataTest={dataTest}>\n                {children}\n            </Table>\n        </Provider>\n    )\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n * @prop {string[]} [headerLabels]\n * If a specific column should not have a header,\n * an empty string must be provided\n */\nStackedTable.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    headerLabels: propTypes.arrayOf(propTypes.string),\n}\n\nStackedTable.defaultProps = {\n    dataTest: 'dhis2-uicore-stackedtable',\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\n/**\n * @module\n * @param {StackedTableFoot.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTableFoot } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\nexport const StackedTableFoot = ({ children, className, dataTest }) => (\n    <tfoot className={className} data-test={dataTest}>\n        {children}\n        <style jsx>{`\n            tfoot {\n                display: block;\n                margin-top: 32px;\n            }\n        `}</style>\n    </tfoot>\n)\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [children]\n * Has to be instance of StackedTableRow\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nStackedTableFoot.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nStackedTableFoot.defaultProps = {\n    dataTest: 'dhis2-uicore-stackedtablefoot',\n}\n","import { Children, cloneElement } from 'react'\n\nexport const addColNumToChildren = children => {\n    let curCol = 0\n\n    return Children.map(children, child => {\n        const column = child.props.column || curCol\n        const colSpan = child.props.colSpan\n            ? parseInt(child.props.colSpan, 10)\n            : 1\n\n        curCol += colSpan\n\n        return cloneElement(child, { column })\n    })\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { Consumer } from './StackedTable/TableContext.js'\nimport { addColNumToChildren } from './StackedTableRow/addColNumToChildren'\nimport { colors } from './theme.js'\nimport { supplyHeaderLabelsToChildren } from './StackedTableRow/supplyHeaderLabelsToChildren'\n\n/**\n * @module\n * @param {StackedTableRow.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTableRow } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\nexport const StackedTableRow = ({ children, className, dataTest }) => (\n    <tr className={className} data-test={dataTest}>\n        <Consumer>\n            {({ headerLabels }) =>\n                supplyHeaderLabelsToChildren(\n                    headerLabels,\n                    addColNumToChildren(children)\n                )\n            }\n        </Consumer>\n\n        <style jsx>{`\n            tr {\n                min-height: 45px;\n                display: block;\n                border: 1px solid ${colors.grey300};\n            }\n\n            tr:nth-child(even) {\n                background: ${colors.white};\n            }\n\n            :global(thead) > tr,\n            :global(tbody) > tr {\n                min-height: 36px;\n            }\n\n            tr + tr {\n                margin-top: 32px;\n            }\n        `}</style>\n    </tr>\n)\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * Has to be instance of StackedTableCell or StackedTableCellHead\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nStackedTableRow.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nStackedTableRow.defaultProps = {\n    dataTest: 'dhis2-uicore-stackedtablerow',\n}\n","import { Children, cloneElement } from 'react'\n\nexport const supplyHeaderLabelsToChildren = (headerLabels, children) => {\n    return Children.map(children, child => {\n        return cloneElement(child, { headerLabels })\n    })\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { StackedTableRow } from './StackedTableRow.js'\n\n/**\n * @module\n * @param {StackedTableRowHead.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTableRowHead } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\nexport const StackedTableRowHead = ({ children, className, dataTest }) => (\n    <StackedTableRow className={className} dataTest={dataTest}>\n        {children}\n    </StackedTableRow>\n)\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * Has to be instance of StackedTableCellHead\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nStackedTableRowHead.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n\nStackedTableRowHead.defaultProps = {\n    dataTest: 'dhis2-uicore-stackedtablerowhead',\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nimport { spacers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {ButtonStrip.PropTypes} props\n * @returns {React.Component}\n * @example import { ButtonStrip } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/buttonstrip--default|Storybook}\n */\nconst ButtonStrip = ({ className, children, middle, end, dataTest }) => (\n    <div className={cx(className, { middle, end })} data-test={dataTest}>\n        {children}\n\n        <style jsx>{`\n            div {\n                display: flex;\n            }\n            div.middle {\n                justify-content: center;\n            }\n            div.end {\n                justify-content: flex-end;\n            }\n            div > :global(button) {\n                margin-left: ${spacers.dp16};\n            }\n        `}</style>\n    </div>\n)\n\nconst alignmentPropType = propTypes.mutuallyExclusive(\n    ['middle', 'end'],\n    propTypes.bool\n)\n\nButtonStrip.defaultProps = {\n    dataTest: 'dhis2-uicore-buttonstrip',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [className]\n * @prop {Array.<Button>} [children]\n * @prop {boolean} [middle] - The props `middle`, and `end` are\n * mutually exlusive\n * @prop {boolean} [end]\n * @prop {string} [dataTest]\n */\nButtonStrip.propTypes = {\n    children: propTypes.arrayOf(propTypes.element),\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    end: alignmentPropType,\n    middle: alignmentPropType,\n}\n\nexport { ButtonStrip }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nexport function ArrowDown({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 12 12\"\n            className={className}\n        >\n            <path d=\"m5.29289 8.7071c.39053.3905 1.02369.3905 1.41422 0l2.99999-2.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-2.2929 2.2929-2.29289-2.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" />\n            <style jsx>{`\n                svg {\n                    fill: inherit;\n                    height: 12px;\n                    width: 12px;\n                    vertical-align: middle;\n                    pointer-events: none;\n                }\n            `}</style>\n        </svg>\n    )\n}\nArrowDown.propTypes = {\n    className: propTypes.string,\n}\n\nexport function ArrowUp({ className }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 12 12\"\n            className={className}\n        >\n            <path\n                d=\"m5.29289 8.7071c.39053.3905 1.02369.3905 1.41422 0l2.99999-2.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-2.2929 2.2929-2.29289-2.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\"\n                transform=\"matrix(1 0 0 -1 0 12.999974)\"\n            />\n            <style jsx>{`\n                svg {\n                    fill: inherit;\n                    height: 12px;\n                    width: 12px;\n                    vertical-align: middle;\n                    pointer-events: none;\n                }\n            `}</style>\n        </svg>\n    )\n}\nArrowUp.propTypes = {\n    className: propTypes.string,\n}\n","import propTypes from '@dhis2/prop-types'\nimport React, { Component } from 'react'\nimport { createPortal } from 'react-dom'\nimport { resolve } from 'styled-jsx/css'\n\nimport { ArrowDown, ArrowUp } from './icons/Arrow.js'\nimport { Backdrop } from './Backdrop.js'\nimport { Button } from './Button.js'\nimport { buttonVariantPropType, sizePropType } from './common-prop-types.js'\nimport { Popper } from './Popper.js'\nimport { spacers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\nconst arrow = resolve`\n    margin-left: ${spacers.dp12};\n`\n\n/**\n * @module\n * @param {DropdownButton.PropTypes} props\n * @returns {React.Component}\n * @example import { DropdownButton } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/dropdownbutton-basic--default|Storybook}\n */\nclass DropdownButton extends Component {\n    state = {\n        open: false,\n    }\n    anchorRef = React.createRef()\n\n    onToggle = ({ name, value }, event) => {\n        this.setState({ open: !this.state.open }, () => {\n            if (this.props.onClick) {\n                this.props.onClick(\n                    {\n                        name,\n                        value,\n                        open: this.state.open,\n                    },\n                    event\n                )\n            }\n        })\n    }\n\n    render() {\n        const { open } = this.state\n        const {\n            component,\n            children,\n            className,\n            destructive,\n            disabled,\n            icon,\n            large,\n            primary,\n            secondary,\n            small,\n            name,\n            value,\n            tabIndex,\n            type,\n            initialFocus,\n            dataTest,\n        } = this.props\n\n        const ArrowIconComponent = open ? ArrowUp : ArrowDown\n\n        return (\n            <div ref={this.anchorRef} data-test={dataTest}>\n                <Button\n                    className={className}\n                    destructive={destructive}\n                    disabled={disabled}\n                    icon={icon}\n                    large={large}\n                    primary={primary}\n                    secondary={secondary}\n                    small={small}\n                    onClick={this.onToggle}\n                    name={name}\n                    value={value}\n                    tabIndex={tabIndex}\n                    type={type}\n                    initialFocus={initialFocus}\n                >\n                    {children}\n                    <ArrowIconComponent className={arrow.className} />\n                </Button>\n\n                {open &&\n                    createPortal(\n                        <Backdrop onClick={this.onToggle} transparent>\n                            <Popper\n                                dataTest={`${dataTest}-popper`}\n                                placement=\"bottom-end\"\n                                reference={this.anchorRef}\n                            >\n                                {component}\n                            </Popper>\n                        </Backdrop>,\n                        document.body\n                    )}\n\n                {arrow.styles}\n                <style jsx>{`\n                    div {\n                        display: inline-flex;\n                        position: relative;\n                        color: inherit;\n                        white-space: nowrap;\n                    }\n                `}</style>\n            </div>\n        )\n    }\n}\n\nDropdownButton.defaultProps = {\n    dataTest: 'dhis2-uicore-dropdownbutton',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Element} [component]\n *\n * @prop {Node} [children] The children to render in the button\n * @prop {function} [onClick] The click handler\n *\n * @prop {string} [className]\n * @prop {string} [name]\n * @prop {string} [value]\n * @prop {string} [tabIndex]\n * @prop {boolean} [small] - `small` and `large` are mutually exclusive\n * @prop {boolean} [large]\n * @prop {string} [type] Type of button: `submit`, `reset`, or\n * `button`\n *\n * @prop {boolean } [primary] - `primary`, `secondary`, and\n * `destructive` are mutually exclusive boolean props\n * @prop {boolean } [secondary]\n * @prop {boolean } [destructive]\n *\n * @prop {boolean} [disabled] Disable the button\n * @prop {Element} [icon]\n *\n * @prop {boolean} [initialFocus] Grants the button the initial focus\n * @prop {string} [dataTest]\n */\nDropdownButton.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    component: propTypes.element,\n    dataTest: propTypes.string,\n    destructive: buttonVariantPropType,\n    disabled: propTypes.bool,\n    icon: propTypes.element,\n    initialFocus: propTypes.bool,\n    large: sizePropType,\n    name: propTypes.string,\n    primary: buttonVariantPropType,\n    secondary: buttonVariantPropType,\n    small: sizePropType,\n    tabIndex: propTypes.string,\n    type: propTypes.oneOf(['submit', 'reset', 'button']),\n    value: propTypes.string,\n    onClick: propTypes.func,\n}\n\nexport { DropdownButton }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { Card } from './Card.js'\nimport { MenuList } from './MenuList.js'\nimport { spacers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {Menu.PropTypes}\n * @returns {React.Component}\n *\n * @example import { Menu } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/menu.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/menu--default|Storybook}\n */\nconst Menu = ({ children, className, dataTest, maxWidth }) => (\n    <div className={className} data-test={dataTest}>\n        <Card>\n            <div className=\"menu-list-wrapper\">\n                <MenuList>{children}</MenuList>\n            </div>\n        </Card>\n\n        <style jsx>{`\n            .menu-list-wrapper {\n                padding: ${spacers.dp4} 0;\n            }\n            div {\n                display: inline-block;\n                min-width: 128px;\n            }\n        `}</style>\n        <style jsx>{`\n            div {\n                max-width: ${maxWidth};\n            }\n        `}</style>\n    </div>\n)\n\nMenu.defaultProps = {\n    dataTest: 'dhis2-uicore-menu',\n    maxWidth: '380px',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {*} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n * @prop {string} [maxWidth]\n */\nMenu.propTypes = {\n    children: MenuList.propTypes.children,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    maxWidth: propTypes.string,\n}\n\nexport { Menu }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nimport { colors } from '../theme.js'\n\nconst ArrowDown = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n        <path d=\"M14 20l10 10 10-10z\" />\n        <style jsx>{`\n            svg {\n                fill: inherit;\n                height: 24px;\n                width: 24px;\n                vertical-align: middle;\n                pointer-events: none;\n            }\n        `}</style>\n    </svg>\n)\n\nexport const Toggle = ({ open, onOpen, onClose, dataTest }) => {\n    const onClick = open ? onClose : onOpen\n\n    return (\n        <div\n            className={cx({ open })}\n            data-test={dataTest}\n            onClick={event => onClick && onClick({ open: !open }, event)}\n        >\n            <span>\n                <ArrowDown />\n            </span>\n\n            <style jsx>{`\n                div {\n                    width: 24px;\n                    position: relative;\n                    flex-shrink: 0;\n                }\n                div:after {\n                    background: ${colors.grey400};\n                    height: calc(100% - 24px);\n                    left: 12px;\n                    position: absolute;\n                    top: 15px;\n                    width: 1px;\n                    z-index: 1;\n                }\n                .open:after {\n                    content: '';\n                }\n                span {\n                    display: block;\n                    position: relative;\n                    z-index: 2;\n                    fill: ${colors.grey700};\n                }\n                div :global(svg) {\n                    vertical-align: top;\n                    transform: rotate(-90deg);\n                }\n                .open :global(svg) {\n                    transform: rotate(0);\n                }\n            `}</style>\n        </div>\n    )\n}\n\nToggle.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    open: propTypes.bool,\n    onClose: propTypes.func,\n    onOpen: propTypes.func,\n}\n","import React from 'react'\n\nexport const Spacer = () => (\n    <div>\n        <style jsx>{`\n            div {\n                width: 24px;\n            }\n        `}</style>\n    </div>\n)\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nexport const Leaves = ({ children, open, dataTest }) => (\n    <div className={cx({ open })} data-test={dataTest}>\n        {children}\n\n        <style jsx>{`\n            div {\n                height: 0;\n                overflow: hidden;\n                flex-grow: 1;\n            }\n\n            .open {\n                height: auto;\n            }\n        `}</style>\n    </div>\n)\n\nLeaves.propTypes = {\n    children: propTypes.node,\n    dataTest: propTypes.string,\n    open: propTypes.bool,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nimport { Toggle } from './Node/Toggle.js'\nimport { Spacer } from './Node/Spacer.js'\nimport { Leaves } from './Node/Leaves.js'\n\n/**\n * @module\n *\n * @param {Node.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Node } from '@dhis2/ui-core'\n *\n * @see Live demo: {@link /demo/?path=/story/node--multiple-roots|Storybook}\n */\nexport const Node = ({\n    open,\n    className,\n    component: label,\n    children,\n    icon,\n    onOpen,\n    onClose,\n    dataTest,\n}) => {\n    const hasLeaves = !!React.Children.toArray(children).filter(i => i).length\n    const showArrow = !icon && hasLeaves\n    const showSpacer = !icon && !hasLeaves\n\n    return (\n        <div className={cx('node', className)} data-test={dataTest}>\n            {icon && <div data-test={`${dataTest}-icon`}>{icon}</div>}\n\n            {showArrow && (\n                <Toggle\n                    open={open}\n                    onOpen={onOpen}\n                    onClose={onClose}\n                    dataTest={`${dataTest}-toggle`}\n                />\n            )}\n\n            {showSpacer && <Spacer />}\n\n            <div data-test={`${dataTest}-content`}>\n                <div data-test={`${dataTest}-label`}>{label}</div>\n\n                <Leaves open={open} dataTest={`${dataTest}-leaves`}>\n                    {children}\n                </Leaves>\n            </div>\n\n            <style jsx>{`\n                .node {\n                    display: flex;\n                }\n            `}</style>\n        </div>\n    )\n}\n\nNode.defaultProps = {\n    dataTest: 'dhis2-uicore-node',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Element} [component]\n * @prop {className} [string]\n * @prop {Node} [children]\n * @prop {Node} [icon]\n * @prop {boolean} [open]\n * @prop {function} [onOpen]\n * @prop {funtion} [onClose]\n * @prop {string} [dataTest]\n */\nNode.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    component: propTypes.element,\n    dataTest: propTypes.string,\n    icon: propTypes.node,\n    open: propTypes.bool,\n    onClose: propTypes.func,\n    onOpen: propTypes.func,\n}\n","import { resolve } from 'styled-jsx/css'\nimport React from 'react'\nimport cx from 'classnames'\nimport propTypes from '@dhis2/prop-types'\n\nimport { Card } from '../Card.js'\nimport { insideAlignmentPropType } from '../common-prop-types.js'\nimport { sizePropType } from '../common-prop-types.js'\nimport { spacersNum } from '../theme.js'\n\nconst cardBoxStyle = resolve`\n    .modal-card {\n        display: flex;\n        flex-direction: column;\n        height: auto;\n        left: 50%;\n        max-height: calc(100vh - ${2 * spacersNum.dp64}px);\n        max-width: calc(100vw - ${2 * spacersNum.dp64}px);\n        position: absolute;\n        width: 600px;\n    }\n\n    .top {\n        top: 0;\n        transform: translate(-50%, 0);\n    }\n\n    .middle {\n        transform: translate(-50%, -50%);\n    }\n\n    .bottom {\n        bottom: 0;\n        transform: translate(-50%, 0);\n    }\n\n    .small { width: 400px; }\n    .large { width: 800px; }\n`\n\n/**\n * @module\n * @private\n *\n * @param {ModalCard.PropTypes} props\n * @returns {React.Component}\n */\nexport const ModalCard = ({ children, small, large, position }) => (\n    <Card\n        className={cx(cardBoxStyle.className, 'modal-card', position, {\n            small,\n            large,\n        })}\n    >\n        {children}\n        {cardBoxStyle.styles}\n    </Card>\n)\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Element} children - Can be Modal.Title; Must be Modal.Content and Modal.Actions\n * @prop {boolean} [small] - `small` and `large` are mutually exclusive\n * @prop {boolean} [large]\n */\nModalCard.propTypes = {\n    children: propTypes.node.isRequired,\n    position: insideAlignmentPropType.isRequired,\n    large: sizePropType,\n    small: sizePropType,\n}\n","import { createPortal } from 'react-dom'\nimport React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { ModalCard } from './Modal/ModalCard.js'\nimport { ScreenCover } from './ScreenCover.js'\nimport { insideAlignmentPropType, sizePropType } from './common-prop-types.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {Modal.PropTypes} props\n * @returns {React.Component}\n *\n * @desc Modal provides a UI to prompt the user to respond to a question\n * or a note to the user.\n *\n * Use Model with the following Components:\n * ModelTitle (optional)\n * ModelContent (required)\n * ModelActions (optional)\n * @module\n * @param {Modal.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Modal } from @dhis2/ui-core\n * @example\n *  <Modal>\n *      <ModalTitle>Hello</ModalTitle>\n *      <ModalContent>Some content here</ModalContent>\n *      <ModalActions>\n *          <Button primary>My action</Button>\n *      </ModalActions>\n *  </Modal>\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/modal.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/modal--small-title-content-action|Storybook}\n */\nexport const Modal = ({\n    children,\n    onClose,\n    small,\n    large,\n    className,\n    position,\n    dataTest,\n}) =>\n    createPortal(\n        <ScreenCover\n            onClick={onClose}\n            className={className}\n            position={position}\n        >\n            <aside data-test={dataTest}>\n                <ModalCard small={small} large={large} position={position}>\n                    {children}\n                </ModalCard>\n            </aside>\n        </ScreenCover>,\n        document.body\n    )\n\nModal.defaultProps = {\n    dataTest: 'dhis2-uicore-modal',\n    position: 'top',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {Node} [children]\n * @prop {string} className\n * @prop {Function} onClose\n * @prop {bool} small\n * @prop {bool} large\n * @prop {string} [dataTest]\n */\nModal.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    large: sizePropType,\n    position: insideAlignmentPropType,\n    small: sizePropType,\n    // Callback used when clicking on the screen cover\n    onClose: propTypes.func,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { spacers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n *\n * @param {ModalActions.PropTypes} props\n * @returns {React.Component}\n */\nexport const ModalActions = ({ children, dataTest }) => (\n    <div data-test={dataTest}>\n        {children}\n\n        <style jsx>{`\n            div {\n                padding: 0 ${spacers.dp24} ${spacers.dp24} ${spacers.dp24};\n                display: flex;\n                justify-content: flex-end;\n            }\n        `}</style>\n    </div>\n)\n\nModalActions.defaultProps = {\n    dataTest: 'dhis2-uicore-modalactions',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Object} [children] - Accepts one or more `Element`s\n * @prop {string} [dataTest]\n */\nModalActions.propTypes = {\n    children: propTypes.node,\n    dataTest: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { spacers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n *\n * @param {ModalContent.PropTypes} props\n * @returns {React.Component}\n */\nexport const ModalContent = ({ children, className, dataTest }) => (\n    <div className={className} data-test={dataTest}>\n        {children}\n\n        <style jsx>{`\n            div {\n                flex-grow: 1;\n                margin: ${spacers.dp24} 0;\n                padding: 0 ${spacers.dp24};\n                overflow-y: auto;\n            }\n        `}</style>\n    </div>\n)\n\nModalContent.defaultProps = {\n    dataTest: 'dhis2-uicore-modalcontent',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nModalContent.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nimport { spacers } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {ModalTitle.PropTypes} props\n * @returns {React.Component}\n */\nexport const ModalTitle = ({ children, dataTest }) => (\n    <h1 className={cx('title')} data-test={dataTest}>\n        {children}\n\n        <style jsx>{`\n            h1 {\n                font-size: 20px;\n                font-weight: 500;\n                line-height: 24px;\n                margin: 0;\n                padding: ${spacers.dp24} ${spacers.dp24} 0 ${spacers.dp24};\n            }\n        `}</style>\n    </h1>\n)\n\nModalTitle.defaultProps = {\n    dataTest: 'dhis2-uicore-modaltitle',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [children]\n * @prop {string} [dataTest]\n */\nModalTitle.propTypes = {\n    children: propTypes.string,\n    dataTest: propTypes.string,\n}\n","import cx from 'classnames'\nimport propTypes from '@dhis2/prop-types'\nimport React, { Component } from 'react'\nimport { createPortal } from 'react-dom'\nimport css from 'styled-jsx/css'\n\nimport { ArrowDown, ArrowUp } from './icons/Arrow.js'\nimport { Backdrop } from './Backdrop.js'\nimport { Button } from './Button.js'\nimport { buttonVariantPropType, sizePropType } from './common-prop-types.js'\nimport { Popper } from './Popper.js'\nimport { spacers } from './theme.js'\n\nconst rightButton = css.resolve`\n    button {\n        padding: 0 ${spacers.dp12};\n    }\n`\n\n/**\n * @module\n *\n * @param {SplitButton.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { SplitButton } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/button.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/splitbutton-basic--default|Storybook}\n */\nclass SplitButton extends Component {\n    state = {\n        open: false,\n    }\n    anchorRef = React.createRef()\n\n    onClick = (payload, event) => {\n        if (this.props.onClick) {\n            this.props.onClick(\n                {\n                    name: payload.name,\n                    value: payload.value,\n                    open: this.state.open,\n                },\n                event\n            )\n        }\n    }\n\n    onToggle = () => this.setState({ open: !this.state.open })\n\n    render() {\n        const { open } = this.state\n        const {\n            component,\n            children,\n            className,\n            name,\n            value,\n            icon,\n            small,\n            large,\n            primary,\n            secondary,\n            destructive,\n            disabled,\n            type,\n            tabIndex,\n            dataTest,\n            initialFocus,\n        } = this.props\n\n        const arrow = open ? <ArrowUp /> : <ArrowDown />\n\n        return (\n            <div ref={this.anchorRef} data-test={dataTest}>\n                <Button\n                    name={name}\n                    value={value}\n                    icon={icon}\n                    small={small}\n                    large={large}\n                    primary={primary}\n                    secondary={secondary}\n                    destructive={destructive}\n                    disabled={disabled}\n                    onClick={this.onClick}\n                    type={type}\n                    tabIndex={tabIndex}\n                    className={cx(className)}\n                    initialFocus={initialFocus}\n                    dataTest={`${dataTest}-button`}\n                >\n                    {children}\n                </Button>\n\n                <Button\n                    name={name}\n                    value={value}\n                    icon={icon}\n                    small={small}\n                    large={large}\n                    primary={primary}\n                    secondary={secondary}\n                    destructive={destructive}\n                    disabled={disabled}\n                    onClick={this.onToggle}\n                    type={type}\n                    tabIndex={tabIndex}\n                    className={cx(className, rightButton.className)}\n                    dataTest={`${dataTest}-toggle`}\n                >\n                    {arrow}\n                </Button>\n\n                {open &&\n                    createPortal(\n                        <Backdrop onClick={this.onToggle} transparent>\n                            <Popper\n                                dataTest={`${dataTest}-menu`}\n                                placement=\"bottom-end\"\n                                reference={this.anchorRef}\n                            >\n                                {component}\n                            </Popper>\n                        </Backdrop>,\n                        document.body\n                    )}\n\n                {rightButton.styles}\n                <style jsx>{`\n                    div {\n                        display: inline-flex;\n                        position: relative;\n                        color: inherit;\n                        white-space: nowrap;\n                    }\n\n                    div > :global(button:first-child) {\n                        border-top-right-radius: 0;\n                        border-bottom-right-radius: 0;\n                        border-right: 0;\n                    }\n\n                    div > :global(button:last-child) {\n                        border-top-left-radius: 0;\n                        border-bottom-left-radius: 0;\n                    }\n                `}</style>\n            </div>\n        )\n    }\n}\n\nSplitButton.defaultProps = {\n    dataTest: 'dhis2-uicore-splitbutton',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Element} [component]\n * @prop {string} [children]\n * @prop {string} [className]\n * @prop {string} [name]\n * @prop {string} [value]\n * @prop {string} [tabIndex]\n * @prop {function} [onClick]\n * @prop {Element} [icon]\n * @prop {boolean} [small] - `small` and `large` are mutually exclusive\n * @prop {boolean} [large]\n * @prop {string} [type] Type of button: `submit`, `reset`, or\n * `button`\n * @prop {boolean } [primary] - `primary`, `secondary`, and\n * `destructive` are mutually exclusive boolean props\n * @prop {boolean } [secondary]\n * @prop {boolean } [destructive]\n * @prop {boolean } [disabled]\n * @prop {boolean} [initialFocus] Grants the button the initial focus\n * @prop {string} [dataTest]\n */\nSplitButton.propTypes = {\n    children: propTypes.string,\n    className: propTypes.string,\n    component: propTypes.element,\n    dataTest: propTypes.string,\n    destructive: buttonVariantPropType,\n    disabled: propTypes.bool,\n    icon: propTypes.element,\n    initialFocus: propTypes.bool,\n    large: sizePropType,\n    name: propTypes.string,\n    primary: buttonVariantPropType,\n    secondary: buttonVariantPropType,\n    small: sizePropType,\n    tabIndex: propTypes.string,\n    type: propTypes.oneOf(['submit', 'reset', 'button']),\n    value: propTypes.string,\n    onClick: propTypes.func,\n}\n\nexport { SplitButton }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\nimport { colors, theme } from './theme.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {Tab.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Tab } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/tab.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/tabs--default-fluid|Storybook}\n */\nconst Tab = ({\n    icon,\n    onClick,\n    selected,\n    disabled,\n    children,\n    className,\n    dataTest,\n}) => (\n    <button\n        className={`${cx('tab', className, {\n            selected,\n            disabled,\n        })}`}\n        onClick={disabled ? undefined : event => onClick({}, event)}\n        data-test={dataTest}\n    >\n        {icon}\n        <span>{children}</span>\n\n        <style jsx>{`\n            button {\n                flex-grow: 0;\n                position: relative;\n                display: inline-flex;\n                justify-content: center;\n                align-items: center;\n                vertical-align: bottom;\n\n                height: 100%;\n                padding: 16px 16px 11px;\n\n                background-color: transparent;\n                outline: none;\n                border: none;\n                border-bottom: 1px solid ${colors.grey400};\n\n                color: ${colors.grey600};\n                font-size: 14px;\n                line-height: 20px;\n\n                transition: all 150ms ease-in-out;\n                transition-property: color, background-color;\n                cursor: pointer;\n            }\n\n            :global(.fixed) > button {\n                flex-grow: 1;\n            }\n\n            button::after {\n                content: ' ';\n                display: block;\n                position: absolute;\n                bottom: -1px;\n                left: 0;\n                height: 4px;\n                width: 100%;\n                transition: background-color 150ms ease-in-out;\n                background-color: transparent;\n            }\n\n            span {\n                max-width: 320px;\n                white-space: nowrap;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                transition: fill 150ms ease-in-out;\n            }\n\n            button > :global(svg) {\n                fill: ${colors.grey600};\n                width: 14px;\n                height: 14px;\n                margin: 0 4px 0 0;\n            }\n\n            button:hover {\n                background-color: ${colors.grey100};\n            }\n\n            button:active {\n                /* Briefly highlight clicked tab */\n                background-color: ${colors.grey200};\n            }\n\n            button.selected {\n                color: ${theme.primary700};\n            }\n\n            button.selected::after {\n                background-color: ${theme.primary700};\n            }\n\n            button.selected > :global(svg) {\n                fill: ${theme.primary700};\n            }\n\n            button.disabled {\n                color: ${colors.grey500};\n                cursor: not-allowed;\n            }\n\n            button.disabled:hover,\n            button.selected:hover {\n                background-color: transparent;\n            }\n\n            button.disabled > :global(svg) {\n                fill: ${colors.grey500};\n            }\n        `}</style>\n    </button>\n)\n\nTab.defaultProps = {\n    dataTest: 'dhis2-uicore-tab',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Element} [icon]\n * @prop {function} [onClick]\n * @prop {boolean} [selected]\n * @prop {boolean} [disabled]\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\nTab.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    disabled: propTypes.bool,\n    icon: propTypes.element,\n    selected: propTypes.bool,\n    onClick: propTypes.func,\n}\n\nexport { Tab }\n","let horizontalScrollbarHeight\nconst className = '__vertical-scrollbar-height-test__'\nconst styles = `\n    .${className} {\n        position: absolute;\n        top: -9999px;\n        width: 100px;\n        height: 100px;\n        overflow-x: scroll;\n    }\n    .${className}::-webkit-scrollbar {\n        display: none;\n    }\n`\n\nexport function detectHorizontalScrollbarHeight() {\n    if (horizontalScrollbarHeight) {\n        return horizontalScrollbarHeight\n    }\n\n    const style = document.createElement('style')\n    style.innerHTML = styles\n\n    const el = document.createElement('div')\n    el.classList.add(className)\n\n    document.body.appendChild(style)\n    document.body.appendChild(el)\n\n    horizontalScrollbarHeight = el.offsetHeight - el.clientHeight\n\n    document.body.removeChild(style)\n    document.body.removeChild(el)\n\n    return horizontalScrollbarHeight\n}\n","const DURATION = 250\nconst SCROLL_STEP = 0.5\n\nexport function animatedSideScroll(scrollBox, callback, goBackwards = false) {\n    const startValue = scrollBox.scrollLeft\n    const endValue = getEndValue(scrollBox, startValue, goBackwards)\n    const change = endValue - startValue\n    const step = createFrameStepper({\n        scrollBox,\n        callback,\n        startValue,\n        endValue,\n        change,\n    })\n\n    window.requestAnimationFrame(step)\n}\n\nfunction getEndValue(scrollBox, startValue, goBackwards) {\n    const scrollDistance = scrollBox.clientWidth * SCROLL_STEP\n    const inverter = goBackwards ? -1 : 1\n    return Math.floor(startValue + scrollDistance * inverter)\n}\n\nfunction createFrameStepper({\n    scrollBox,\n    callback,\n    startValue,\n    endValue,\n    change,\n}) {\n    let startTimestamp, elapsedTime, scrollValue\n\n    return function step(timestamp) {\n        if (!startTimestamp) {\n            startTimestamp = timestamp\n        }\n\n        elapsedTime = timestamp - startTimestamp\n        scrollValue = easeInOutQuad({\n            currentTime: elapsedTime,\n            DURATION,\n            startValue,\n            change,\n        })\n\n        if (elapsedTime >= DURATION) {\n            if (scrollValue !== endValue) {\n                scrollBox.scrollLeft = endValue\n            }\n            callback && callback()\n        } else {\n            scrollBox.scrollLeft = scrollValue\n            window.requestAnimationFrame(step)\n        }\n    }\n}\n\nfunction easeInOutQuad({ currentTime, startValue, change }) {\n    return (currentTime /= DURATION / 2) < 1\n        ? (change / 2) * currentTime * currentTime + startValue\n        : (-change / 2) * (--currentTime * (currentTime - 2) - 1) + startValue\n}\n","import React, { Component, createRef } from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\nimport { ChevronLeft, ChevronRight } from '../icons/Chevron'\nimport { colors } from '../theme'\nimport { detectHorizontalScrollbarHeight } from './detectHorizontalScrollbarHeight'\nimport { animatedSideScroll } from './animatedSideScroll'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @private\n * @param {ScrollBar.PropTypes} props\n * @returns {React.Component}\n */\nclass ScrollBar extends Component {\n    scrollBox = createRef()\n    scrollArea = createRef()\n    state = {\n        scrolledToStart: false,\n        scrolledToEnd: false,\n    }\n    horizontalScrollBarHeight = detectHorizontalScrollbarHeight()\n\n    componentDidMount() {\n        this.scrollSelectedTabIntoView()\n        this.attachSideScrollListener()\n    }\n\n    componentWillUnmount() {\n        this.removeSideScrollListener()\n    }\n\n    scrollRight = () => this.scroll()\n\n    scrollLeft = () => this.scroll(true)\n\n    scroll(goBackwards) {\n        this.removeSideScrollListener()\n\n        animatedSideScroll(\n            this.scrollBox.current,\n            this.animatedScrollCallback,\n            goBackwards\n        )\n    }\n\n    animatedScrollCallback = () => {\n        this.toggleScrollButtonVisibility()\n        this.attachSideScrollListener()\n    }\n\n    toggleScrollButtonVisibility = () => {\n        const { scrollLeft, offsetWidth } = this.scrollBox.current\n        const { offsetWidth: areaOffsetWidth } = this.scrollArea.current\n        const scrolledToStart = scrollLeft <= 0\n        const scrolledToEnd = scrollLeft + offsetWidth >= areaOffsetWidth\n\n        if (\n            this.state.scrolledToStart !== scrolledToStart ||\n            this.state.scrolledToEnd !== scrolledToEnd\n        ) {\n            this.setState({\n                scrolledToStart,\n                scrolledToEnd,\n            })\n        }\n    }\n\n    scrollSelectedTabIntoView() {\n        const scrollBoxEl = this.scrollBox.current\n        const tab = scrollBoxEl.querySelector('.tab.selected')\n\n        if (tab) {\n            const tabEnd = tab.offsetLeft + tab.offsetWidth\n\n            if (tabEnd > scrollBoxEl.offsetWidth) {\n                scrollBoxEl.scrollLeft = tabEnd - scrollBoxEl.offsetWidth\n            }\n        }\n    }\n\n    attachSideScrollListener() {\n        this.scrollBox.current.addEventListener(\n            'scroll',\n            this.toggleScrollButtonVisibility\n        )\n    }\n\n    removeSideScrollListener() {\n        this.scrollBox.current.removeEventListener(\n            'scroll',\n            this.toggleScrollButtonVisibility\n        )\n    }\n\n    render() {\n        const { scrolledToStart, scrolledToEnd } = this.state\n        const { children, className, dataTest } = this.props\n\n        return (\n            <div className={cx('scroll-bar', className)} data-test={dataTest}>\n                <button\n                    onClick={scrolledToStart ? undefined : this.scrollLeft}\n                    className={cx('scroll-button', {\n                        disabled: scrolledToStart,\n                    })}\n                >\n                    <ChevronLeft />\n                </button>\n                <div className=\"scroll-box-clipper\">\n                    <div className=\"scroll-box\" ref={this.scrollBox}>\n                        <div className=\"scroll-area\" ref={this.scrollArea}>\n                            {children}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    onClick={scrolledToEnd ? undefined : this.scrollRight}\n                    className={cx('scroll-button', {\n                        disabled: scrolledToEnd,\n                    })}\n                >\n                    <ChevronRight />\n                </button>\n\n                <style jsx>{`\n                    .scroll-box {\n                        margin-bottom: ${-this.horizontalScrollBarHeight}px;\n                    }\n                `}</style>\n\n                <style jsx>{`\n                    .scroll-bar {\n                        display: flex;\n                        flex-wrap: nowrap;\n                    }\n                    .scroll-button {\n                        display: inline-flex;\n                        justify-content: center;\n                        align-items: center;\n\n                        color: inherit;\n                        background-color: ${colors.white};\n                        border: none;\n                        border-bottom: 1px solid ${colors.grey400};\n                        outline: none;\n                        padding: 16px 16px 11px 16px;\n\n                        cursor: pointer;\n                    }\n\n                    .scroll-button :global(svg) {\n                        width: 20px;\n                        height: 20px;\n                        fill: ${colors.grey600};\n                        transition: opacity 150ms ease-in-out;\n                        opacity: 1;\n                    }\n\n                    .scroll-button:hover {\n                        background-color: ${colors.grey100};\n                    }\n\n                    .scroll-button:active {\n                        /* Briefly highlight clicked button */\n                        background-color: ${colors.grey200};\n                    }\n\n                    .scroll-button.disabled {\n                        cursor: not-allowed;\n                    }\n\n                    .scroll-button.disabled:hover {\n                        background-color: transparent;\n                    }\n\n                    .scroll-button.disabled :global(svg) {\n                        fill: ${colors.grey500};\n                    }\n\n                    .scroll-box-clipper {\n                        overflow-y: hidden;\n                        flex-grow: 1;\n                    }\n\n                    .scroll-box {\n                        flex-grow: 1;\n                        overflow-x: scroll;\n                        -webkit-overflow-scrolling: touch;\n                        display: -ms-flexbox;\n                        display: flex;\n                    }\n\n                    .scroll-box::-webkit-scrollbar {\n                        display: none;\n                    }\n\n                    .scroll-area {\n                        position: relative;\n                        display: flex;\n                        flex: 1 0 auto;\n                        overflow-x: hidden;\n                    }\n                `}</style>\n            </div>\n        )\n    }\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} children\n * @prop {string} [className]\n */\nScrollBar.propTypes = {\n    children: propTypes.node.isRequired,\n    dataTest: propTypes.string.isRequired,\n    className: propTypes.string,\n}\n\nexport { ScrollBar }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport cx from 'classnames'\n\nimport { colors } from '../theme.js'\n\n/**\n * @module\n * @private\n * @param {Object} PropTypes\n * @returns {React.Component}\n */\nconst Tabs = ({ children, fixed, dataTest }) => (\n    <div className={cx({ fixed })} data-test={dataTest}>\n        {children}\n\n        <style jsx>{`\n            div {\n                display: flex;\n                align-items: flex-start;\n                position: relative;\n                overflow: hidden;\n                box-shadow: inset 0 -1px 0 0 ${colors.grey400};\n                flex-wrap: nowrap;\n                flex-grow: 1;\n                background: ${colors.white};\n            }\n        `}</style>\n    </div>\n)\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} children\n * @prop {boolean} [fixed]\n * @prop {string} [dataTest]\n */\nTabs.propTypes = {\n    dataTest: propTypes.string.isRequired,\n    children: propTypes.node,\n    fixed: propTypes.bool,\n}\n\nexport { Tabs }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\n\nimport { ScrollBar } from './TabBar/ScrollBar.js'\nimport { Tabs } from './TabBar/Tabs.js'\n;('') // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {TabBar.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { TabBar } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/tab.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/tabs--default-fluid|Storybook}\n */\nconst TabBar = ({ fixed, children, className, scrollable, dataTest }) => {\n    if (scrollable) {\n        return (\n            <div className={className} data-test={dataTest}>\n                <ScrollBar dataTest={`${dataTest}-scrollbar`}>\n                    <Tabs fixed={fixed} dataTest={`${dataTest}-tabs`}>\n                        {children}\n                    </Tabs>\n                </ScrollBar>\n            </div>\n        )\n    }\n\n    return (\n        <div className={className} data-test={dataTest}>\n            <Tabs fixed={fixed} dataTest={`${dataTest}-tabs`}>\n                {children}\n            </Tabs>\n        </div>\n    )\n}\n\nTabBar.defaultProps = {\n    dataTest: 'dhis2-uicore-tabbar',\n}\n\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Tab|Array.<Tab>} [children]\n * @prop {string} [className]\n * @prop {boolean} [fixed]\n * @prop {boolean} [scrollable]\n * @prop {string} [dataTest]\n * @prop {string} [dataTest]\n */\nTabBar.propTypes = {\n    children: propTypes.node,\n    className: propTypes.string,\n    dataTest: propTypes.string,\n    fixed: propTypes.bool,\n    scrollable: propTypes.bool,\n}\n\nexport { TabBar }\n","const createBlurHandler = (input, onBlur) => (payload, event) => {\n    input.onBlur(event)\n\n    if (onBlur && typeof onBlur === 'function') {\n        onBlur(payload, event)\n    }\n}\n\nexport { createBlurHandler }\n","const createFocusHandler = (input, onFocus) => (payload, event) => {\n    input.onFocus(event)\n\n    if (onFocus && typeof onFocus === 'function') {\n        onFocus(payload, event)\n    }\n}\n\nexport { createFocusHandler }\n","const PRIMITIVE_TYPES = new Set(['string', 'number', 'boolean'])\n\nconst createChangeHandler = ({ onChange }) => payload => {\n    if (payload && 'value' in payload) {\n        // ui-core event signature\n        onChange(payload.value)\n    } else if (payload && payload.target && 'value' in payload.target) {\n        // synthetic event\n        onChange(payload.target.value)\n    } else if (PRIMITIVE_TYPES.has(typeof payload)) {\n        // directly usable value\n        onChange(payload)\n    } else {\n        // ¯\\_(ツ)_/¯\n        throw new Error('Could not process event payload')\n    }\n}\n\nexport { createChangeHandler }\n","const hasError = (meta, error) => error || (meta.touched && meta.invalid)\n\nexport { hasError }\n","import { hasError } from './hasError.js'\n\nconst getValidationText = (meta, validationText, error) =>\n    validationText || (hasError(meta, error) && meta.error) || ''\n\nexport { getValidationText }\n","const isValid = (meta, valid, showValidStatus) =>\n    valid || (showValidStatus && meta.touched && meta.valid)\n\nexport { isValid }\n","import propTypes from '@dhis2/prop-types'\n\nconst toggleGroupOptionsProp = propTypes.arrayOf(\n    propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n    })\n)\n\nconst inputPropType = propTypes.shape({\n    name: propTypes.string.isRequired,\n    onChange: propTypes.func.isRequired,\n    value: propTypes.any,\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n})\n\nconst metaPropType = propTypes.shape({\n    error: propTypes.string,\n    invalid: propTypes.bool,\n    touched: propTypes.bool,\n    valid: propTypes.bool,\n    validating: propTypes.bool,\n})\n\nexport { toggleGroupOptionsProp, inputPropType, metaPropType }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { CheckboxField } from '@dhis2/ui-core'\n\nimport {\n    createToggleChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isValid,\n    getValidationText,\n} from './shared/helpers.js'\nimport { metaPropType, inputPropType } from './shared/propTypes.js'\n\nconst Checkbox = ({\n    checkedValue,\n    error,\n    input,\n    meta,\n    showValidStatus,\n    valid,\n    validationText,\n    onBlur,\n    onFocus,\n    ...rest\n}) => (\n    <CheckboxField\n        {...rest}\n        checked={!!input.value}\n        name={input.name}\n        error={hasError(meta, error)}\n        valid={isValid(meta, valid, showValidStatus)}\n        validationText={getValidationText(meta, validationText, error)}\n        onFocus={createFocusHandler(input, onFocus)}\n        onChange={createToggleChangeHandler(input)}\n        onBlur={createBlurHandler(input, onBlur)}\n        value={checkedValue}\n    />\n)\n\nCheckbox.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n\n    checkedValue: propTypes.string,\n    error: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { Checkbox }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { CheckboxGroupField, Checkbox } from '@dhis2/ui-core'\n\nimport {\n    hasError,\n    isValid,\n    getValidationText,\n    createFocusHandler,\n    createBlurHandler,\n} from './shared/helpers.js'\nimport {\n    toggleGroupOptionsProp,\n    inputPropType,\n    metaPropType,\n} from './shared/propTypes.js'\n\nconst createChangeHandler = ({ value: currentValues, onChange }) => payload => {\n    const activeIndex = currentValues.indexOf(payload.value)\n    const valueArray =\n        activeIndex === -1\n            ? [...currentValues, payload.value]\n            : currentValues\n                  .slice(0, activeIndex)\n                  .concat(currentValues.slice(activeIndex + 1))\n    const value = valueArray.length === 0 ? '' : valueArray\n\n    onChange(value)\n}\n\nconst CheckboxGroup = ({\n    options,\n    input,\n    meta,\n    error,\n    valid,\n    showValidStatus,\n    validationText,\n    onFocus,\n    onBlur,\n    ...rest\n}) => (\n    <CheckboxGroupField\n        {...rest}\n        value={input.value || []}\n        name={input.name}\n        error={hasError(meta, error)}\n        valid={isValid(meta, valid, showValidStatus)}\n        validationText={getValidationText(meta, validationText, error)}\n        onFocus={createFocusHandler(input, onFocus)}\n        onChange={createChangeHandler(input)}\n        onBlur={createBlurHandler(input, onBlur)}\n    >\n        {options.map(({ value, label }) => (\n            <Checkbox key={value} label={label} value={value} />\n        ))}\n    </CheckboxGroupField>\n)\n\nCheckboxGroup.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n    options: toggleGroupOptionsProp.isRequired,\n\n    checkedValue: propTypes.string,\n    error: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { CheckboxGroup }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport { FileInputField, FileListItem } from '@dhis2/ui-core'\n\nimport { hasError, isValid, getValidationText } from './shared/helpers.js'\nimport { inputPropType, metaPropType } from './shared/propTypes.js'\n\nconst btnLabel = i18n.t('Upload file')\nconst btnLabelMulti = i18n.t('Upload files')\n\nconst dedupeAndConcat = (currentFiles, newFileList) => {\n    return [...currentFiles, ...newFileList].reduceRight(\n        (acc, file) => {\n            if (!acc.unique.has(file.name)) {\n                acc.unique.add(file.name)\n                acc.files.unshift(file)\n            }\n            return acc\n        },\n        { files: [], unique: new Set() }\n    ).files\n}\n\nconst createChangeHandler = (input, multifile) => ({ files }) => {\n    // A JavaScript FileList instance is read-only, so we cannot add files to it\n    // FileList also doesn't have a .map method so by destructuring the FileList\n    // instance into an array we can add, remove and map\n    const currentFiles = Array.isArray(input.value) ? input.value : []\n    const value = multifile ? dedupeAndConcat(currentFiles, files) : [...files]\n\n    input.onChange(value)\n}\n\nconst createRemoveHandler = (input, fileToDelete) => () => {\n    const files = input.value.filter(file => file !== fileToDelete)\n    const value = files.length > 0 ? files : ''\n\n    input.onChange(value)\n}\n\nconst FileInput = ({\n    buttonLabel,\n    disabled,\n    error,\n    input,\n    meta,\n    multifile,\n    showValidStatus,\n    valid,\n    validationText,\n    ...rest\n}) => {\n    const files = input.value || []\n\n    return (\n        <FileInputField\n            {...rest}\n            onChange={createChangeHandler(input, multifile)}\n            buttonLabel={buttonLabel || multifile ? btnLabelMulti : btnLabel}\n            disabled={disabled || (!multifile && files.length >= 1)}\n            multiple={multifile}\n            name={input.name}\n            error={hasError(meta, error)}\n            valid={isValid(meta, valid, showValidStatus)}\n            validationText={getValidationText(meta, validationText, error)}\n        >\n            {files.map(file => (\n                <FileListItem\n                    key={file.name}\n                    label={file.name}\n                    onRemove={createRemoveHandler(input, file)}\n                    removeText={i18n.t('Remove')}\n                />\n            ))}\n        </FileInputField>\n    )\n}\n\nFileInput.defaultProps = {\n    placeholder: i18n.t('No file(s) selected yet'),\n}\n\nFileInput.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n\n    buttonLabel: propTypes.string,\n    disabled: propTypes.bool,\n    error: propTypes.bool,\n    multifile: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n    value: propTypes.oneOfType([\n        propTypes.arrayOf(propTypes.instanceOf(File)),\n        propTypes.oneOf(['']),\n    ]),\n}\n\nexport { FileInput }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { InputField } from '@dhis2/ui-core'\n\nimport {\n    createChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isLoading,\n    isValid,\n    getValidationText,\n} from './shared/helpers.js'\nimport { metaPropType, inputPropType } from './shared/propTypes.js'\n\nconst Input = ({\n    input,\n    meta,\n    error,\n    showValidStatus,\n    valid,\n    validationText,\n    onBlur,\n    onFocus,\n    loading,\n    showLoadingStatus,\n    ...rest\n}) => (\n    <InputField\n        {...rest}\n        name={input.name}\n        error={hasError(meta, error)}\n        valid={isValid(meta, valid, showValidStatus)}\n        loading={isLoading(meta, loading, showLoadingStatus)}\n        validationText={getValidationText(meta, validationText, error)}\n        onFocus={createFocusHandler(input, onFocus)}\n        onChange={createChangeHandler(input)}\n        onBlur={createBlurHandler(input, onBlur)}\n        value={input.value}\n    />\n)\n\nInput.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n\n    error: propTypes.bool,\n    loading: propTypes.bool,\n    showLoadingStatus: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { Input }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { MultiSelectField, MultiSelectOption } from '@dhis2/ui-core'\n\nimport {\n    createSelectChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isLoading,\n    isValid,\n    getValidationText,\n} from './shared/helpers.js'\nimport { inputPropType, metaPropType } from './shared/propTypes.js'\n\nconst MultiSelect = ({\n    error,\n    input,\n    loading,\n    meta,\n    onBlur,\n    onFocus,\n    options,\n    showLoadingStatus,\n    showValidStatus,\n    valid,\n    validationText,\n    ...rest\n}) => {\n    return (\n        <MultiSelectField\n            {...rest}\n            name={input.name}\n            error={hasError(meta, error)}\n            valid={isValid(meta, valid, showValidStatus)}\n            loading={isLoading(meta, loading, showLoadingStatus)}\n            validationText={getValidationText(meta, validationText, error)}\n            onFocus={createFocusHandler(input, onFocus)}\n            onChange={createSelectChangeHandler(input)}\n            onBlur={createBlurHandler(input, onBlur)}\n            selected={\n                input.value || []\n            } /* input.value is an empty string initially, so we're providing an empty array if falsey */\n        >\n            {options.map(option => (\n                <MultiSelectOption key={option.value} {...option} />\n            ))}\n        </MultiSelectField>\n    )\n}\n\nMultiSelect.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n\n    error: propTypes.bool,\n    loading: propTypes.bool,\n    options: MultiSelectField.propTypes.selected,\n    showLoadingStatus: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { MultiSelect }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { RadioGroupField, Radio } from '@dhis2/ui-core'\n\nimport {\n    createChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isLoading,\n    isValid,\n    getValidationText,\n} from './shared/helpers.js'\nimport {\n    toggleGroupOptionsProp,\n    metaPropType,\n    inputPropType,\n} from './shared/propTypes.js'\n\nconst RadioGroup = ({\n    input,\n    meta,\n    options,\n    error,\n    showValidStatus,\n    valid,\n    validationText,\n    onBlur,\n    onFocus,\n    loading,\n    showLoadingStatus,\n    ...rest\n}) => {\n    return (\n        <RadioGroupField\n            {...rest}\n            name={input.name}\n            error={hasError(meta, error)}\n            valid={isValid(meta, valid, showValidStatus)}\n            loading={isLoading(meta, loading, showLoadingStatus)}\n            validationText={getValidationText(meta, validationText, error)}\n            onFocus={createFocusHandler(input, onFocus)}\n            onChange={createChangeHandler(input)}\n            onBlur={createBlurHandler(input, onBlur)}\n            value={input.value}\n        >\n            {options.map(({ value, label }) => (\n                <Radio key={value} label={label} value={value} />\n            ))}\n        </RadioGroupField>\n    )\n}\n\nRadioGroup.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n    options: toggleGroupOptionsProp.isRequired,\n\n    error: propTypes.bool,\n    loading: propTypes.bool,\n    showLoadingStatus: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { RadioGroup }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui-core'\n\nimport {\n    createSelectChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isLoading,\n    isValid,\n    getValidationText,\n} from './shared/helpers.js'\nimport { inputPropType, metaPropType } from './shared/propTypes.js'\n\nconst SingleSelect = ({\n    error,\n    input,\n    loading,\n    meta,\n    onBlur,\n    onFocus,\n    options,\n    showLoadingStatus,\n    showValidStatus,\n    valid,\n    validationText,\n    ...rest\n}) => {\n    return (\n        <SingleSelectField\n            {...rest}\n            name={input.name}\n            error={hasError(meta, error)}\n            valid={isValid(meta, valid, showValidStatus)}\n            loading={isLoading(meta, loading, showLoadingStatus)}\n            validationText={getValidationText(meta, validationText, error)}\n            onFocus={createFocusHandler(input, onFocus)}\n            onChange={createSelectChangeHandler(input)}\n            onBlur={createBlurHandler(input, onBlur)}\n            selected={\n                input.value || {}\n            } /* input.value is an empty string initially, so we're providing an empty object if falsey */\n        >\n            {options.map(option => (\n                <SingleSelectOption key={option.value} {...option} />\n            ))}\n        </SingleSelectField>\n    )\n}\n\nSingleSelect.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n    options: propTypes.arrayOf(SingleSelectField.propTypes.selected).isRequired,\n\n    error: propTypes.bool,\n    loading: propTypes.bool,\n    showLoadingStatus: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { SingleSelect }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { SwitchField } from '@dhis2/ui-core'\n\nimport {\n    createToggleChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isValid,\n    getValidationText,\n} from './shared/helpers.js'\nimport { metaPropType, inputPropType } from './shared/propTypes.js'\n\nconst Switch = ({\n    checkedValue,\n    error,\n    input,\n    meta,\n    showValidStatus,\n    valid,\n    validationText,\n    onBlur,\n    onFocus,\n    ...rest\n}) => (\n    <SwitchField\n        {...rest}\n        checked={!!input.value}\n        name={input.name}\n        error={hasError(meta, error)}\n        valid={isValid(meta, valid, showValidStatus)}\n        validationText={getValidationText(meta, validationText, error)}\n        onFocus={createFocusHandler(input, onFocus)}\n        onChange={createToggleChangeHandler(input)}\n        onBlur={createBlurHandler(input, onBlur)}\n        value={checkedValue}\n    />\n)\n\nSwitch.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n\n    checkedValue: propTypes.string,\n    error: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { Switch }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { TextAreaField } from '@dhis2/ui-core'\n\nimport {\n    createChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isLoading,\n    isValid,\n    getValidationText,\n} from './shared/helpers.js'\nimport { metaPropType, inputPropType } from './shared/propTypes.js'\n\nconst TextArea = ({\n    input,\n    meta,\n    error,\n    showValidStatus,\n    valid,\n    validationText,\n    onBlur,\n    onFocus,\n    loading,\n    showLoadingStatus,\n    ...rest\n}) => (\n    <TextAreaField\n        {...rest}\n        name={input.name}\n        error={hasError(meta, error)}\n        valid={isValid(meta, valid, showValidStatus)}\n        loading={isLoading(meta, loading, showLoadingStatus)}\n        validationText={getValidationText(meta, validationText, error)}\n        onFocus={createFocusHandler(input, onFocus)}\n        onChange={createChangeHandler(input)}\n        onBlur={createBlurHandler(input, onBlur)}\n        value={input.value}\n    />\n)\n\nTextArea.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n\n    error: propTypes.bool,\n    loading: propTypes.bool,\n    showLoadingStatus: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n\nexport { TextArea }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString } from './helpers/index.js'\n\nconst ALPHA_NUMERIC_PATTERN = /^[a-z0-9 ]*$/i\n\nconst invalidAlphaNumericMessage = i18n.t(\n    'Please provide an alpha-numeric value'\n)\n\nconst alphaNumeric = value =>\n    isEmpty(value) || (isString(value) && ALPHA_NUMERIC_PATTERN.test(value))\n        ? undefined\n        : invalidAlphaNumericMessage\n\nexport { alphaNumeric, invalidAlphaNumericMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty } from './helpers/index.js'\n\nconst invalidBooleanMessage = i18n.t('Please provide a boolean value')\n\nconst boolean = value =>\n    isEmpty(value) || typeof value === 'boolean'\n        ? undefined\n        : invalidBooleanMessage\n\nexport { boolean, invalidBooleanMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString } from './helpers/index.js'\n\nconst LOWER_CASE_PATTERN = /^(?=.*[a-z]).+$/\nconst UPPER_CASE_PATTERN = /^(?=.*[A-Z]).+$/\nconst DIGIT_PATTERN = /^(?=.*[0-9]).+$/\n// Using this regex to match all non-alphanumeric characters to match server-side implementation\n// https://github.com/dhis2/dhis2-core/blob/master/dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/user/SpecialCharacterValidationRule.java#L39\nconst SPECIAL_CHARACTER_PATTERN = /[^a-zA-Z0-9]/\n\nconst notString = i18n.t('Password should be a string')\nconst tooShort = i18n.t('Password should be at least 8 characters long')\nconst tooLong = i18n.t('Password should be no longer than 34 characters')\nconst noLowerCase = i18n.t(\n    'Password should contain at least one lowercase letter'\n)\nconst noUpperCase = i18n.t(\n    'Password should contain at least one UPPERCASE letter'\n)\nconst noNumber = i18n.t('Password should contain at least one number')\nconst noSpecialCharacter = i18n.t(\n    'Password should have at least one special character'\n)\n\n/**\n * Tests if a given password is compliant with the password restrictions.\n * This function checks all restrictions below, but returns when the first violation was found:\n * - At least 8 characters\n * - No more than 34 characters\n * - Contains at least 1 lowercase character\n * - Contains at least 1 UPPERCASE character\n * - Contains at least 1 number\n * - Contains at least 1 special character\n */\nconst dhis2Password = value => {\n    if (isEmpty(value)) {\n        return undefined\n    }\n\n    if (!isString(value)) {\n        return notString\n    }\n\n    if (value.length < 8) {\n        return tooShort\n    }\n\n    if (value.length > 35) {\n        return tooLong\n    }\n\n    if (!LOWER_CASE_PATTERN.test(value)) {\n        return noLowerCase\n    }\n\n    if (!UPPER_CASE_PATTERN.test(value)) {\n        return noUpperCase\n    }\n\n    if (!DIGIT_PATTERN.test(value)) {\n        return noNumber\n    }\n\n    if (!SPECIAL_CHARACTER_PATTERN.test(value)) {\n        return noSpecialCharacter\n    }\n\n    return undefined\n}\n\nconst errorMessages = {\n    notString,\n    tooShort,\n    tooLong,\n    noLowerCase,\n    noUpperCase,\n    noNumber,\n    noSpecialCharacter,\n}\n\nexport { dhis2Password, errorMessages }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString } from './helpers/index.js'\n\nconst invalidUsernameMessage = i18n.t(\n    'Please provide a username between 1 and 255 characters'\n)\n\nconst dhis2Username = value =>\n    isEmpty(value) ||\n    (isString(value) && value.length >= 1 && value.length <= 255)\n        ? undefined\n        : invalidUsernameMessage\n\nexport { dhis2Username, invalidUsernameMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString } from './helpers/index.js'\n\n/*\n * Email validation is complicated business. There is no perfect regex,\n * instead we have to make a trade-off between complexity, correctness,\n * and the risk of producing false negatives. This article\n * https://www.regular-expressions.info/email.html offers a good overview.\n * It recommends to use a very simple regex when having to validate many\n * records, but for validating an individual email address a more complex\n * regex may be used.\n *\n * The pattern below is taken from the \"The Official Standard: RFC 5322\"\n * section of the article and is described as:\n * \"[..] a more practical implementation of RFC 5322 [..] that will still\n * match 99.99% of all email addresses in actual use today\"\n *\n * const EMAIL_ADDRESS_PATTERN = /[a-z0-9!#$%&'*+/=?^_‘{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_‘{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/i\n *\n * However, this regex produces a few false negatives and quite a lot\n * of false positives.\n *\n * Another regex, found in this stackoverflow answer below resulted in a better\n * overall picture in terms of false negatives and positives, so I settled on that one:\n * https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript/46181#46181\n */\n\nconst EMAIL_ADDRESS_PATTERN = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i\n\nconst invalidEmailMessage = i18n.t('Please provide a valid email address')\n\nconst email = value =>\n    isEmpty(value) || (isString(value) && EMAIL_ADDRESS_PATTERN.test(value))\n        ? undefined\n        : invalidEmailMessage\n\nexport { email, invalidEmailMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty } from './helpers/index.js'\n\nconst hasValueMessage = i18n.t('Please provide a value')\n\nconst hasValue = value => (isEmpty(value) ? hasValueMessage : undefined)\n\nexport { hasValue, hasValueMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isInteger, isNumeric, toNumber } from './helpers/index.js'\n\nconst invalidIntegerMessage = i18n.t(\n    'Please provide a round number without decimals'\n)\n\nconst integer = value =>\n    isEmpty(value) || (isNumeric(value) && isInteger(toNumber(value)))\n        ? undefined\n        : invalidIntegerMessage\n\nexport { integer, invalidIntegerMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString, isNumeric } from './helpers/index.js'\n\n/*\n * There were some problems with the server side implementation\n * of how international phone numbers are validated, and the\n * server side implementation will likely be removed, see:\n * https://jira.dhis2.org/browse/DHIS2-8040\n *\n * So, rather than aligning with the server-side implementation\n * this validator implements the E.164 numbering plan, see:\n * https://www.cm.com/blog/how-to-format-international-telephone-numbers/\n *\n * SPECS\n * Here's how the E.164 numbering plan works:\n * - A telephone number can have a maximum of 15 digits\n * - The first part of the telephone number is the country code (one to three digits)\n * - The second part is the national destination code (NDC)\n * - The last part is the subscriber number (SN)\n * - The NDC and SN together are collectively called the national (significant) number\n *\n * IMPLEMENTATION ADVICE\n * Two important things to note: First of all, in the international E.164 notation a\n * leading ‘0’ is removed. The UK mobile phone number ‘07911 123456’ in international\n * format is ‘+44 7911 123456’, so without the first zero. Secondly in the E.164 notation\n * all spaces, dashes [‘-‘] and parentheses [ ‘(‘ and ‘)’] are removed, besides the\n * leading ‘+’ all characters should be numeric.\n */\n\nconst invalidInternationalPhoneNumberMessage = i18n.t(\n    'Please provide a valid international phone number.'\n)\n\nconst internationalPhoneNumber = value => {\n    // allow empty values\n    if (isEmpty(value)) {\n        return undefined\n    }\n\n    // value must be a string\n    if (!isString(value)) {\n        return invalidInternationalPhoneNumberMessage\n    }\n\n    const cleanedValue = value\n        // strip all hyphens, dots, spaces\n        .replace(/[-. )(]/g, '')\n        // trim leading zeroes and plus signs\n        .replace(/^[0+]+/, '')\n\n    return isNumeric(cleanedValue) && cleanedValue.length <= 15\n        ? undefined\n        : invalidInternationalPhoneNumberMessage\n}\n\nexport { internationalPhoneNumber, invalidInternationalPhoneNumberMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isNumeric } from './helpers/index.js'\n\nconst invalidNumberMessage = i18n.t('Please provide a number')\n\nconst number = value =>\n    isEmpty(value) || isNumeric(value) ? undefined : invalidNumberMessage\n\nexport { number, invalidNumberMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString } from './helpers/index.js'\n\nconst invalidStringMessage = i18n.t('Please provide a string')\n\nconst string = value =>\n    isEmpty(value) || isString(value) ? undefined : invalidStringMessage\n\nexport { string, invalidStringMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString } from './helpers/index.js'\n\n// Source: https://gist.github.com/dperini/729294\nconst URL_PATTERN = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i\n\nconst invalidUrlMessage = i18n.t('Please provide a valid url')\n\nconst url = value =>\n    isEmpty(value) || (isString(value) && URL_PATTERN.test(value))\n        ? undefined\n        : invalidUrlMessage\n\nexport { url, invalidUrlMessage }\n"],"sourceRoot":""}