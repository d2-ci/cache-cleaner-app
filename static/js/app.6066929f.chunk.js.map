{"version":3,"file":"static/js/app.6066929f.chunk.js","mappings":"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","sources":["D2App/locales/index.js","webpack://@dhis2/app-shell/./src/D2App/actions/Actions.module.css?d575","D2App/actions/Actions.js","webpack://@dhis2/app-shell/./src/D2App/clearForm/ClearForm.module.css?d6f7","webpack://@dhis2/app-shell/./src/D2App/clearForm/FormSection.module.css?a2be","D2App/clearForm/FormSection.js","D2App/clearForm/ClearForm.js","D2App/indexedDb/dbExists.js","D2App/indexedDb/deleteDb.js","D2App/indexedDb/getCaptureAppUserDatabases.js","D2App/indexedDb/openDb.js","D2App/indexedDb/getKeyFromObjectStore.js","D2App/indexedDb/dhis2DatabaseNames.js","D2App/indexedDb/useClearableDatabaseKeys.js","D2App/indexedDb/getClearableDatabases.js","D2App/storage/clearStoragesByKey.js","D2App/storage/reservedStorageKeys.js","D2App/storage/useClearableStorageKeys.js","D2App/storage/getClearableKeys.js","webpack://@dhis2/app-shell/./src/D2App/views/Home.module.css?1095","D2App/views/Home/deleteValues.js","D2App/indexedDb/clearDatabasesByKey.js","D2App/views/Home.js","D2App/views/Home/formatDeleteValues.js","D2App/App.js"],"sourcesContent":["//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport es_419Translations from './es_419/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport neTranslations from './ne/translations.json';\nimport nlTranslations from './nl/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport uz_UZ_CyrlTranslations from './uz_UZ_Cyrl/translations.json';\nimport uz_UZ_LatnTranslations from './uz_UZ_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('es_419', namespace, es_419Translations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('ne', namespace, neTranslations);\ni18n.addResources('nl', namespace, nlTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('uz_UZ_Cyrl', namespace, uz_UZ_CyrlTranslations);\ni18n.addResources('uz_UZ_Latn', namespace, uz_UZ_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","// extracted by mini-css-extract-plugin\nexport default {\"actions\":\"Actions_actions__kT1Ck\"};","import { ButtonStrip } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './Actions.module.css';\nexport const Actions = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.actions\n  }, /*#__PURE__*/React.createElement(ButtonStrip, null, children));\n};\nActions.propTypes = {\n  children: PropTypes.node\n};","// extracted by mini-css-extract-plugin\nexport default {\"actions\":\"ClearForm_actions__xH5Wk\",\"action\":\"ClearForm_action__EaCRv\",\"groupHeadline\":\"ClearForm_groupHeadline__CJ1tD\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FormSection_container__hPwgY\",\"groupHeadline\":\"FormSection_groupHeadline__+J2rV\",\"empty\":\"FormSection_empty__DDbzs\"};","import { Button, FieldGroupFF, ReactFinalForm, CheckboxFieldFF } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Actions } from '../actions/Actions.js';\nimport styles from './FormSection.module.css';\nconst {\n  Field\n} = ReactFinalForm;\nexport const FormSection = _ref => {\n  let {\n    deselectButtonLabel,\n    emptyMessage,\n    form,\n    headline,\n    selectButtonLabel,\n    storageKeys,\n    storageName\n  } = _ref;\n  const storageDataTestName = storageName.toLowerCase();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    \"data-test\": `dhis2-cachecleaner-${storageDataTestName}`\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.groupHeadline\n  }, headline), !storageKeys.length && /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.empty,\n    \"data-test\": \"dhis2-cachecleaner-emptystoragemessage\"\n  }, emptyMessage), !!storageKeys.length && /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    small: true,\n    onClick: () => form.change(storageName, storageKeys),\n    dataTest: `dhis2-cachecleaner-formsection-selectall`\n  }, selectButtonLabel), /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    small: true,\n    onClick: () => form.change(storageName, []),\n    dataTest: `dhis2-cachecleaner-formsection-deselectall`\n  }, deselectButtonLabel)), /*#__PURE__*/React.createElement(FieldGroupFF, null, storageKeys.map(key => {\n    return /*#__PURE__*/React.createElement(Field, {\n      type: \"checkbox\",\n      component: CheckboxFieldFF,\n      name: storageName,\n      label: key,\n      key: key,\n      value: key\n    });\n  })));\n};\nFormSection.propTypes = {\n  deselectButtonLabel: PropTypes.string.isRequired,\n  emptyMessage: PropTypes.string.isRequired,\n  form: PropTypes.shape({\n    change: PropTypes.func.isRequired\n  }).isRequired,\n  headline: PropTypes.string.isRequired,\n  selectButtonLabel: PropTypes.string.isRequired,\n  storageKeys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  storageName: PropTypes.string.isRequired\n};","import i18n from '@dhis2/d2-i18n';\nimport { Button, Help, ReactFinalForm } from '@dhis2/ui';\nimport { FORM_ERROR } from 'final-form';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Actions } from '../actions/Actions.js';\nimport styles from './ClearForm.module.css';\nimport { FormSection } from './FormSection.js';\nconst {\n  Form\n} = ReactFinalForm;\nconst validate = values => {\n  const errors = {};\n  if (!values.localStorageKeys.length && !values.sessionStorageKeys.length && !values.indexedDatabaseKeys.length) {\n    errors[FORM_ERROR] = i18n.t('No data selected');\n  }\n  return errors;\n};\nexport const ClearForm = _ref => {\n  let {\n    onSubmit,\n    initialValues,\n    localStorageKeys,\n    sessionStorageKeys,\n    indexedDatabaseKeys\n  } = _ref;\n  const selectAll = form => {\n    form.batch(() => {\n      form.change('localStorageKeys', localStorageKeys);\n      form.change('sessionStorageKeys', sessionStorageKeys);\n      form.change('indexedDatabaseKeys', indexedDatabaseKeys);\n    });\n  };\n  const deselectAll = form => {\n    form.batch(() => {\n      form.change('localStorageKeys', []);\n      form.change('sessionStorageKeys', []);\n      form.change('indexedDatabaseKeys', []);\n    });\n  };\n  const onFormSubmit = values => {\n    onSubmit(values);\n  };\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onFormSubmit,\n    initialValues: initialValues,\n    validate: validate\n  }, _ref2 => {\n    let {\n      handleSubmit,\n      errors,\n      submitFailed,\n      form\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => selectAll(form),\n      dataTest: \"dhis2-cachecleaner-selectall\"\n    }, i18n.t('Select all')), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => deselectAll(form),\n      dataTest: \"dhis2-cachecleaner-deselectall\"\n    }, i18n.t('Deselect all')), /*#__PURE__*/React.createElement(Button, {\n      disabled: !!errors[FORM_ERROR],\n      destructive: true,\n      type: \"submit\",\n      dataTest: \"dhis2-cachecleaner-clear-top\"\n    }, i18n.t('Clear all selected items'))), /*#__PURE__*/React.createElement(FormSection, {\n      form: form,\n      emptyMessage: i18n.t('Local storage empty'),\n      selectButtonLabel: i18n.t('Select all local storage items'),\n      deselectButtonLabel: i18n.t('Deselect all local storage items'),\n      headline: i18n.t('Local storage'),\n      storageKeys: localStorageKeys,\n      storageName: \"localStorageKeys\"\n    }), /*#__PURE__*/React.createElement(FormSection, {\n      form: form,\n      emptyMessage: i18n.t('Session storage empty'),\n      selectButtonLabel: i18n.t('Select all session storage items'),\n      deselectButtonLabel: i18n.t('Deselect all session storage items'),\n      headline: i18n.t('Session storage'),\n      storageKeys: sessionStorageKeys,\n      storageName: \"sessionStorageKeys\"\n    }), /*#__PURE__*/React.createElement(FormSection, {\n      form: form,\n      emptyMessage: i18n.t('No indexed databases'),\n      selectButtonLabel: i18n.t('Select all databases'),\n      deselectButtonLabel: i18n.t('Deselect all databases'),\n      headline: i18n.t('Indexed database'),\n      storageKeys: indexedDatabaseKeys,\n      storageName: \"indexedDatabaseKeys\"\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.formErrors\n    }, errors[FORM_ERROR] && submitFailed && /*#__PURE__*/React.createElement(Help, {\n      error: true\n    }, errors[FORM_ERROR])), /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(Button, {\n      disabled: !!errors[FORM_ERROR],\n      destructive: true,\n      type: \"submit\",\n      dataTest: \"dhis2-cachecleaner-clear-bottom\"\n    }, i18n.t('Clear all selected items'))));\n  });\n};\nClearForm.defaultProps = {\n  initialValues: {\n    localStorageKeys: [],\n    sessionStorageKeys: [],\n    indexedDatabaseKeys: []\n  }\n};\nClearForm.propTypes = {\n  indexedDatabaseKeys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  localStorageKeys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sessionStorageKeys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.shape({\n    indexedDatabaseKeys: PropTypes.arrayOf(PropTypes.string),\n    localStorageKeys: PropTypes.arrayOf(PropTypes.string),\n    sessionStorageKeys: PropTypes.arrayOf(PropTypes.string)\n  })\n};","import { deleteDb } from './deleteDb.js';\n\n/**\n * @param {string} name\n * @returns {Promise.<bool>}\n */\nexport const dbExists = name => new Promise((resolve, reject) => {\n  let alreadyExists = true;\n  const request = window.indexedDB.open(name);\n  request.onsuccess = () => {\n    request.result.close();\n    if (!alreadyExists) {\n      deleteDb(name).then(() => resolve(false));\n    } else {\n      resolve(true);\n    }\n  };\n  request.onerror = error => reject(error);\n  request.onupgradeneeded = () => alreadyExists = false;\n});","import { dbExists } from './dbExists.js';\nexport const deleteDb = function (name) {\n  let succeedWhenNonExistant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return dbExists(name).then(exists => {\n    if (exists) {\n      return new Promise((resolve, reject) => {\n        const request = window.indexedDB.deleteDatabase(name);\n        request.onsuccess = resolve;\n        request.onerror = reject;\n      });\n    }\n    return succeedWhenNonExistant ? Promise.resolve() : Promise.reject();\n  });\n};","import { dbExists } from './dbExists.js';\nimport { getKeyFromObjectStore } from './getKeyFromObjectStore.js';\nimport { openDb } from './openDb.js';\nconst userCachesStoreName = 'userCaches';\nexport const getCaptureAppUserDatabases = () => dbExists('dhis2ca').then(async captureDbExists => {\n  let db;\n  let dbNames = [];\n  if (captureDbExists) {\n    try {\n      db = await openDb('dhis2ca');\n      const data = await getKeyFromObjectStore(db, userCachesStoreName, 'accessHistory');\n      if (data && data.values) {\n        dbNames = data.values;\n      }\n    } catch (e) {\n      dbNames = [];\n    } finally {\n      db && db.close();\n    }\n  }\n  return dbNames;\n});","/**\n * @param {string} name\n * @returns {Promise.<IDBDatabase>}\n */\nexport const openDb = name => new Promise((resolve, reject) => {\n  const request = window.indexedDB.open(name);\n  request.onsuccess = () => resolve(request.result);\n  request.onerror = reject;\n});","export const getKeyFromObjectStore = (db, storeName, key) => new Promise((resolve, reject) => {\n  try {\n    const request = db.transaction(storeName).objectStore(storeName).get(key);\n    request.onsuccess = event => resolve(event.target.result);\n    request.onerror = reject;\n  } catch (e) {\n    reject(e);\n  }\n});","export const dhis2DatabaseNames = ['dhis2ou', 'dhis2', 'dhis2tc', 'dhis2ec', 'dhis2de', 'dhis2er', 'dhis2ca'];","import { useEffect, useState } from 'react';\nimport { getCaptureAppUserDatabases } from './getCaptureAppUserDatabases.js';\nimport { getClearableDatabases } from './getClearableDatabases.js';\nexport const useClearableDatabaseKeys = () => {\n  const [refetchCounter, setRefetchCounter] = useState(0);\n  const refetch = () => setRefetchCounter(refetchCounter + 1);\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({\n    // Contains all databases that are listed in the\n    // \"dhis2DatabaseNames\" file that acutally exist\n    staticDatabases: [],\n    // these won't be listed, but should be deleted\n    // if the static database \"dhis2ca\" is deleted by the user\n    userDatabases: []\n  });\n  useEffect(() => {\n    const operation = async () => {\n      setLoading(true);\n      const staticDatabases = await getClearableDatabases().catch(() => []);\n      const userDatabases = await getCaptureAppUserDatabases().catch(() => []);\n      const allDatabases = {\n        staticDatabases,\n        userDatabases\n      };\n      setData(allDatabases);\n      setLoading(false);\n    };\n    operation();\n  }, [refetchCounter]);\n  return {\n    loading,\n    data,\n    refetch\n  };\n};","import { dbExists } from './dbExists.js';\nimport { dhis2DatabaseNames } from './dhis2DatabaseNames.js';\n\n/**\n * @returns {Promise.<String[]>}\n */\nexport const getClearableDatabases = () => Promise.all(dhis2DatabaseNames.map(name => dbExists(name).then(exists => exists ? name : null))).then(keys => {\n  const filtered = keys.filter(key => key);\n  return filtered;\n});","export const clearStoragesByKey = (storage, keys) => {\n  // remove keys\n  keys.forEach(key => storage.removeItem(key));\n\n  // return removal check\n  return keys.reduce((success, key) => {\n    // fail if already failed\n    if (!success) {\n      return false;\n    }\n    return storage.getItem(key) === null;\n  }, true);\n};","export const reservedStorageKeys = [\n// exclude methods and props of Storage instances\n...Object.keys(Storage.prototype),\n// custom dhis2 keys that should not be cleared\n'dhis2.menu.ui.headerBar.title', 'dhis2.menu.ui.headerBar.link', 'dhis2.menu.ui.headerBar.userStyle', 'DHIS2_BASE_URL'];","import { useCallback, useEffect, useState } from 'react';\nimport { getClearableKeys } from './getClearableKeys.js';\nexport const useClearableStorageKeys = storage => {\n  const [existingKeys, setExistingKeys] = useState([]);\n  const onStorageChange = useCallback(() => {\n    const existing = getClearableKeys(storage);\n    setExistingKeys(existing);\n  }, [storage]);\n  useEffect(() => {\n    onStorageChange();\n  }, [onStorageChange]);\n  return {\n    keys: existingKeys,\n    refetch: onStorageChange\n  };\n};","import { reservedStorageKeys } from './reservedStorageKeys.js';\n\n/**\n * @param {Storage} strage\n * @returns {String[]}\n */\nexport const getClearableKeys = storage => Object.keys(storage).filter(key => !reservedStorageKeys.includes(key));","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__uI4J6\",\"headline\":\"Home_headline__GVLIt\"};","import { clearDatabasesByKey } from '../../indexedDb/index.js';\nimport { clearStoragesByKey } from '../../storage/index.js';\nconst clearLocalStorageByKeys = keys => clearStoragesByKey(window.localStorage, keys);\nconst clearSessionStorageByKeys = keys => clearStoragesByKey(window.sessionStorage, keys);\nexport const deleteValues = async values => {\n  var _values$indexedDB;\n  if (values.localStorageKeys) {\n    clearLocalStorageByKeys(values.localStorageKeys);\n  }\n  if (values.sessionStorageKeys) {\n    clearSessionStorageByKeys(values.sessionStorageKeys);\n  }\n  if ((_values$indexedDB = values.indexedDB) !== null && _values$indexedDB !== void 0 && _values$indexedDB.length) {\n    await clearDatabasesByKey(values.indexedDB);\n  }\n};","import { deleteDb } from './deleteDb.js';\nexport const clearDatabasesByKey = keys => {\n  const allDeleteProcesses = keys.map(key => deleteDb(key, true));\n  return Promise.all(allDeleteProcesses);\n};","import i18n from '@dhis2/d2-i18n';\nimport React from 'react';\nimport { ClearForm } from '../clearForm/index.js';\nimport { useClearableDatabaseKeys } from '../indexedDb/index.js';\nimport { useClearableStorageKeys } from '../storage/index.js';\nimport styles from './Home.module.css';\nimport { deleteValues } from './Home/deleteValues.js';\nimport { formatDeleteValues } from './Home/formatDeleteValues.js';\nexport const Home = () => {\n  const {\n    keys: localStorageKeys,\n    refetch: refetchLocalStorageKeys\n  } = useClearableStorageKeys(window.localStorage);\n  const {\n    keys: sessionStorageKeys,\n    refetch: refetchSessionStorageKeys\n  } = useClearableStorageKeys(window.sessionStorage);\n  const {\n    loading,\n    error,\n    data: indexedDatabaseKeys,\n    refetch: refetchIndexedDatabaseKeys\n  } = useClearableDatabaseKeys();\n  const {\n    staticDatabases,\n    userDatabases\n  } = indexedDatabaseKeys;\n  const refetch = async () => {\n    refetchLocalStorageKeys();\n    refetchSessionStorageKeys();\n    await refetchIndexedDatabaseKeys();\n  };\n  const onSubmit = async values => {\n    const formattedValues = formatDeleteValues(values, userDatabases);\n    await deleteValues(formattedValues);\n    await refetch();\n  };\n  const showContent = !loading && !error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container\n  }, loading && /*#__PURE__*/React.createElement(\"p\", {\n    \"data-test\": \"dhis2-cachecleaner-loading\"\n  }, i18n.t('Loading clearable data...')), error && i18n.t(`Something went wrong: ${error.message}`), showContent && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.headline,\n    \"data-test\": \"dhis2-cachecleaner-homeheadline\"\n  }, i18n.t('DHIS 2 browser cache cleaner')), /*#__PURE__*/React.createElement(ClearForm\n  // keep these so the previously selected values\n  // are kept for rejection in the confirmation step\n  , {\n    localStorageKeys: localStorageKeys,\n    sessionStorageKeys: sessionStorageKeys,\n    indexedDatabaseKeys: staticDatabases,\n    onSubmit: onSubmit\n  })));\n};","export const formatDeleteValues = (values, userDatabases) => {\n  const {\n    indexedDatabaseKeys,\n    localStorageKeys,\n    sessionStorageKeys\n  } = values;\n\n  // user databases should only be cleared when the \"dhis2ca\" db is cleared\n  const shouldDeleteUserDatabases = (indexedDatabaseKeys === null || indexedDatabaseKeys === void 0 ? void 0 : indexedDatabaseKeys.includes('dhis2ca')) && (userDatabases === null || userDatabases === void 0 ? void 0 : userDatabases.length);\n  return {\n    localStorageKeys: localStorageKeys || [],\n    sessionStorageKeys: sessionStorageKeys || [],\n    indexedDB: [...(indexedDatabaseKeys || []), ...(shouldDeleteUserDatabases ? userDatabases : [])]\n  };\n};","import { CssVariables } from '@dhis2/ui';\nimport React from 'react';\nimport './locales/index.js';\nimport { Home } from './views/index.js';\nexport default function App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\"\n  }, /*#__PURE__*/React.createElement(CssVariables, {\n    colors: true,\n    spacers: true\n  }), /*#__PURE__*/React.createElement(Home, null));\n}"],"names":["namespace","i18n","arTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","es_419Translations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","neTranslations","nlTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uz_LatnTranslations","uz_UZ_CyrlTranslations","uz_UZ_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","Actions","_ref","children","React","className","styles","ButtonStrip","Field","ReactFinalForm","FormSection","deselectButtonLabel","emptyMessage","form","headline","selectButtonLabel","storageKeys","storageName","storageDataTestName","toLowerCase","length","Button","secondary","small","onClick","change","dataTest","FieldGroupFF","map","key","type","component","CheckboxFieldFF","name","label","value","Form","validate","values","errors","localStorageKeys","sessionStorageKeys","indexedDatabaseKeys","FORM_ERROR","ClearForm","onSubmit","initialValues","_ref2","handleSubmit","submitFailed","batch","selectAll","deselectAll","disabled","destructive","Help","error","defaultProps","dbExists","Promise","resolve","reject","alreadyExists","request","window","indexedDB","open","onsuccess","result","close","deleteDb","then","onerror","onupgradeneeded","succeedWhenNonExistant","arguments","undefined","exists","deleteDatabase","getCaptureAppUserDatabases","async","db","dbNames","captureDbExists","data","storeName","transaction","objectStore","get","event","target","e","getKeyFromObjectStore","dhis2DatabaseNames","useClearableDatabaseKeys","refetchCounter","setRefetchCounter","useState","loading","setLoading","setData","staticDatabases","userDatabases","useEffect","all","keys","filter","catch","operation","refetch","clearStoragesByKey","storage","forEach","removeItem","reduce","success","getItem","reservedStorageKeys","Object","Storage","prototype","useClearableStorageKeys","existingKeys","setExistingKeys","onStorageChange","useCallback","existing","includes","getClearableKeys","deleteValues","_values$indexedDB","localStorage","sessionStorage","clearSessionStorageByKeys","allDeleteProcesses","clearDatabasesByKey","Home","refetchLocalStorageKeys","refetchSessionStorageKeys","refetchIndexedDatabaseKeys","showContent","message","formattedValues","shouldDeleteUserDatabases","formatDeleteValues","App","CssVariables","colors","spacers"],"sourceRoot":""}